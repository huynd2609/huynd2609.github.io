%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1506.i029.006.P.m005.c26.beauty icons set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: lena
%%CreationDate: 6/30/2015
%%BoundingBox: 0 0 386 412
%%HiResBoundingBox: 0 0 385.8912 411.6211
%%CropBox: 0 0 385.8912 411.6211
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.2 x682 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-06-30T08:33:15+06:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-06-30T08:33:15+06:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-06-30T08:33:14+06:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>240</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9K+YNaTTNPnlSj3Sp+6j&#xA;6gFqhWf+Vag7mnTMjTYPEmB0cTW6oYcZI+rp+3yeeT67qmpW1q0epO+sWru3povAMrlaBStFYpTe&#xA;opTN5HTwxk3H0F5eeryZYxqZ8WJPl+zZN9H/ADCvZdSvJL1Q2mxIzosSfGvxBUAqdy1abnMXP2bE&#xA;QAj9bnabtmZySM/7sDoPl82fRP6kaScSvNQ3FhRhUVoR45piKNPSRNi12BLsVdirsVdir5J/N382&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:72CD1D5CD01EE511939F8D72181FF645</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:72CD1D5CD01EE511939F8D72181FF645</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:36708098541EE5118347D2BD3E9DD101</stRef:instanceID>
            <stRef:documentID>xmp.did:36708098541EE5118347D2BD3E9DD101</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4A468376CE09E511BC9AA170C978115F</stEvt:instanceID>
                  <stEvt:when>2015-06-03T13:05:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6611C0CCF00AE511BD32F8560DF78B84</stEvt:instanceID>
                  <stEvt:when>2015-06-04T22:35:04+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C2A0EC7C761AE51197C38377C12477C5</stEvt:instanceID>
                  <stEvt:when>2015-06-24T16:39:50+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D9497A75E81DE511B914A7E6773A6F23</stEvt:instanceID>
                  <stEvt:when>2015-06-29T07:43:31+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:36708098541EE5118347D2BD3E9DD101</stEvt:instanceID>
                  <stEvt:when>2015-06-29T15:11:12+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72CD1D5CD01EE511939F8D72181FF645</stEvt:instanceID>
                  <stEvt:when>2015-06-30T08:33:15+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -411.621 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 411.621 li
385.891 411.621 li
385.891 0 li
cp
clp
gsave
314.588 111.891 mo
385.891 111.891 li
385.891 187.337 li
314.588 187.337 li
314.588 111.891 li
clp
328.218 112.1 mo
328.075 112.1 li
328.151 111.963 328.194 111.891 328.194 111.891 cv
328.194 111.891 li
328.197 111.953 328.205 112.023 328.218 112.1 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
366.994 128.717 mo
366.051 127.032 364.798 125.442 362.681 124.74 cv
362.581 124.449 362.492 124.167 362.423 123.896 cv
363.017 123.396 363.676 122.957 364.36 122.575 cv
366.585 121.346 369.149 120.693 371.729 120.693 cv
372.081 120.693 372.433 120.705 372.785 120.73 cv
372.156 120.651 371.522 120.612 370.886 120.612 cv
368.574 120.612 366.249 121.129 364.136 122.146 cv
363.5 122.459 362.878 122.816 362.293 123.231 cv
362.243 122.824 362.261 122.448 362.38 122.11 cv
362.145 122.197 361.891 122.235 361.619 122.235 cv
361.061 122.235 360.432 122.074 359.748 121.852 cv
359.713 121.751 359.675 121.651 359.635 121.554 cv
360.189 120.493 361.056 119.469 362.377 118.627 cv
363.777 117.734 365.264 117.394 366.718 117.394 cv
371.37 117.394 375.677 120.878 375.677 120.878 cv
375.644 120.875 375.608 120.873 375.569 120.873 cv
374.811 120.873 372.916 121.491 371.281 123.117 cv
369.904 122.059 368.926 121.391 368.339 121.391 cv
367.806 121.391 367.595 121.941 367.702 123.249 cv
367.78 124.219 368.405 125.3 369.18 126.294 cv
368.548 127.467 367.795 128.233 366.994 128.717 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.360784 .529412 .12549 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.360784 .529412 .12549 ]
/C1 [.360784 .529412 .12549 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W#np\".Imd06%jl>=VgtLE3eC)^hbf\#H`59=(]XkV][Bm-AY,nY%Vkp/_
TV%dFR[BG,P`q5kNfB!TM26n?KS+i+IsufnH[9p\G'.nJF)l8>Df0E.Chmd"BkV-lAn>Oa@q/tW@:<PO
?sd8I?=$oC?!U`@>[1N=>[1N=>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&pq=s[Uo'u29m-<iujlGF[hqm/Cg"=m+e'cUhcHOJRaN)9<_ns4(^:h.i
\[],W['R'CYck43XK/A#W2HMhUnaZYTqJ$LSXl:?R[TY3Q^=#'Q'@MsP*1riOH>NaNfK*YN/W^RMi*CL
MM[1HLkpkCLkgb@LPLY?LPLY?L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;
~>
<~s8W-!s8W-!s8W-!s8W-!s8Vukp%%P:kiLg]gtC9-d*9_R`501#\[JiLY,eP!UnOBMR?s2%OH#0TL4k//
I=$6`F`VP@D/3iuARf.V?<gZ9=&i0s:eseZ8kDNB6pj:+5<_1k3]T/Y2Dd3F0eb76/hJV).Olkq-mp>g
,paf^,9nBV+X&!P+<VdL+<VdL+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH+!2RH
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
330.189 133.464 mo
329.34 132.908 328.511 132.193 327.728 131.286 cv
327.634 131.176 327.543 131.066 327.454 130.955 cv
327.639 130.537 327.805 130.099 327.944 129.643 cv
327.944 129.643 329.879 128.114 331.303 126.289 cv
331.632 126.894 331.99 127.484 332.376 128.057 cv
332.719 128.56 333.084 129.051 333.474 129.525 cv
332.894 130.685 332.43 131.848 331.906 132.771 cv
331.693 132.827 331.512 132.887 331.366 132.952 cv
331.121 133.06 330.703 133.241 330.189 133.464 cv
333.868 128.777 mo
333.545 128.414 333.235 128.037 332.94 127.651 cv
332.487 127.053 332.065 126.429 331.677 125.784 cv
332.27 124.938 332.712 124.055 332.778 123.249 cv
332.885 121.941 332.674 121.391 332.141 121.391 cv
331.683 121.391 330.987 121.797 330.05 122.478 cv
329.246 120.429 328.743 118.251 328.579 116.038 cv
328.623 118.294 329.018 120.55 329.741 122.705 cv
329.568 122.835 329.387 122.972 329.199 123.117 cv
327.23 124.631 326.29 125.262 325.303 126.526 cv
323.791 120.244 327.367 113.373 328.075 112.1 cv
328.218 112.1 li
328.487 113.683 330.967 118.149 336.402 119.747 cv
338.309 120.308 339.673 121.129 340.642 122.089 cv
340.037 122.286 339.478 122.421 338.975 122.421 cv
338.721 122.421 338.482 122.387 338.258 122.308 cv
338.526 123.027 338.331 123.924 338.001 124.939 cv
335.982 125.646 334.771 127.155 333.868 128.777 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.517647 .733333 .0235294 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.517647 .733333 .0235294 ]
/C1 [.517647 .733333 .0235294 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W&pq=jUTo'l,8lg!]rjl>=XhVHr?f[n['da?Cdbfe/Ma2Q!7_8*h"]Xtbc
\$i]OZa$a<Y-"e+Wi;qpVPU)`U7n6PSt;LCS!ob5R$X,)Q'@JrP*1rhOH5E^NK&mUMi3IMMM[1GLkphA
LPCP<KnY57KnP,4KS5#3KS5#3K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/
K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/K7ef/
~>
<~s8W-!s8W-!s8W-!s8W-!s8W)sr;6?dq"OLTo^hYDnF,f5mHj0(l0.?ok2k[bj5T%Ui8<DIh;$c>g=b03
f@SU(e^W'sda?Ihd*L%`c-=JVbKJ&NaiVWFa2c6?`l5p8`5KR2_ns:-_83t'^qd_"^V@Ls^:q:o]tM+l
]Y(ni]Xtef]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja
]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja
~>
<~s8W-!s8W-!s8W-!s8W-!s8Vujo^M84k2P:Qf[S<ob/_H9]t1\[Z*(.+V4sTPR?j%uNf/^IK7JDtG]n.J
DJX'#ARf+S>Zt3/;c-=b91_WB6U<t$4?>G\2)@!A0.e_).46Gf,9e9Q*ZZ4>)&O/*'bh;p&ePZc%LrpV
$k!FM#mgnD#R:S>"pP89"pP89"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5"U,&5
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
366.336 140.787 mo
365.433 140.565 364.56 140.428 363.871 140.381 cv
364.177 139.103 364.272 137.754 363.752 136.406 cv
364.509 136.455 365.236 136.469 365.823 136.469 cv
366.627 136.469 367.169 136.442 367.169 136.442 cv
367.327 136.814 367.641 137.195 368.043 137.568 cv
367.56 138.621 367.04 139.762 366.336 140.787 cv
369.252 133.013 mo
369.201 132.991 369.155 132.97 369.114 132.952 cv
368.345 132.61 366.598 132.393 364.465 132.393 cv
364.153 132.393 363.833 132.398 363.506 132.407 cv
364.824 129.664 363.432 126.929 362.681 124.74 cv
364.798 125.442 366.051 127.032 366.994 128.717 cv
367.866 130.277 368.473 131.919 369.252 133.013 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.752941 .168627 .47451 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.752941 .168627 .47451 ]
/C1 [.752941 .168627 .47451 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W)sr;6?dq"OLUp%7kHnaQ&:md9B-lg!a!ki_*jjlGI^io/kShr!;Hh;$c>
g=b03f[n^*e^`1!e'landF$=fcd0n^c-=JVbfe2Pb0%iJaN2HCa2c3>`l5p9`Pf^5`5BL1_ns:-_SX.*
_83t(_8*k%^qdb$^qdb$^qdb$^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou
~>
<~s8W-!s8W-!s8W-!s8W-!s8W#lp%%S<l/q$ah:pT4da-.[a2Gj0]XkSZZELC1W2?>`St)79Q'7>kN/EFG
KS"`'I!U$\FE2><D/3iuAn5@Z?X6o?=]\X';c6Ff:/";Q84Q-<6pj:+5<_4m4?GSa3&``R2)I*F1,:R<
0J>(3/hJY,/1`>'.k<,#.k<,#.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&pq=jRRnaGl2lKIBkio/eNgY1<2e^MpmcHXPSaMu3:_SEq"]Xt_a[^EKJ
Z*:C5XK/>!Vl$;cU7n6PSt2C@R[KP0QBd\uP*(ieO,f3YMi3ILLkph@L4t;6K7ec-JUr?%It)orI=6Nk
I!g9fH[:!aH?sj^H$O[\H$O[\G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IX
G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IX
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
350.321 122.443 mo
350.282 122.404 350.242 122.366 350.202 122.329 cv
348.844 121.062 347.461 120.637 346.119 120.637 cv
344.746 120.637 343.415 121.083 342.2 121.529 cv
341.745 121.696 341.306 121.863 340.887 122.007 cv
342.534 117.043 349.065 116.83 350.254 114.227 cv
351.459 116.759 357.751 116.912 359.635 121.554 cv
359.675 121.651 359.713 121.751 359.748 121.852 cv
359.332 121.717 358.895 121.559 358.443 121.401 cv
357.248 120.984 355.942 120.567 354.599 120.567 cv
353.225 120.567 351.812 121.004 350.44 122.325 cv
350.4 122.364 350.36 122.403 350.321 122.443 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
338.154 143.8 mo
338.061 143.769 337.97 143.736 337.88 143.702 cv
337.925 143.655 337.967 143.608 338.008 143.561 cv
338.008 143.561 338.034 143.574 338.084 143.597 cv
338.108 143.665 338.131 143.733 338.154 143.8 cv
334.391 140.728 mo
333.673 139.643 333.139 138.45 332.623 137.387 cv
332.935 137.073 333.178 136.754 333.31 136.442 cv
333.31 136.442 333.853 136.469 334.656 136.469 cv
335.371 136.469 336.292 136.448 337.221 136.369 cv
336.645 137.725 336.708 139.075 337.006 140.355 cv
336.905 140.362 336.802 140.369 336.696 140.375 cv
336.056 140.412 335.243 140.532 334.391 140.728 cv
331.906 132.771 mo
332.43 131.848 332.894 130.685 333.474 129.525 cv
333.599 129.274 333.73 129.024 333.868 128.777 cv
334.771 127.155 335.982 125.646 338.001 124.939 cv
337.304 127.085 336.005 129.76 337.202 132.415 cv
336.796 132.4 336.399 132.393 336.015 132.393 cv
334.287 132.393 332.812 132.536 331.906 132.771 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
350.581 154.313 mo
349.349 151.729 342.816 151.626 341.088 146.687 cv
341.505 146.822 341.941 146.98 342.394 147.138 cv
343.589 147.555 344.894 147.973 346.237 147.973 cv
347.611 147.973 349.023 147.536 350.394 146.215 cv
350.435 146.176 350.475 146.136 350.514 146.097 cv
350.554 146.136 350.595 146.175 350.636 146.213 cv
351.993 147.479 353.376 147.904 354.716 147.904 cv
356.09 147.904 357.42 147.457 358.634 147.011 cv
359.09 146.844 359.528 146.677 359.947 146.533 cv
358.303 151.498 351.773 151.711 350.581 154.313 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
354.716 147.904 mo
353.376 147.904 351.993 147.479 350.636 146.213 cv
350.595 146.175 350.554 146.136 350.514 146.097 cv
350.819 145.788 351.08 145.462 351.302 145.125 cv
352.107 144.608 353.313 144.203 354.325 143.494 cv
354.549 143.839 354.986 144.216 355.79 144.572 cv
356.305 144.801 356.893 144.892 357.502 144.892 cv
359.835 144.892 362.471 143.561 362.471 143.561 cv
362.558 143.661 362.652 143.76 362.754 143.855 cv
362.475 144.766 362.332 145.574 362.578 146.232 cv
362.354 146.153 362.114 146.118 361.86 146.118 cv
361.289 146.118 360.646 146.293 359.947 146.533 cv
359.528 146.677 359.09 146.844 358.634 147.011 cv
357.42 147.457 356.09 147.904 354.716 147.904 cv
355.859 141.686 mo
355.981 141.398 356.072 141.08 356.127 140.727 cv
356.247 140.754 356.364 140.769 356.478 140.769 cv
356.636 140.769 356.789 140.741 356.936 140.682 cv
357.034 140.428 357.038 140.156 356.968 139.873 cv
359.279 139.475 360.064 137.499 360.777 135.959 cv
361.638 136.207 362.722 136.339 363.752 136.406 cv
364.272 137.754 364.177 139.103 363.871 140.381 cv
363.842 140.379 363.813 140.377 363.784 140.375 cv
362.483 140.298 361.665 140.147 360.942 140.147 cv
360.436 140.147 359.976 140.221 359.429 140.447 cv
358.659 140.765 357.062 141.296 355.859 141.686 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.972549 .513725 .52549 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.972549 .513725 .52549 ]
/C1 [.972549 .513725 .52549 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W)trr2orrr2orrVc]nrVc]nrVcZlr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9f
qYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&pq=jUTo'l,8lfmWqjQ#4WhV?l=f[eU%da6=bbf\&K`l5m5_8*du]XkY`
\$iZMZE^X;Y,n\(WMl_lV50l\TqJ$LSt2C@R[KS2Q^3o%P`q;oOcb`dO,f6[N/W[QMMd7IM26tCLPLV=
L4t>8KS5#3KS+o0K7ef/K7ef/JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+
JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+JqAT+
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&pq=s[Uo'u29m-<ftjlGFZhqd)Ag"4g)e'ZOgc-4>PaMu3;_SO%&]tCtg
\[T#T['R'CYHG"/X/`.tVl$;dUnaZXTV%gHSXc1<R@0G/Q^3o%P`q;oOcb`eO,o<]NK&mUMi3LNMMd7I
M26tDLPLY?LPCP<L5(G;L5(G;KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57
KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
360.84 132.598 mo
360.075 131.05 359.289 128.939 356.876 128.564 cv
356.942 128.279 356.934 128.007 356.832 127.754 cv
356.69 127.699 356.543 127.674 356.392 127.674 cv
356.27 127.674 356.145 127.691 356.017 127.723 cv
355.529 124.866 352.637 124.338 351.124 123.4 cv
350.898 123.067 350.631 122.746 350.321 122.443 cv
350.36 122.403 350.4 122.364 350.44 122.325 cv
351.812 121.004 353.225 120.567 354.599 120.567 cv
355.942 120.567 357.248 120.984 358.443 121.401 cv
358.895 121.559 359.332 121.717 359.748 121.852 cv
360.432 122.074 361.061 122.235 361.619 122.235 cv
361.891 122.235 362.145 122.197 362.38 122.11 cv
362.261 122.448 362.243 122.824 362.293 123.231 cv
362.319 123.444 362.364 123.666 362.423 123.896 cv
362.492 124.167 362.581 124.449 362.681 124.74 cv
363.432 126.929 364.824 129.664 363.506 132.407 cv
362.859 132.426 362.186 132.465 361.503 132.525 cv
361.267 132.546 361.046 132.57 360.84 132.598 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
340.02 132.657 mo
339.713 132.603 339.366 132.559 338.976 132.525 cv
338.373 132.472 337.779 132.436 337.202 132.415 cv
336.005 129.76 337.304 127.085 338.001 124.939 cv
338.331 123.924 338.526 123.027 338.258 122.308 cv
338.482 122.387 338.721 122.421 338.975 122.421 cv
339.478 122.421 340.037 122.286 340.642 122.089 cv
340.723 122.063 340.805 122.035 340.887 122.007 cv
341.306 121.863 341.745 121.696 342.2 121.529 cv
343.415 121.083 344.746 120.637 346.119 120.637 cv
347.461 120.637 348.844 121.062 350.202 122.329 cv
350.242 122.366 350.282 122.404 350.321 122.443 cv
350.631 122.746 350.898 123.067 351.124 123.4 cv
350.758 123.173 350.473 122.922 350.322 122.608 cv
349.578 124.231 345.26 124.257 344.708 127.812 cv
344.591 127.785 344.476 127.771 344.364 127.771 cv
344.206 127.771 344.053 127.799 343.906 127.858 cv
343.808 128.112 343.803 128.383 343.872 128.666 cv
341.516 129.067 340.744 131.105 340.02 132.657 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
346.237 147.973 mo
344.894 147.973 343.589 147.555 342.394 147.138 cv
341.941 146.98 341.505 146.822 341.088 146.687 cv
340.405 146.465 339.776 146.304 339.218 146.304 cv
338.946 146.304 338.691 146.342 338.455 146.431 cv
338.711 145.706 338.501 144.811 338.154 143.8 cv
338.131 143.733 338.108 143.665 338.084 143.597 cv
338.53 143.812 340.877 144.892 342.977 144.892 cv
343.586 144.892 344.174 144.801 344.69 144.572 cv
345.67 144.137 346.105 143.673 346.272 143.271 cv
347.797 144.502 349.986 144.83 350.511 145.931 cv
350.656 145.614 350.938 145.358 351.302 145.125 cv
351.08 145.462 350.819 145.788 350.514 146.097 cv
350.475 146.136 350.435 146.176 350.394 146.215 cv
349.023 147.536 347.611 147.973 346.237 147.973 cv
345.132 141.851 mo
343.915 141.461 341.936 140.813 341.05 140.447 cv
340.504 140.221 340.044 140.147 339.537 140.147 cv
338.874 140.147 338.13 140.274 337.006 140.355 cv
336.708 139.075 336.645 137.725 337.221 136.369 cv
338.204 136.285 339.195 136.136 339.962 135.878 cv
340.737 137.434 341.51 139.602 343.965 139.978 cv
343.899 140.264 343.908 140.537 344.01 140.79 cv
344.15 140.844 344.296 140.869 344.446 140.869 cv
344.566 140.869 344.689 140.853 344.814 140.822 cv
344.88 141.205 344.989 141.545 345.132 141.851 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
350.511 145.931 mo
349.986 144.83 347.797 144.502 346.272 143.271 cv
346.53 142.65 346.153 142.175 346.153 142.175 cv
346.153 142.175 345.737 142.045 345.132 141.851 cv
344.989 141.545 344.88 141.205 344.814 140.822 cv
345.413 140.674 346.062 140.192 346.699 139.551 cv
347.448 139.164 348.068 138.581 348.573 137.943 cv
347.711 139.997 347.082 142.303 348.127 143.118 cv
350.19 142.793 350.415 137.197 350.426 135.075 cv
350.472 137.196 350.791 142.789 352.857 143.081 cv
353.885 142.25 353.222 139.962 352.33 137.925 cv
352.848 138.556 353.479 139.127 354.237 139.5 cv
354.879 140.123 355.53 140.589 356.127 140.727 cv
356.072 141.08 355.981 141.398 355.859 141.686 cv
354.99 141.967 354.327 142.175 354.327 142.175 cv
354.327 142.175 353.856 142.768 354.325 143.494 cv
353.313 144.203 352.107 144.608 351.302 145.125 cv
350.938 145.358 350.656 145.614 350.511 145.931 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 255 255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
356.968 139.873 mo
356.501 137.982 352.706 135.593 351.116 134.664 cv
352.536 135.443 355.802 137.105 357.835 137.105 cv
358.46 137.105 358.968 136.949 359.27 136.561 cv
358.945 134.499 353.343 134.274 351.223 134.263 cv
353.342 134.217 358.939 133.9 359.233 131.834 cv
358.933 131.464 358.445 131.314 357.848 131.314 cv
356.781 131.314 355.366 131.795 354.057 132.369 cv
354.688 131.853 355.261 131.223 355.636 130.468 cv
356.266 129.821 356.737 129.165 356.876 128.564 cv
359.289 128.939 360.075 131.05 360.84 132.598 cv
358.103 132.971 358.033 133.972 359.454 135.308 cv
359.748 135.585 360.215 135.797 360.777 135.959 cv
360.064 137.499 359.279 139.475 356.968 139.873 cv
354.237 139.5 mo
353.479 139.127 352.848 138.556 352.33 137.925 cv
351.813 136.744 351.218 135.648 350.831 134.97 cv
351.488 136.052 352.841 138.146 354.237 139.5 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
351.11 133.863 mo
352.186 133.211 354.278 131.862 355.636 130.468 cv
355.261 131.223 354.688 131.853 354.057 132.369 cv
352.877 132.886 351.784 133.479 351.11 133.863 cv
350.815 133.571 mo
351.834 131.714 354.359 126.707 352.714 125.422 cv
350.649 125.744 350.423 131.331 350.413 133.457 cv
350.366 131.332 350.046 125.75 347.985 125.459 cv
346.953 126.292 347.62 128.587 348.514 130.626 cv
347.998 129.995 347.367 129.422 346.611 129.047 cv
345.965 128.418 345.308 127.948 344.708 127.812 cv
345.26 124.257 349.578 124.231 350.322 122.608 cv
350.473 122.922 350.758 123.173 351.124 123.4 cv
352.637 124.338 355.529 124.866 356.017 127.723 cv
354.128 128.195 351.744 131.982 350.815 133.571 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
343.965 139.978 mo
341.51 139.602 340.737 137.434 339.962 135.878 cv
340.408 135.728 340.778 135.541 341.026 135.308 cv
342.377 134.037 342.38 133.069 340.02 132.657 cv
340.744 131.105 341.516 129.067 343.872 128.666 cv
344.337 130.554 348.126 132.941 349.718 133.872 cv
348.297 133.092 345.038 131.434 343.008 131.434 cv
342.384 131.434 341.876 131.591 341.574 131.979 cv
341.896 134.036 347.474 134.264 349.603 134.276 cv
347.474 134.322 341.899 134.64 341.608 136.704 cv
341.907 137.075 342.396 137.226 342.994 137.226 cv
345.021 137.226 348.305 135.488 349.727 134.677 cv
348.152 135.632 344.403 138.08 343.965 139.978 cv
346.699 139.551 mo
348.067 138.175 349.379 136.07 350.017 134.979 cv
349.643 135.661 349.069 136.76 348.573 137.943 cv
348.068 138.581 347.448 139.164 346.699 139.551 cv
350.005 133.566 mo
349.349 132.484 348.002 130.399 346.611 129.047 cv
347.367 129.422 347.998 129.995 348.514 130.626 cv
349.029 131.8 349.62 132.89 350.005 133.566 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
356.478 140.769 mo
356.364 140.769 356.247 140.754 356.127 140.727 cv
355.53 140.589 354.879 140.123 354.237 139.5 cv
352.841 138.146 351.488 136.052 350.831 134.97 cv
350.582 134.533 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 350.681 134.425 351.116 134.664 cv
352.706 135.593 356.501 137.982 356.968 139.873 cv
357.038 140.156 357.034 140.428 356.936 140.682 cv
356.789 140.741 356.636 140.769 356.478 140.769 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
357.835 137.105 mo
355.802 137.105 352.536 135.443 351.116 134.664 cv
350.681 134.425 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 350.478 134.27 350.585 134.27 cv
350.723 134.27 350.943 134.269 351.223 134.263 cv
353.343 134.274 358.945 134.499 359.27 136.561 cv
358.968 136.949 358.46 137.105 357.835 137.105 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
350.585 134.27 mo
350.478 134.27 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 350.686 134.121 351.11 133.863 cv
351.784 133.479 352.877 132.886 354.057 132.369 cv
355.366 131.795 356.781 131.314 357.848 131.314 cv
358.445 131.314 358.933 131.464 359.233 131.834 cv
358.939 133.9 353.342 134.217 351.223 134.263 cv
350.943 134.269 350.723 134.27 350.585 134.27 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
350.419 134.27 mo
350.419 134.27 350.576 134.007 350.815 133.571 cv
351.744 131.982 354.128 128.195 356.017 127.723 cv
356.145 127.691 356.27 127.674 356.392 127.674 cv
356.543 127.674 356.69 127.699 356.832 127.754 cv
356.934 128.007 356.942 128.279 356.876 128.564 cv
356.737 129.165 356.266 129.821 355.636 130.468 cv
354.278 131.862 352.186 133.211 351.11 133.863 cv
350.686 134.121 350.419 134.27 350.419 134.27 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
350.419 134.27 mo
350.419 134.27 350.424 133.96 350.413 133.457 cv
350.423 131.331 350.649 125.744 352.714 125.422 cv
354.359 126.707 351.834 131.714 350.815 133.571 cv
350.576 134.007 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 li
350.419 134.27 li
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
350.419 134.27 mo
350.419 134.27 li
350.419 134.27 350.267 133.998 350.005 133.566 cv
349.62 132.89 349.029 131.8 348.514 130.626 cv
347.62 128.587 346.953 126.292 347.985 125.459 cv
350.046 125.75 350.366 131.332 350.413 133.457 cv
350.424 133.96 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
350.419 134.27 mo
350.419 134.27 li
350.419 134.27 350.156 134.112 349.718 133.872 cv
348.126 132.941 344.337 130.554 343.872 128.666 cv
343.803 128.383 343.808 128.112 343.906 127.858 cv
344.053 127.799 344.206 127.771 344.364 127.771 cv
344.476 127.771 344.591 127.785 344.708 127.812 cv
345.308 127.948 345.965 128.418 346.611 129.047 cv
348.002 130.399 349.349 132.484 350.005 133.566 cv
350.267 133.998 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
349.603 134.276 mo
347.474 134.264 341.896 134.036 341.574 131.979 cv
341.876 131.591 342.384 131.434 343.008 131.434 cv
345.038 131.434 348.297 133.092 349.718 133.872 cv
350.156 134.112 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 350.358 134.269 350.245 134.269 cv
350.104 134.269 349.883 134.27 349.603 134.276 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
342.994 137.226 mo
342.396 137.226 341.907 137.075 341.608 136.704 cv
341.899 134.64 347.474 134.322 349.603 134.276 cv
349.883 134.27 350.104 134.269 350.245 134.269 cv
350.358 134.269 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 350.153 134.419 349.727 134.677 cv
348.305 135.488 345.021 137.226 342.994 137.226 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
344.446 140.869 mo
344.296 140.869 344.15 140.844 344.01 140.79 cv
343.908 140.537 343.899 140.264 343.965 139.978 cv
344.403 138.08 348.152 135.632 349.727 134.677 cv
350.153 134.419 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 350.26 134.537 350.017 134.979 cv
349.379 136.07 348.067 138.175 346.699 139.551 cv
346.062 140.192 345.413 140.674 344.814 140.822 cv
344.689 140.853 344.566 140.869 344.446 140.869 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
348.127 143.118 mo
347.082 142.303 347.711 139.997 348.573 137.943 cv
349.069 136.76 349.643 135.661 350.017 134.979 cv
350.26 134.537 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 li
350.419 134.27 350.415 134.576 350.426 135.075 cv
350.415 137.197 350.19 142.793 348.127 143.118 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
352.857 143.081 mo
350.791 142.789 350.472 137.196 350.426 135.075 cv
350.415 134.576 350.419 134.27 350.419 134.27 cv
350.419 134.27 li
350.419 134.27 li
350.419 134.27 350.582 134.533 350.831 134.97 cv
351.218 135.648 351.813 136.744 352.33 137.925 cv
353.222 139.962 353.885 142.25 352.857 143.081 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
351.443 187.337 mo
351.443 187.337 li
349.731 186.578 351.101 165.901 354.928 161.35 cv
358.756 156.799 362.337 154.566 364.736 153.232 cv
367.134 151.899 367.954 150.527 367.954 150.527 cv
367.954 150.527 366.752 147.34 367.011 145.941 cv
367.011 145.941 364.192 145.199 362.754 143.855 cv
362.652 143.76 362.558 143.661 362.471 143.561 cv
362.471 143.561 359.835 144.892 357.502 144.892 cv
356.893 144.892 356.305 144.801 355.79 144.572 cv
354.986 144.216 354.549 143.839 354.325 143.494 cv
353.856 142.768 354.327 142.175 354.327 142.175 cv
354.327 142.175 354.99 141.967 355.859 141.686 cv
357.062 141.296 358.659 140.765 359.429 140.447 cv
359.976 140.221 360.436 140.147 360.942 140.147 cv
361.665 140.147 362.483 140.298 363.784 140.375 cv
363.813 140.377 363.842 140.379 363.871 140.381 cv
364.56 140.428 365.433 140.565 366.336 140.787 cv
368.364 141.286 370.538 142.21 371.083 143.486 cv
371.826 145.232 372.943 147.56 373.289 147.56 cv
373.313 147.56 373.334 147.549 373.35 147.525 cv
373.602 147.163 372.204 142.185 372.713 140.424 cv
372.713 140.424 369.664 139.068 368.043 137.568 cv
367.641 137.195 367.327 136.814 367.169 136.442 cv
367.169 136.442 366.627 136.469 365.823 136.469 cv
365.236 136.469 364.509 136.455 363.752 136.406 cv
362.722 136.339 361.638 136.207 360.777 135.959 cv
360.215 135.797 359.748 135.585 359.454 135.308 cv
358.033 133.972 358.103 132.971 360.84 132.598 cv
361.046 132.57 361.267 132.546 361.503 132.525 cv
362.186 132.465 362.859 132.426 363.506 132.407 cv
363.833 132.398 364.153 132.393 364.465 132.393 cv
366.598 132.393 368.345 132.61 369.114 132.952 cv
369.155 132.97 369.201 132.991 369.252 133.013 cv
370.559 133.586 374.893 135.427 375.949 135.988 cv
377.043 136.569 377.256 138.937 377.67 140.447 cv
377.67 140.447 377.338 137.94 377.548 136.657 cv
377.548 136.657 373.856 133.966 372.536 129.643 cv
372.536 129.643 370.604 128.116 369.18 126.294 cv
368.405 125.3 367.78 124.219 367.702 123.249 cv
367.595 121.941 367.806 121.391 368.339 121.391 cv
368.926 121.391 369.904 122.059 371.281 123.117 cv
371.281 123.117 li
373.906 125.136 374.702 125.583 376.22 128.058 cv
377.742 130.532 381.699 135.038 381.699 135.038 cv
381.699 135.038 380.674 131.648 380.849 129.831 cv
380.849 129.831 379.225 124.753 380.3 123.145 cv
380.876 122.284 381.505 121.828 382.041 121.828 cv
382.504 121.828 382.897 122.169 383.124 122.886 cv
383.613 124.431 385.172 128.411 385.204 129.587 cv
385.229 130.545 385.805 136.769 385.887 138.414 cv
385.968 140.061 384.623 142.682 383.679 145.01 cv
382.736 147.337 381.36 148.811 381.235 151.123 cv
381.109 153.436 381.243 155.577 375.459 160.871 cv
369.676 166.161 365.817 168.874 362.88 172.055 cv
355.764 179.765 351.443 187.337 351.443 187.337 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.992157 .694118 .443137 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.992157 .694118 .443137 ]
/C1 [.992157 .694118 .443137 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W)trr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&qqtg-`p\+7No'u5<md9B,lKRNqk2k[aio/hRhqm2EgY1?6f[n^)eC;sq
dF$=ecHa\Ybfe/OaiMQD`l?!9`5BL0_SO%'^V@Ls]tM(k]Xtee]",A^\@B#W\$i`R[C*EM['[3IZa7!E
ZEgdAZEga?Z*CR=Z*CR=Z*CR=Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&oq"F@NnF#Z.kiV!eiSWJGg"4g)da6=bbK@oG`P]O-^:h.h\@/fOZE^U9
XK/A"Vl$8bU7e-MSXc.:R$X,(P`q8mOH5E]N/NRMLkg_=KnP)1JUr?$IsufoI!^3dH?ja[GB\4RG'.qL
FEDSFF)l;AEcQ/>EH,u<EH,u<E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8
E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8E,]c8
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
349.037 187.337 mo
349.037 187.337 li
349.037 187.337 344.715 179.765 337.599 172.055 cv
334.663 168.874 330.803 166.161 325.02 160.871 cv
319.237 155.577 319.371 153.436 319.245 151.123 cv
319.12 148.811 317.744 147.337 316.8 145.01 cv
315.857 142.682 314.511 140.061 314.592 138.414 cv
314.674 136.769 315.251 130.545 315.276 129.587 cv
315.307 128.411 316.867 124.431 317.356 122.886 cv
317.582 122.169 317.975 121.828 318.439 121.828 cv
318.974 121.828 319.604 122.284 320.179 123.145 cv
321.254 124.753 319.63 129.831 319.63 129.831 cv
319.805 131.648 318.781 135.038 318.781 135.038 cv
318.781 135.038 322.738 130.532 324.259 128.058 cv
324.639 127.439 324.973 126.947 325.303 126.526 cv
326.29 125.262 327.23 124.631 329.199 123.117 cv
329.387 122.972 329.568 122.835 329.741 122.705 cv
329.847 122.627 329.95 122.551 330.05 122.478 cv
330.987 121.797 331.683 121.391 332.141 121.391 cv
332.674 121.391 332.885 121.941 332.778 123.249 cv
332.712 124.055 332.27 124.938 331.677 125.784 cv
331.558 125.954 331.432 126.123 331.303 126.289 cv
329.879 128.114 327.944 129.643 327.944 129.643 cv
327.805 130.099 327.639 130.537 327.454 130.955 cv
325.885 134.504 322.931 136.657 322.931 136.657 cv
323.141 137.94 322.809 140.447 322.809 140.447 cv
323.223 138.937 323.436 136.569 324.532 135.988 cv
325.385 135.535 328.382 134.244 330.189 133.464 cv
330.703 133.241 331.121 133.06 331.366 132.952 cv
331.512 132.887 331.693 132.827 331.906 132.771 cv
332.812 132.536 334.287 132.393 336.015 132.393 cv
336.399 132.393 336.796 132.4 337.202 132.415 cv
337.779 132.436 338.373 132.472 338.976 132.525 cv
339.366 132.559 339.713 132.603 340.02 132.657 cv
342.38 133.069 342.377 134.037 341.026 135.308 cv
340.778 135.541 340.408 135.728 339.962 135.878 cv
339.195 136.136 338.204 136.285 337.221 136.369 cv
336.292 136.448 335.371 136.469 334.656 136.469 cv
333.853 136.469 333.31 136.442 333.31 136.442 cv
333.178 136.754 332.935 137.073 332.623 137.387 cv
331.064 138.958 327.766 140.424 327.766 140.424 cv
328.276 142.185 326.877 147.163 327.129 147.525 cv
327.146 147.549 327.166 147.56 327.19 147.56 cv
327.536 147.56 328.654 145.232 329.397 143.486 cv
329.963 142.158 332.295 141.211 334.391 140.728 cv
335.243 140.532 336.056 140.412 336.696 140.375 cv
336.802 140.369 336.905 140.362 337.006 140.355 cv
338.13 140.274 338.874 140.147 339.537 140.147 cv
340.044 140.147 340.504 140.221 341.05 140.447 cv
341.936 140.813 343.915 141.461 345.132 141.851 cv
345.737 142.045 346.153 142.175 346.153 142.175 cv
346.153 142.175 346.53 142.65 346.272 143.271 cv
346.105 143.673 345.67 144.137 344.69 144.572 cv
344.174 144.801 343.586 144.892 342.977 144.892 cv
340.877 144.892 338.53 143.812 338.084 143.597 cv
338.034 143.574 338.008 143.561 338.008 143.561 cv
337.967 143.608 337.925 143.655 337.88 143.702 cv
336.502 145.142 333.468 145.941 333.468 145.941 cv
333.727 147.34 332.526 150.527 332.526 150.527 cv
332.526 150.527 333.345 151.899 335.744 153.232 cv
338.142 154.566 341.723 156.799 345.551 161.35 cv
349.378 165.901 350.749 186.578 349.037 187.337 cv
level3{
gsave
clp
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .623529 .360784 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .623529 .360784 ]
/C1 [.929412 .623529 .360784 ]
/N 1 
>>
]
/Bounds [.0666666 .575758 ]
/Encode [0 1 1 0 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.33658e-6 -76.332 -76.332 -3.33658e-6 350.821 188.432 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W)trr)forVZTkr;6Bgqtg0cqYL$`q>'g\q"XXYp\4FVp@e4Rp@\+Op%@tL
o^qeJoCMSFoCMPDo()ABo'u8?naZ/>nF5r:nF5r:n*f`6n*f`6n*f]4mdBN2mdBN2mdBN1mHs<.mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
~>
<~s8W-!s8W-!s8W-!s8W-!s8W&qqYBp[p%7hFnF#]1lKRNqjlGI]iSWMJgtUQ8f@JL%e'cXjcd'eZbK@rJ
a2Z*:_ns:,^q[Us]Y(kf\[f5Z[^NTNZa6sBZ*:I9Y-+n/XK8J&Wi;trW2QVlVP^2dV50o_USFTYU8"?T
TqS-PTV.sNT:_aJT:_aJT:_aJSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OF
St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OF
~>
<~s8W-!s8W-!s8W-!s8W-!s8W#np\".Imd06%jl>=VgtLE3eC)^hbf\#H`59=(]XkV][Bm-AY,nY%Vkp/_
TV%dFR[BG,P`q5kNfB!TM26n?KS+i+IsufnH[9p\G'.nJF)l8>Df0E.Chmd"BkV-lAn>Oa@q/tW@:<PO
?sd8I?=$oC?!U`@>[1N=>[1N=>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
grestore
222.12 351.832 mo
221.483 354.484 221.272 363.188 223.922 366.159 cv
226.577 369.131 226.471 367.857 226.258 370.617 cv
226.046 373.376 224.772 376.347 226.895 376.454 cv
229.017 376.561 230.08 376.454 229.761 377.516 cv
229.444 378.577 229.496 379.001 230.875 378.79 cv
232.254 378.577 232.786 377.834 232.307 378.259 cv
231.587 378.899 230.647 380.249 231.867 380.642 cv
233.714 381.236 233.37 381.124 233.687 382.186 cv
234.007 383.247 234.749 384.307 236.553 383.776 cv
238.358 383.247 242.67 378.507 244.584 378.507 cv
246.424 378.507 247.274 380.451 246.531 383.918 cv
245.789 387.386 239.419 391.844 239.419 394.498 cv
239.419 394.498 262.133 383.884 259.479 376.137 cv
256.825 368.388 253.325 360.216 252.369 359.578 cv
251.413 358.941 222.12 351.832 222.12 351.832 cv
cp
false sop
.992157 .694118 .443137 rgb
f
222.12 351.832 mo
226.125 357 230.617 355.864 240.713 360.109 cv
250.811 364.354 254.209 370.582 253.923 376.526 cv
253.641 382.469 248.016 387.118 240.713 392.058 cv
231.14 398.532 231.283 407.094 233.546 411.621 cv
233.546 411.621 231.14 402.14 244.088 399.735 cv
258.487 397.058 266.972 389.02 265.953 375.181 cv
264.89 360.746 254.49 356.996 247.416 354.732 cv
240.339 352.468 222.12 351.832 221.709 343.34 cv
221.709 343.34 218.83 347.585 222.12 351.832 cv
cp
.360784 .529412 .12549 rgb
f
220.576 346.776 mo
220.79 345.447 221.132 344.503 221.19 344.346 cv
220.93 344.95 220.665 345.79 220.576 346.776 cv
cp
.517647 .733333 .0235294 rgb
f
265.953 375.181 mo
264.89 360.746 254.49 356.996 247.416 354.732 cv
240.339 352.468 222.12 351.832 221.709 343.34 cv
221.709 343.34 221.466 343.706 221.205 344.314 cv
219.832 353.097 238.753 354.474 245.26 356.558 cv
251.767 358.64 261.336 362.089 262.31 375.364 cv
263.248 388.096 255.445 395.488 242.2 397.949 cv
230.402 400.141 233.146 410.648 233.197 410.84 cv
233.308 411.112 233.423 411.374 233.546 411.621 cv
233.546 411.621 231.14 402.14 244.088 399.735 cv
258.487 397.058 266.972 389.02 265.953 375.181 cv
cp
f
230.357 337.945 mo
225.494 336.396 225.378 333.434 225.378 333.434 cv
220.732 343.658 227.992 348.569 231.94 349.07 cv
232.518 349.16 li
232.292 348.938 li
231.213 347.807 230.28 346.555 229.448 345.245 cv
227.792 342.619 226.528 339.778 225.489 336.866 cv
226.623 339.738 227.976 342.532 229.705 345.077 cv
230.571 346.345 231.531 347.552 232.624 348.623 cv
232.805 348.804 233 348.971 233.192 349.142 cv
236.237 345.252 235.173 339.481 230.357 337.945 cv
cp
.360784 .529412 .12549 rgb
f
248.286 345.726 mo
249.668 340.565 252.764 340.2 252.764 340.2 cv
241.825 336.238 237.036 344.161 236.707 348.288 cv
236.643 348.896 li
236.862 348.644 li
237.995 347.431 239.261 346.362 240.591 345.394 cv
243.258 343.458 246.176 341.917 249.174 340.598 cv
246.22 342.01 243.361 343.644 240.78 345.644 cv
239.494 346.645 238.277 347.74 237.209 348.958 cv
237.031 349.163 236.865 349.377 236.694 349.589 cv
240.921 352.42 246.916 350.837 248.286 345.726 cv
cp
f
256.391 347.586 mo
252.534 349.679 250.567 348.041 250.567 348.041 cv
254.388 356.799 261.817 355.175 264.461 353.037 cv
264.863 352.732 li
264.769 352.736 264.676 352.743 264.585 352.744 cv
263.224 352.755 261.869 352.602 260.542 352.359 cv
257.881 351.863 255.312 350.996 252.833 349.953 cv
255.346 350.917 257.934 351.698 260.585 352.105 cv
261.907 352.309 263.246 352.41 264.577 352.358 cv
264.798 352.35 265.022 352.329 265.247 352.312 cv
264.543 348.192 260.211 345.514 256.391 347.586 cv
cp
f
266.917 358.923 mo
264.065 358.697 263.571 357.104 263.571 357.104 cv
262.55 363.248 267.187 365.001 269.393 364.773 cv
269.72 364.748 li
269.565 364.655 li
268.816 364.178 268.13 363.614 267.49 363.009 cv
266.21 361.793 265.115 360.405 264.131 358.954 cv
265.163 360.372 266.299 361.719 267.604 362.887 cv
268.256 363.464 268.95 363.998 269.696 364.441 cv
269.82 364.515 269.951 364.582 270.08 364.653 cv
271.158 362.15 269.743 359.147 266.917 358.923 cv
cp
f
268.996 371.541 mo
270.025 370.105 269.474 369.227 269.474 369.227 cv
272.773 371.243 271.749 374.137 270.761 375.085 cv
270.619 375.228 li
270.637 375.118 li
270.71 374.568 270.717 374.02 270.691 373.471 cv
270.626 372.375 270.41 371.296 270.119 370.241 cv
270.377 371.304 270.557 372.388 270.586 373.473 cv
270.599 374.02 270.573 374.563 270.484 375.093 cv
270.468 375.179 270.448 375.269 270.432 375.36 cv
268.822 374.851 267.97 372.965 268.996 371.541 cv
cp
f
255.609 338.903 mo
254.196 335.88 252.239 335.976 252.239 335.976 cv
258.614 332.404 262.431 336.771 263.079 339.273 cv
263.18 339.641 li
263.016 339.51 li
262.183 338.884 261.284 338.358 260.355 337.899 cv
258.492 336.986 256.514 336.346 254.51 335.85 cv
256.499 336.404 258.446 337.114 260.263 338.071 cv
261.171 338.558 262.042 339.099 262.838 339.741 cv
262.964 339.847 263.094 339.962 263.222 340.07 cv
260.897 342.253 257.004 341.906 255.609 338.903 cv
cp
f
233.293 332.5 mo
234.522 329.476 233.152 328.136 233.152 328.136 cv
239.948 330.332 239.356 335.973 237.993 338.099 cv
237.799 338.417 li
237.786 338.213 li
237.68 337.195 237.457 336.203 237.168 335.231 cv
236.583 333.292 235.726 331.445 234.752 329.681 cv
235.675 331.477 236.464 333.344 236.983 335.281 cv
237.24 336.255 237.429 337.242 237.499 338.233 cv
237.507 338.395 237.512 338.565 237.52 338.731 cv
234.411 338.513 232.071 335.495 233.293 332.5 cv
cp
f
247.338 332.591 mo
248.675 330.317 250.208 330.536 250.208 330.536 cv
245.458 327.257 242.133 330.407 241.437 332.328 cv
241.33 332.607 li
241.467 332.517 li
242.174 332.084 242.917 331.739 243.683 331.448 cv
245.217 330.87 246.817 330.512 248.431 330.266 cv
246.825 330.561 245.24 330.972 243.741 331.591 cv
242.991 331.905 242.265 332.268 241.594 332.711 cv
241.487 332.786 241.377 332.867 241.264 332.943 cv
242.932 334.83 246.019 334.847 247.338 332.591 cv
cp
f
6.57178 19.9243 mo
5.95654 22.4883 5.75146 30.897 8.31396 33.7676 cv
10.8779 36.6387 10.7764 35.4082 10.5698 38.0752 cv
10.3652 40.7412 9.13574 43.6123 11.1855 43.7148 cv
13.2358 43.8174 14.2622 43.7148 13.9551 44.7402 cv
13.647 45.7656 13.6982 46.1758 15.0317 45.9707 cv
16.3647 45.7656 16.8779 45.0474 16.4155 45.4585 cv
15.7197 46.0776 14.811 47.3818 15.9912 47.7607 cv
17.7744 48.3345 17.4409 48.2271 17.748 49.2529 cv
18.0562 50.2783 18.7739 51.3037 20.5176 50.79 cv
22.2607 50.2783 26.4282 45.6978 28.2769 45.6978 cv
30.0547 45.6978 30.875 47.5762 30.1563 50.9263 cv
29.439 54.2773 23.2856 58.5835 23.2856 61.147 cv
23.2856 61.147 45.23 50.8926 42.667 43.4082 cv
40.1045 35.9209 36.7197 28.0244 35.7969 27.4097 cv
34.875 26.7939 6.57178 19.9243 6.57178 19.9243 cv
cp
.992157 .694118 .443137 rgb
f
6.57178 19.9243 mo
10.4419 24.9189 14.7817 23.8208 24.5376 27.9229 cv
34.293 32.0254 37.5752 38.0405 37.3027 43.7832 cv
37.0269 49.5254 31.5923 54.0186 24.5376 58.7896 cv
15.2886 65.0439 15.4258 73.3169 17.6123 77.6914 cv
17.6123 77.6914 15.2886 68.5308 27.7983 66.207 cv
41.7109 63.623 49.9058 55.8555 48.9229 42.4849 cv
47.8979 28.5376 37.8481 24.9146 31.0127 22.7275 cv
24.1758 20.5396 6.57178 19.9243 6.17627 11.7202 cv
6.17627 11.7202 3.39209 15.8223 6.57178 19.9243 cv
cp
.0823529 .607843 .819608 rgb
f
5.08105 15.0415 mo
5.28613 13.7563 5.61572 12.8433 5.67432 12.6924 cv
5.42383 13.2754 5.16406 14.0879 5.08105 15.0415 cv
cp
.517647 .733333 .0235294 rgb
f
48.9229 42.4849 mo
47.8979 28.5376 37.8481 24.9146 31.0127 22.7275 cv
24.1758 20.5396 6.57178 19.9243 6.17627 11.7202 cv
6.17627 11.7202 5.94092 12.0728 5.6875 12.6626 cv
4.36084 21.1465 22.6431 22.4785 28.9302 24.4902 cv
35.2183 26.5029 44.4614 29.8345 45.4048 42.6616 cv
46.3071 54.9624 38.77 62.105 25.9736 64.4829 cv
14.5723 66.6006 17.2246 76.752 17.2749 76.9385 cv
17.3809 77.2002 17.4927 77.4531 17.6123 77.6914 cv
17.6123 77.6914 15.2886 68.5308 27.7983 66.207 cv
41.7109 63.623 49.9058 55.8555 48.9229 42.4849 cv
cp
.254902 .741176 .941176 rgb
f
11.8765 16.4546 mo
16.2583 18.918 22.5688 18.7612 22.6113 13.5664 cv
22.6504 8.52832 17.229 8.10596 15.0176 9.46729 cv
13.4253 10.4482 9.8252 13.5508 7.17578 12.4819 cv
7.17578 12.4819 9.22363 14.9624 11.8765 16.4546 cv
cp
f
13.7383 16.4746 mo
14.6636 16.5356 15.5586 16.5107 16.4307 16.4385 cv
17.2954 16.3506 18.1436 16.2017 18.8828 15.8672 cv
19.6289 15.5527 20.2402 15.0376 20.6733 14.3423 cv
21.1089 13.6426 21.3403 12.7793 21.5361 11.8662 cv
21.7778 12.7642 21.793 13.7666 21.4146 14.708 cv
21.2388 15.1812 20.9351 15.6113 20.5776 15.9824 cv
20.208 16.3462 19.7676 16.627 19.3086 16.8374 cv
18.373 17.2324 17.3794 17.3408 16.4326 17.2627 cv
15.4878 17.1792 14.5493 16.9604 13.7383 16.4746 cv
cp
.572549 .87451 1 rgb
f
23.4976 19.0405 mo
23.4976 19.0405 29.856 18.8643 32.5054 20.6309 cv
35.1548 22.397 37.0356 20.8516 36.7446 19.0356 cv
36.2729 16.0967 29.1631 15.0923 23.4976 19.0405 cv
cp
.254902 .741176 .941176 rgb
f
44.2295 28.2505 mo
44.2295 28.2505 46.9453 30.6489 47.3608 32.415 cv
47.7769 34.1812 49.1602 34.2666 49.7456 33.3994 cv
50.6929 31.9922 48.124 28.811 44.2295 28.2505 cv
cp
f
32.8872 14.3496 mo
32.8872 14.3496 35.3315 12.9927 36.0732 10.2266 cv
36.5435 8.47412 37.8501 7.76221 38.7466 8.2998 cv
41.2075 9.77734 36.7891 13.8403 32.8872 14.3496 cv
cp
f
50.7798 36.208 mo
50.7798 36.208 51.6064 38.5659 52.627 39.2905 cv
53.6465 40.0146 53.3433 40.9209 52.6357 41.0693 cv
51.4917 41.3081 50.1255 38.8428 50.7798 36.208 cv
cp
f
23.4976 16.8242 mo
27.3003 11.5601 25.3926 5.17529 29.7363 4.01758 cv
34.0786 2.86182 36.8896 9.51025 31.4336 13.6177 cv
28.0161 16.1909 23.4976 16.8242 23.4976 16.8242 cv
cp
f
7.17578 11.1523 mo
7.17578 11.1523 8.68066 11.5171 10.8389 10.7275 cv
13.4341 9.77979 17.7236 7.24414 17.1978 4.91211 cv
16.4336 1.52002 12.3696 3.64648 11.6641 5.73535 cv
11.2695 6.89941 9.7666 10.5903 7.17578 11.1523 cv
cp
f
19.2246 5.6499 mo
22.9873 8.33643 23.7178 11.2817 23.9102 12.6924 cv
23.9102 12.6924 27.3105 6.05273 24.9106 2.90918 cv
23.1753 .635742 20.6128 .318359 19.1997 1.47998 cv
17.9106 2.53906 18.0083 4.78369 19.2246 5.6499 cv
cp
f
36.7744 22.1016 mo
39.7305 23.749 46.418 22.6172 46.3145 25.1875 cv
46.2119 27.7593 42.5566 26.8315 40.8081 25.6997 cv
39.0591 24.5679 36.7744 22.1016 36.7744 22.1016 cv
cp
f
37.981 21.2656 mo
41.1714 19.6689 41.3237 15.3325 44.2393 16.4585 cv
47.1558 17.584 45.7388 20.6309 43.5327 21.2656 cv
41.4395 21.8691 37.981 21.2656 37.981 21.2656 cv
cp
f
gsave
105.277 323.545 mo
164.342 323.545 li
164.342 405.351 li
105.277 405.351 li
105.277 323.545 li
clp
157.788 323.703 mo
156.715 323.703 li
156.898 323.599 157.083 323.545 157.265 323.545 cv
157.444 323.545 157.62 323.597 157.788 323.703 cv
1 1 1 rgb
f
138.964 395.351 mo
139.025 388.542 138.26 380.259 136.202 377.336 cv
135.705 376.632 135.21 375.973 134.719 375.357 cv
134.899 373.184 135.28 371.374 135.929 370.251 cv
139.11 364.743 142.464 361.725 144.74 359.87 cv
147.016 358.018 147.625 356.419 147.625 356.419 cv
147.625 356.419 145.762 353.287 145.774 351.766 cv
145.774 351.766 142.21 351.474 140.546 350.108 cv
140.546 350.108 137.323 352.525 134.619 352.525 cv
134.304 352.525 133.996 352.492 133.701 352.419 cv
130.873 351.721 131.711 350.168 131.711 350.168 cv
131.711 350.168 132.119 349.957 132.711 349.644 cv
133.14 349.528 133.502 349.373 133.76 349.169 cv
133.859 349.09 133.953 349.012 134.04 348.935 cv
135.066 348.383 136.171 347.771 136.762 347.395 cv
138.057 346.571 138.98 346.783 141.334 346.504 cv
141.782 346.452 142.315 346.423 142.894 346.423 cv
145.358 346.423 148.641 346.946 149.603 348.419 cv
150.697 350.096 152.278 352.297 152.674 352.297 cv
152.708 352.297 152.733 352.281 152.749 352.248 cv
152.943 351.819 150.539 346.838 150.749 344.887 cv
150.749 344.887 145.35 343.551 144.163 341.733 cv
144.163 341.733 140.944 342.468 138.39 342.468 cv
137.328 342.468 136.38 342.341 135.828 341.98 cv
133.949 340.75 133.959 339.608 137.465 338.665 cv
140.13 337.946 142.695 337.579 144.324 337.579 cv
144.839 337.579 145.26 337.616 145.562 337.689 cv
146.814 338.002 152.063 339.204 153.326 339.612 cv
154.589 340.021 155.256 342.474 155.973 343.986 cv
155.973 343.986 155.155 341.41 155.136 340.017 cv
155.136 340.017 150.745 337.875 148.547 333.564 cv
148.547 333.564 143.009 330.595 142.259 327.737 cv
141.868 326.246 142.051 325.645 142.762 325.645 cv
143.413 325.645 144.505 326.147 146.005 326.929 cv
149.148 328.565 150.068 328.888 152.131 331.209 cv
154.193 333.533 159.205 337.537 159.205 337.537 cv
159.205 337.537 157.494 334.157 157.339 332.213 cv
157.339 332.213 154.676 327.164 155.508 325.273 cv
155.854 324.488 156.279 323.951 156.715 323.703 cv
157.788 323.703 li
158.023 323.851 158.242 324.105 158.434 324.472 cv
159.238 326.01 161.625 329.908 161.877 331.141 cv
162.083 332.144 163.854 338.592 164.248 340.31 cv
164.641 342.027 163.713 345.042 163.155 347.669 cv
162.596 350.296 161.421 352.105 161.723 354.563 cv
162.024 357.022 162.563 359.253 157.462 365.909 cv
152.36 372.564 149.022 376.079 146.603 380.026 cv
142.666 386.447 140.217 392.108 138.964 395.351 cv
level3{
gsave
clp
[-3.56892e-6 -81.6475 81.6475 -3.56892e-6 134.304 405.351 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.56892e-6 -81.6475 81.6475 -3.56892e-6 134.304 405.351 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
137.539 405.351 mo
137.539 405.351 li
137.539 405.351 133.626 396.885 126.747 388.018 cv
123.91 384.358 120.043 381.114 114.365 374.946 cv
108.687 368.777 109.024 366.507 109.103 364.03 cv
109.182 361.554 107.85 359.857 107.056 357.292 cv
106.337 354.962 105.286 352.343 105.277 350.572 cv
105.277 350.523 li
105.278 350.361 105.288 350.206 105.308 350.06 cv
105.544 348.314 106.728 341.735 106.843 340.715 cv
106.984 339.464 109.01 335.367 109.671 333.764 cv
109.961 333.064 110.378 332.733 110.839 332.733 cv
111.432 332.733 112.098 333.281 112.659 334.301 cv
113.657 336.11 111.458 341.375 111.458 341.375 cv
111.481 343.325 110.08 346.847 110.08 346.847 cv
110.08 346.847 114.71 342.405 116.557 339.908 cv
118.403 337.411 119.291 337.007 122.271 335.094 cv
123.772 334.132 124.85 333.521 125.488 333.521 cv
126.117 333.521 126.318 334.117 126.075 335.563 cv
125.586 338.475 120.338 341.934 120.338 341.934 cv
118.535 346.421 114.354 348.951 114.354 348.951 cv
114.461 350.337 113.878 352.978 113.878 352.978 cv
114.457 351.407 114.9 348.905 116.121 348.384 cv
117.343 347.864 122.462 346.195 123.683 345.772 cv
124.211 345.59 125.139 345.494 126.312 345.494 cv
127.847 345.494 129.803 345.659 131.831 346.015 cv
135.206 346.605 135.497 347.65 134.04 348.935 cv
133.953 349.012 133.859 349.09 133.76 349.169 cv
133.502 349.373 133.14 349.528 132.711 349.644 cv
131.856 349.875 130.732 349.951 129.624 349.951 cv
127.501 349.951 125.437 349.672 125.437 349.672 cv
124.419 351.592 119.162 353.406 119.162 353.406 cv
119.545 355.329 117.599 360.508 117.833 360.917 cv
117.85 360.946 117.874 360.96 117.903 360.96 cv
118.285 360.96 119.675 358.601 120.621 356.82 cv
121.602 354.973 125.97 354.169 128.408 354.169 cv
128.503 354.169 128.595 354.17 128.683 354.173 cv
128.941 354.179 129.181 354.182 129.407 354.182 cv
129.722 354.182 130.009 354.177 130.273 354.172 cv
130.538 354.168 130.779 354.163 131.006 354.163 cv
131.877 354.163 132.517 354.233 133.317 354.646 cv
134.682 355.353 138.597 356.955 138.597 356.955 cv
138.597 356.955 139.573 358.427 136.817 359.376 cv
136.397 359.521 135.942 359.582 135.472 359.582 cv
132.86 359.582 129.792 357.688 129.792 357.688 cv
128.257 359.197 124.734 359.809 124.734 359.809 cv
124.883 361.323 123.31 364.609 123.31 364.609 cv
123.31 364.609 124.059 366.147 126.493 367.788 cv
128.597 369.206 131.582 371.422 134.719 375.357 cv
135.21 375.973 135.705 376.632 136.202 377.336 cv
138.26 380.259 139.025 388.542 138.964 395.351 cv
138.917 400.655 138.368 405.065 137.539 405.351 cv
level3{
gsave
clp
[-3.56892e-6 -81.6475 81.6475 -3.56892e-6 134.304 405.351 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.56892e-6 -81.6475 81.6475 -3.56892e-6 134.304 405.351 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
grestore
220.32 292.067 mo
221.677 292.056 222.681 291.826 223.829 291.382 cv
224.379 291.159 224.923 290.866 225.433 290.513 cv
225.627 290.38 li
225.834 290.221 li
225.894 290.163 li
226.148 289.934 li
226.483 289.614 226.774 289.26 226.937 289.006 cv
227.693 287.858 227.939 286.925 228.239 286.202 cv
228.519 285.469 228.796 284.91 229.153 284.414 cv
229.345 284.16 229.522 283.954 229.782 283.706 cv
230.094 283.412 230.342 283.192 230.673 282.921 cv
231.294 282.398 231.964 281.882 232.646 281.366 cv
234.013 280.322 235.441 279.279 236.838 278.11 cv
238.223 276.927 239.634 275.667 240.755 273.886 cv
241.738 272.179 242.48 270.645 243.059 268.699 cv
243.19 268.225 243.317 267.641 243.329 267.065 cv
243.343 266.346 243.23 265.84 243.102 265.332 cv
242.845 264.349 242.49 263.524 242.288 262.819 cv
242.125 262.287 242.013 261.268 241.833 260.414 cv
241.667 259.537 241.477 258.668 241.266 257.802 cv
240.418 254.337 239.192 251.102 238.884 247.781 cv
238.731 246.142 238.918 244.514 239.577 242.999 cv
240.234 241.484 241.267 240.106 242.511 238.963 cv
245.001 236.631 248.136 235.054 251.141 233.313 cv
252.641 232.435 254.149 231.513 255.415 230.296 cv
256.688 229.101 257.612 227.444 257.612 225.686 cv
257.536 227.443 256.567 229.025 255.277 230.144 cv
253.987 231.29 252.463 232.138 250.942 232.953 cv
247.889 234.568 244.667 236.018 241.959 238.353 cv
240.614 239.515 239.447 240.91 238.558 242.509 cv
237.68 244.124 237.299 246.028 237.327 247.851 cv
237.385 251.498 238.35 254.938 238.833 258.281 cv
238.957 259.12 239.061 259.96 239.142 260.804 cv
239.254 261.663 239.188 262.396 239.451 263.55 cv
239.683 264.523 239.975 265.323 240.116 266.03 cv
240.188 266.368 240.214 266.728 240.198 266.878 cv
240.175 267.171 240.102 267.435 239.993 267.797 cv
239.528 269.169 238.683 270.757 237.87 272.016 cv
237.079 273.149 235.831 274.211 234.517 275.204 cv
233.202 276.197 231.772 277.133 230.316 278.119 cv
229.589 278.616 228.853 279.117 228.113 279.675 cv
227.761 279.935 227.338 280.272 227.001 280.556 cv
226.613 280.882 226.18 281.299 225.819 281.715 cv
224.334 283.411 223.709 285.734 223.168 286.3 cv
223.089 286.403 223.083 286.372 223.117 286.363 cv
222.874 286.556 li
222.81 286.606 li
222.7 286.691 222.944 286.5 222.914 286.521 cv
222.906 286.525 li
222.887 286.537 li
222.806 286.586 li
222.595 286.711 222.363 286.823 222.107 286.911 cv
221.629 287.085 220.895 287.175 220.516 287.146 cv
220.32 292.067 li
cp
.309804 .156863 .12549 rgb
f
238.375 275.136 mo
238.062 272.335 237.437 269.729 236.455 267.153 cv
235.458 264.616 234.058 262.096 231.833 260.296 cv
231.27 259.852 230.651 259.486 230.111 259.168 cv
229.604 258.853 229.085 258.475 228.61 258.081 cv
227.643 257.282 226.772 256.352 226.03 255.32 cv
224.588 253.256 223.407 250.807 223.41 248.185 cv
223.127 250.811 224.055 253.448 225.337 255.766 cv
226.002 256.927 226.823 258.018 227.77 258.986 cv
228.25 259.476 228.749 259.927 229.31 260.361 cv
229.85 260.771 230.324 261.119 230.749 261.532 cv
232.453 263.229 233.462 265.548 234.114 267.929 cv
234.756 270.305 235.081 272.877 235.096 275.281 cv
238.375 275.136 li
cp
f
241.018 263.18 mo
243.165 262.177 244.976 260.767 246.414 258.958 cv
247.842 257.16 248.715 254.899 248.781 252.631 cv
248.769 250.448 249.009 248.302 250.03 246.398 cv
251.008 244.546 252.943 242.995 255.174 243.078 cv
252.951 242.847 250.825 244.305 249.675 246.19 cv
248.479 248.094 248.084 250.42 247.961 252.572 cv
247.767 254.671 246.85 256.634 245.467 258.17 cv
244.099 259.708 242.276 260.926 240.418 261.654 cv
241.018 263.18 li
cp
f
236.278 275.419 mo
234.993 274.299 233.667 273.333 232.26 272.434 cv
230.859 271.55 229.391 270.762 227.838 270.16 cv
226.3 269.541 224.616 269.202 222.999 269.116 cv
218.134 268.676 li
222.942 269.524 li
224.566 269.752 226.073 270.197 227.513 270.914 cv
230.361 272.326 232.927 274.367 235.131 276.595 cv
236.278 275.419 li
cp
f
238.711 248.075 mo
239.181 246.071 239.122 244.06 238.558 242.138 cv
238.02 240.214 236.747 238.53 235.333 237.29 cv
234.084 235.983 233.554 234.063 233.667 232.202 cv
233.768 230.329 234.334 228.475 235.183 226.781 cv
234.245 228.429 233.566 230.26 233.358 232.176 cv
233.142 234.084 233.558 236.161 234.884 237.712 cv
236.247 239.055 237.252 240.588 237.668 242.382 cv
238.092 244.126 238.022 246.049 237.533 247.721 cv
238.711 248.075 li
cp
f
232.063 281.087 mo
234.148 282.487 236.494 283.106 238.89 282.861 cv
241.27 282.624 243.392 281.351 244.946 279.845 cv
246.475 278.45 248.244 277.304 250.194 276.532 cv
252.137 275.764 254.253 275.308 256.387 275.424 cv
254.268 275.104 252.077 275.351 249.995 275.95 cv
247.907 276.554 245.923 277.575 244.165 278.893 cv
242.533 280.186 240.68 281.005 238.769 281.021 cv
236.898 281.063 234.945 280.279 233.597 279.164 cv
232.063 281.087 li
cp
f
258.221 218.359 mo
257.004 219.984 256.083 223.968 257.708 225.183 cv
259.331 226.397 262.89 224.386 264.106 222.76 cv
265.315 221.135 264.988 218.833 263.362 217.616 cv
261.737 216.401 259.433 216.735 258.221 218.359 cv
cp
.752941 .168627 .47451 rgb
f
264.56 224.131 mo
262.64 223.476 258.567 223.827 257.913 225.75 cv
257.259 227.669 260.276 230.431 262.197 231.083 cv
264.116 231.741 266.202 230.712 266.858 228.792 cv
267.509 226.87 266.483 224.785 264.56 224.131 cv
cp
f
260.997 231.982 mo
261.026 229.955 259.429 226.188 257.403 226.163 cv
255.375 226.137 253.678 229.856 253.651 231.885 cv
253.625 233.916 255.246 235.581 257.272 235.606 cv
259.303 235.632 260.969 234.013 260.997 231.982 cv
cp
f
252.428 230.971 mo
254.365 230.368 257.454 227.693 256.854 225.753 cv
256.25 223.815 252.19 223.356 250.253 223.954 cv
248.315 224.554 247.231 226.613 247.832 228.55 cv
248.433 230.489 250.491 231.575 252.428 230.971 cv
cp
f
250.775 222.55 mo
251.944 224.205 255.446 226.313 257.103 225.145 cv
258.765 223.979 257.945 219.97 256.775 218.313 cv
255.606 216.655 253.317 216.261 251.658 217.431 cv
250.001 218.602 249.606 220.894 250.775 222.55 cv
cp
f
256.786 225.604 mo
257.563 226.183 li
259.582 223.487 li
258.803 222.904 li
256.786 225.604 li
cp
1 1 1 rgb
f
258.859 221.947 mo
258.497 222.434 258.567 223.1 259.012 223.436 cv
259.461 223.77 260.118 223.647 260.482 223.157 cv
260.844 222.672 260.777 222.006 260.332 221.673 cv
259.883 221.337 259.224 221.459 258.859 221.947 cv
cp
f
257.139 225.015 mo
256.826 225.936 li
260.021 227.018 li
260.33 226.101 li
257.139 225.015 li
cp
f
261.263 225.86 mo
260.686 225.664 260.071 225.934 259.894 226.465 cv
259.714 226.993 260.032 227.579 260.607 227.775 cv
261.185 227.97 261.795 227.699 261.977 227.17 cv
262.156 226.643 261.834 226.052 261.263 225.86 cv
cp
f
257.811 225.172 mo
256.84 225.158 li
256.794 228.527 li
257.764 228.54 li
257.811 225.172 li
cp
f
258.278 229.35 mo
258.29 228.743 257.841 228.245 257.284 228.238 cv
256.724 228.227 256.266 228.715 256.257 229.32 cv
256.249 229.93 256.697 230.431 257.254 230.438 cv
257.814 230.445 258.275 229.958 258.278 229.35 cv
cp
f
257.87 225.855 mo
257.584 224.93 li
254.365 225.927 li
254.652 226.853 li
257.87 225.855 li
cp
f
254.041 227.593 mo
254.62 227.414 254.957 226.835 254.792 226.302 cv
254.628 225.77 254.02 225.48 253.445 225.663 cv
252.86 225.841 252.524 226.421 252.689 226.954 cv
252.857 227.487 253.462 227.777 254.041 227.593 cv
cp
f
257.235 226.125 mo
258.03 225.566 li
256.086 222.812 li
255.294 223.373 li
257.235 226.125 li
cp
f
254.399 223.02 mo
254.75 223.517 255.404 223.659 255.86 223.337 cv
256.317 223.013 256.402 222.351 256.051 221.855 cv
255.704 221.356 255.047 221.216 254.594 221.536 cv
254.135 221.86 254.05 222.523 254.399 223.02 cv
cp
f
257.558 225.013 mo
257.75 225.662 li
260.013 225.001 li
259.825 224.351 li
257.558 225.013 li
cp
f
260.26 223.838 mo
259.85 223.955 259.608 224.356 259.716 224.734 cv
259.829 225.106 260.249 225.315 260.658 225.197 cv
261.065 225.077 261.303 224.678 261.199 224.3 cv
261.087 223.925 260.669 223.717 260.26 223.838 cv
cp
f
257.696 225.575 mo
257.133 225.956 li
258.462 227.905 li
259.023 227.522 li
257.696 225.575 li
cp
f
259.646 227.777 mo
259.404 227.428 258.948 227.318 258.625 227.543 cv
258.303 227.762 258.236 228.226 258.473 228.576 cv
258.712 228.928 259.17 229.034 259.495 228.815 cv
259.819 228.596 259.885 228.13 259.646 227.777 cv
cp
f
257.264 225.892 mo
256.726 225.477 li
255.28 227.339 li
255.819 227.755 li
257.264 225.892 li
cp
f
255.767 228.427 mo
256.026 228.092 255.989 227.624 255.68 227.386 cv
255.368 227.146 254.907 227.223 254.644 227.559 cv
254.383 227.897 254.427 228.364 254.735 228.601 cv
255.044 228.84 255.506 228.764 255.767 228.427 cv
cp
f
256.782 225.559 mo
257.012 224.916 li
254.793 224.123 li
254.562 224.762 li
256.782 225.559 li
cp
f
253.911 224.92 mo
254.308 225.064 254.739 224.882 254.873 224.512 cv
255.005 224.148 254.787 223.731 254.384 223.589 cv
253.985 223.439 253.553 223.625 253.422 223.993 cv
253.291 224.363 253.508 224.775 253.911 224.92 cv
cp
f
256.977 224.991 mo
257.657 225.01 li
257.725 222.653 li
257.047 222.633 li
256.977 224.991 li
cp
f
256.695 222.06 mo
256.686 222.485 256.99 222.841 257.381 222.851 cv
257.771 222.861 258.1 222.527 258.115 222.104 cv
258.124 221.679 257.817 221.32 257.429 221.313 cv
257.036 221.299 256.708 221.638 256.695 222.06 cv
cp
f
259.743 242.24 mo
258.252 241.738 255.095 242.018 254.593 243.509 cv
254.09 245 256.431 247.135 257.92 247.638 cv
259.414 248.14 261.027 247.337 261.533 245.85 cv
262.031 244.359 261.235 242.744 259.743 242.24 cv
cp
.972549 .513726 .52549 rgb
f
257.023 248.306 mo
257.039 246.731 255.798 243.816 254.226 243.797 cv
252.651 243.78 251.345 246.668 251.325 248.24 cv
251.308 249.814 252.57 251.101 254.141 251.12 cv
255.716 251.136 257.005 249.875 257.023 248.306 cv
cp
f
250.375 247.572 mo
251.875 247.104 254.265 245.019 253.797 243.521 cv
253.326 242.017 250.178 241.667 248.675 242.136 cv
247.174 242.607 246.337 244.204 246.808 245.705 cv
247.275 247.209 248.875 248.045 250.375 247.572 cv
cp
f
249.054 241.015 mo
249.968 242.296 252.684 243.926 253.965 243.017 cv
255.249 242.109 254.609 239.003 253.698 237.72 cv
252.79 236.438 251.012 236.134 249.731 237.045 cv
248.445 237.953 248.143 239.731 249.054 241.015 cv
cp
f
254.86 237.768 mo
253.922 239.029 253.212 242.119 254.472 243.056 cv
255.734 243.995 258.493 242.43 259.429 241.165 cv
260.369 239.903 260.106 238.119 258.844 237.181 cv
257.583 236.24 255.798 236.502 254.86 237.768 cv
cp
f
254.058 242.929 mo
253.817 243.646 li
256.293 244.479 li
256.534 243.768 li
254.058 242.929 li
cp
1 1 1 rgb
f
257.254 243.578 mo
256.81 243.429 256.333 243.641 256.195 244.048 cv
256.055 244.46 256.307 244.915 256.752 245.065 cv
257.201 245.218 257.675 245.006 257.813 244.595 cv
257.95 244.184 257.703 243.729 257.254 243.578 cv
cp
f
254.582 243.051 mo
253.827 243.042 li
253.797 245.654 li
254.552 245.664 li
254.582 243.051 li
cp
f
254.951 246.292 mo
254.954 245.818 254.61 245.434 254.177 245.431 cv
253.743 245.423 253.391 245.804 253.379 246.268 cv
253.375 246.741 253.725 247.129 254.157 247.136 cv
254.589 247.141 254.946 246.76 254.951 246.292 cv
cp
f
254.629 243.582 mo
254.399 242.862 li
251.909 243.642 li
252.132 244.362 li
254.629 243.582 li
cp
f
251.663 244.938 mo
252.111 244.796 252.369 244.348 252.241 243.933 cv
252.11 243.519 251.644 243.299 251.192 243.438 cv
250.744 243.579 250.483 244.03 250.612 244.442 cv
250.741 244.855 251.214 245.079 251.663 244.938 cv
cp
f
254.133 243.791 mo
254.75 243.354 li
253.242 241.224 li
252.625 241.663 li
254.133 243.791 li
cp
f
251.928 241.392 mo
252.204 241.775 252.709 241.883 253.064 241.633 cv
253.417 241.383 253.482 240.866 253.21 240.482 cv
252.939 240.1 252.43 239.989 252.078 240.241 cv
251.722 240.489 251.658 241.007 251.928 241.392 cv
cp
f
253.787 243.388 mo
254.388 243.838 li
255.946 241.745 li
255.347 241.295 li
253.787 243.388 li
cp
f
255.388 240.553 mo
255.105 240.928 255.162 241.444 255.509 241.7 cv
255.856 241.96 256.366 241.867 256.646 241.488 cv
256.93 241.109 256.877 240.593 256.528 240.334 cv
256.18 240.075 255.669 240.171 255.388 240.553 cv
cp
f
254.683 243.36 mo
254.25 243.655 li
255.282 245.164 li
255.717 244.866 li
254.683 243.36 li
cp
f
256.199 245.063 mo
256.014 244.792 255.659 244.71 255.409 244.882 cv
255.158 245.053 255.107 245.415 255.294 245.686 cv
255.48 245.959 255.837 246.036 256.084 245.867 cv
256.334 245.697 256.387 245.337 256.199 245.063 cv
cp
f
254.3 243.595 mo
253.884 243.271 li
252.768 244.722 li
253.186 245.042 li
254.3 243.595 li
cp
f
253.147 245.563 mo
253.349 245.304 253.318 244.94 253.076 244.754 cv
252.836 244.569 252.476 244.632 252.277 244.892 cv
252.073 245.154 252.106 245.517 252.349 245.702 cv
252.587 245.888 252.944 245.822 253.147 245.563 cv
cp
f
253.964 243.354 mo
254.141 242.856 li
252.417 242.242 li
252.242 242.737 li
253.964 243.354 li
cp
f
251.735 242.861 mo
252.044 242.971 252.381 242.829 252.481 242.543 cv
252.583 242.259 252.414 241.938 252.103 241.827 cv
251.792 241.713 251.458 241.857 251.355 242.146 cv
251.256 242.43 251.421 242.751 251.735 242.861 cv
cp
f
254.092 242.918 mo
254.62 242.935 li
254.671 241.105 li
254.141 241.092 li
254.092 242.918 li
cp
f
253.87 240.648 mo
253.86 240.976 254.096 241.25 254.402 241.257 cv
254.704 241.269 254.958 241.007 254.967 240.676 cv
254.977 240.347 254.739 240.073 254.436 240.066 cv
254.131 240.058 253.879 240.318 253.87 240.648 cv
cp
f
254.559 242.924 mo
254.708 243.429 li
256.46 242.911 li
256.313 242.41 li
254.559 242.924 li
cp
f
256.647 242.009 mo
256.333 242.103 256.145 242.416 256.231 242.703 cv
256.32 242.999 256.644 243.158 256.959 243.064 cv
257.278 242.97 257.465 242.659 257.376 242.368 cv
257.292 242.081 256.965 241.922 256.647 242.009 cv
cp
f
226.148 238.427 mo
224.214 239.802 221.763 243.91 223.143 245.842 cv
224.52 247.777 229.2 246.803 231.133 245.428 cv
233.067 244.048 233.517 241.366 232.141 239.432 cv
230.765 237.499 228.083 237.051 226.148 238.427 cv
cp
.972549 .513726 .52549 rgb
f
231.149 247.116 mo
229.245 245.703 224.579 244.641 223.167 246.551 cv
221.754 248.455 224.129 252.607 226.033 254.021 cv
227.937 255.433 230.63 255.034 232.043 253.129 cv
233.458 251.221 233.057 248.533 231.149 247.116 cv
cp
f
224.376 254.597 mo
225.13 252.343 224.701 247.58 222.45 246.824 cv
220.202 246.071 216.986 249.613 216.229 251.861 cv
215.476 254.11 216.684 256.545 218.936 257.301 cv
221.187 258.057 223.622 256.844 224.376 254.597 cv
cp
f
215.192 250.406 mo
217.566 250.43 221.963 248.547 221.985 246.173 cv
222.008 243.803 217.65 241.836 215.275 241.816 cv
212.903 241.794 210.958 243.695 210.937 246.067 cv
210.914 248.441 212.821 250.386 215.192 250.406 cv
cp
f
216.356 240.432 mo
217.069 242.698 220.215 246.298 222.48 245.589 cv
224.746 244.875 225.266 240.119 224.556 237.859 cv
223.844 235.593 221.431 234.337 219.17 235.05 cv
216.903 235.756 215.644 238.168 216.356 240.432 cv
cp
f
221.961 245.988 mo
222.621 246.907 li
225.833 244.623 li
225.172 243.696 li
221.961 245.988 li
cp
1 1 1 rgb
f
225.583 242.652 mo
225.004 243.065 224.843 243.83 225.222 244.362 cv
225.599 244.894 226.375 244.991 226.953 244.58 cv
227.534 244.169 227.694 243.403 227.315 242.867 cv
226.936 242.34 226.159 242.239 225.583 242.652 cv
cp
f
222.569 245.453 mo
221.891 246.366 li
225.058 248.711 li
225.736 247.8 li
222.569 245.453 li
cp
f
226.855 247.865 mo
226.286 247.441 225.507 247.522 225.117 248.052 cv
224.728 248.575 224.875 249.342 225.446 249.766 cv
226.018 250.19 226.795 250.108 227.187 249.583 cv
227.574 249.06 227.428 248.288 226.855 247.865 cv
cp
f
223.258 245.867 mo
222.185 245.504 li
220.93 249.242 li
222.007 249.603 li
223.258 245.867 li
cp
f
222.294 250.689 mo
222.516 250.017 222.197 249.3 221.578 249.09 cv
220.96 248.888 220.273 249.263 220.05 249.937 cv
219.823 250.611 220.139 251.326 220.763 251.531 cv
221.379 251.743 222.066 251.366 222.294 250.689 cv
cp
f
223.079 246.651 mo
223.091 245.519 li
219.152 245.475 li
219.141 246.616 li
223.079 246.651 li
cp
f
218.194 247.225 mo
218.906 247.229 219.49 246.707 219.492 246.048 cv
219.5 245.396 218.928 244.862 218.218 244.854 cv
217.505 244.848 216.926 245.371 216.92 246.024 cv
216.913 246.683 217.485 247.216 218.194 247.225 cv
cp
f
222.278 246.726 mo
223.366 246.384 li
222.18 242.625 li
221.097 242.964 li
222.278 246.726 li
cp
f
220.229 242.252 mo
220.443 242.928 221.118 243.323 221.748 243.124 cv
222.369 242.93 222.7 242.221 222.488 241.544 cv
222.274 240.864 221.595 240.472 220.971 240.668 cv
220.347 240.866 220.014 241.572 220.229 242.252 cv
cp
f
223.037 245.597 mo
223.018 246.392 li
225.776 246.464 li
225.795 245.666 li
223.037 245.597 li
cp
f
226.463 245.253 mo
225.967 245.242 225.552 245.603 225.54 246.063 cv
225.527 246.514 225.923 246.9 226.422 246.912 cv
226.917 246.924 227.33 246.563 227.345 246.107 cv
227.356 245.646 226.963 245.271 226.463 245.253 cv
cp
f
222.988 246.273 mo
222.224 246.503 li
223.01 249.144 li
223.77 248.916 li
222.988 246.273 li
cp
f
224.375 249.429 mo
224.231 248.951 223.758 248.669 223.322 248.798 cv
222.881 248.93 222.643 249.423 222.784 249.896 cv
222.925 250.375 223.397 250.658 223.834 250.524 cv
224.274 250.397 224.512 249.904 224.375 249.429 cv
cp
f
222.39 246.472 mo
221.942 245.816 li
219.668 247.383 li
220.118 248.036 li
222.39 246.472 li
cp
f
219.819 248.764 mo
220.231 248.483 220.354 247.946 220.096 247.57 cv
219.833 247.193 219.292 247.115 218.882 247.398 cv
218.473 247.682 218.348 248.218 218.609 248.589 cv
218.87 248.967 219.411 249.045 219.819 248.764 cv
cp
f
221.974 245.93 mo
222.46 245.305 li
220.271 243.621 li
219.787 244.253 li
221.974 245.93 li
cp
f
219.001 244.193 mo
219.399 244.495 219.941 244.448 220.224 244.085 cv
220.501 243.722 220.407 243.183 220.011 242.879 cv
219.617 242.575 219.07 242.624 218.791 242.986 cv
218.512 243.351 218.607 243.892 219.001 244.193 cv
cp
f
222.393 245.365 mo
223.144 245.633 li
224.063 243.033 li
223.319 242.77 li
222.393 245.365 li
cp
f
223.128 242.001 mo
222.962 242.47 223.178 242.978 223.611 243.127 cv
224.04 243.28 224.524 243.023 224.69 242.557 cv
224.854 242.087 224.646 241.585 224.212 241.431 cv
223.779 241.279 223.295 241.533 223.128 242.001 cv
cp
f
260.278 265.394 mo
258.255 266.633 255.525 270.556 256.766 272.583 cv
258.006 274.605 262.741 273.961 264.768 272.719 cv
266.79 271.479 267.424 268.833 266.185 266.813 cv
264.947 264.794 262.304 264.153 260.278 265.394 cv
cp
.752941 .168627 .47451 rgb
f
264.667 274.407 mo
262.863 272.869 258.286 271.486 256.744 273.287 cv
255.201 275.093 257.281 279.401 259.083 280.939 cv
260.887 282.486 263.601 282.271 265.142 280.463 cv
266.683 278.664 266.471 275.951 264.667 274.407 cv
cp
f
257.393 281.399 mo
258.302 279.209 258.198 274.424 256.01 273.517 cv
253.816 272.606 250.363 275.915 249.453 278.107 cv
248.546 280.298 249.586 282.815 251.776 283.724 cv
253.97 284.632 256.484 283.59 257.393 281.399 cv
cp
f
248.518 276.586 mo
250.886 276.771 255.403 275.199 255.591 272.833 cv
255.777 270.466 251.562 268.205 249.196 268.021 cv
246.832 267.833 244.761 269.599 244.577 271.964 cv
244.388 274.331 246.155 276.401 248.518 276.586 cv
cp
f
250.374 266.72 mo
250.926 269.025 253.817 272.834 256.127 272.283 cv
258.433 271.731 259.281 267.023 258.732 264.715 cv
258.175 262.406 255.856 260.983 253.549 261.539 cv
251.242 262.092 249.818 264.412 250.374 266.72 cv
cp
f
255.581 272.642 mo
256.173 273.611 li
259.537 271.554 li
258.941 270.584 li
255.581 272.642 li
cp
1 1 1 rgb
f
259.419 269.566 mo
258.815 269.939 258.6 270.692 258.941 271.25 cv
259.283 271.806 260.052 271.959 260.656 271.586 cv
261.263 271.216 261.479 270.464 261.137 269.907 cv
260.795 269.349 260.027 269.193 259.419 269.566 cv
cp
f
256.224 272.155 mo
255.481 273.019 li
258.481 275.579 li
259.217 274.713 li
256.224 272.155 li
cp
f
260.334 274.856 mo
259.792 274.395 259.01 274.423 258.586 274.922 cv
258.159 275.415 258.252 276.196 258.795 276.656 cv
259.336 277.12 260.117 277.092 260.541 276.594 cv
260.966 276.099 260.873 275.318 260.334 274.856 cv
cp
f
256.881 272.612 mo
255.835 272.179 li
254.324 275.82 li
255.375 276.256 li
256.881 272.612 li
cp
f
255.581 277.356 mo
255.855 276.705 255.584 275.97 254.981 275.716 cv
254.378 275.468 253.667 275.797 253.391 276.454 cv
253.125 277.11 253.391 277.846 253.996 278.095 cv
254.599 278.346 255.311 278.017 255.581 277.356 cv
cp
f
256.648 273.387 mo
256.738 272.254 li
252.81 271.943 li
252.72 273.076 li
256.648 273.387 li
cp
f
251.734 273.615 mo
252.445 273.672 253.061 273.192 253.112 272.538 cv
253.163 271.884 252.63 271.31 251.922 271.255 cv
251.214 271.199 250.595 271.68 250.548 272.331 cv
250.496 272.983 251.029 273.56 251.734 273.615 cv
cp
f
255.843 273.403 mo
256.951 273.14 li
256.031 269.307 li
254.925 269.566 li
255.843 273.403 li
cp
f
254.109 268.804 mo
254.272 269.49 254.923 269.931 255.56 269.775 cv
256.194 269.625 256.579 268.94 256.412 268.249 cv
256.245 267.558 255.596 267.122 254.959 267.271 cv
254.323 267.426 253.941 268.106 254.109 268.804 cv
cp
f
256.675 272.332 mo
256.602 273.119 li
259.349 273.384 li
259.426 272.591 li
256.675 272.332 li
cp
f
260.123 272.225 mo
259.626 272.179 259.184 272.51 259.145 272.966 cv
259.101 273.42 259.469 273.83 259.962 273.877 cv
260.458 273.923 260.894 273.592 260.938 273.137 cv
260.984 272.681 260.617 272.272 260.123 272.225 cv
cp
f
256.583 273.001 mo
255.804 273.176 li
256.405 275.869 li
257.182 275.697 li
256.583 273.001 li
cp
f
257.744 276.245 mo
257.636 275.759 257.186 275.444 256.742 275.543 cv
256.294 275.643 256.021 276.12 256.128 276.605 cv
256.232 277.089 256.686 277.404 257.131 277.303 cv
257.58 277.206 257.852 276.728 257.744 276.245 cv
cp
f
255.971 273.158 mo
255.57 272.472 li
253.193 273.877 li
253.594 274.561 li
255.971 273.158 li
cp
f
253.25 275.268 mo
253.676 275.015 253.837 274.489 253.607 274.097 cv
253.374 273.702 252.837 273.586 252.407 273.84 cv
251.981 274.092 251.821 274.615 252.051 275.009 cv
252.29 275.405 252.823 275.52 253.25 275.268 cv
cp
f
255.594 272.59 mo
256.127 271.995 li
254.057 270.168 li
253.528 270.763 li
255.594 272.59 li
cp
f
252.75 270.652 mo
253.124 270.98 253.672 270.972 253.976 270.626 cv
254.28 270.285 254.221 269.739 253.849 269.405 cv
253.474 269.079 252.925 269.089 252.625 269.433 cv
252.318 269.777 252.378 270.322 252.75 270.652 cv
cp
f
256.055 272.054 mo
256.783 272.376 li
257.88 269.841 li
257.155 269.527 li
256.055 272.054 li
cp
f
257.02 268.752 mo
256.819 269.208 257.002 269.726 257.417 269.906 cv
257.841 270.089 258.34 269.867 258.539 269.41 cv
258.736 268.955 258.556 268.436 258.139 268.255 cv
257.714 268.073 257.217 268.293 257.02 268.752 cv
cp
f
218.812 264.351 mo
217.421 265.34 215.66 268.294 216.652 269.683 cv
217.641 271.073 221.006 270.374 222.395 269.383 cv
223.786 268.395 224.11 266.464 223.123 265.079 cv
222.129 263.685 220.202 263.362 218.812 264.351 cv
cp
.972549 .513726 .52549 rgb
f
222.406 270.6 mo
221.038 269.583 217.684 268.819 216.669 270.191 cv
215.652 271.563 217.358 274.549 218.73 275.563 cv
220.098 276.578 222.035 276.291 223.053 274.923 cv
224.068 273.552 223.779 271.616 222.406 270.6 cv
cp
f
217.539 275.977 mo
218.08 274.358 217.77 270.935 216.153 270.394 cv
214.536 269.845 212.223 272.393 211.68 274.011 cv
211.139 275.627 212.009 277.379 213.627 277.921 cv
215.246 278.465 216.993 277.593 217.539 275.977 cv
cp
f
210.932 272.962 mo
212.64 272.979 215.803 271.628 215.82 269.924 cv
215.835 268.215 212.701 266.806 210.997 266.785 cv
209.287 266.769 207.891 268.139 207.876 269.844 cv
207.859 271.553 209.229 272.948 210.932 272.962 cv
cp
f
211.773 265.796 mo
212.285 267.422 214.547 270.011 216.178 269.498 cv
217.804 268.989 218.179 265.568 217.666 263.941 cv
217.157 262.314 215.422 261.408 213.792 261.922 cv
212.167 262.433 211.26 264.169 211.773 265.796 cv
cp
f
215.801 269.782 mo
216.275 270.45 li
218.587 268.809 li
218.112 268.141 li
215.801 269.782 li
cp
1 1 1 rgb
f
218.405 267.389 mo
217.987 267.688 217.873 268.236 218.144 268.618 cv
218.416 269 218.975 269.066 219.39 268.774 cv
219.808 268.479 219.924 267.929 219.654 267.546 cv
219.379 267.161 218.824 267.095 218.405 267.389 cv
cp
f
216.239 269.404 mo
215.752 270.058 li
218.029 271.748 li
218.517 271.089 li
216.239 269.404 li
cp
f
219.323 271.139 mo
218.913 270.833 218.353 270.893 218.069 271.269 cv
217.792 271.646 217.897 272.201 218.31 272.507 cv
218.718 272.807 219.278 272.751 219.559 272.372 cv
219.838 271.995 219.733 271.439 219.323 271.139 cv
cp
f
216.737 269.699 mo
215.962 269.44 li
215.058 272.125 li
215.835 272.386 li
216.737 269.699 li
cp
f
216.04 273.167 mo
216.202 272.681 215.971 272.17 215.529 272.021 cv
215.083 271.871 214.591 272.14 214.426 272.627 cv
214.261 273.111 214.492 273.625 214.938 273.774 cv
215.384 273.924 215.875 273.65 216.04 273.167 cv
cp
f
216.607 270.266 mo
216.616 269.449 li
213.782 269.422 li
213.773 270.238 li
216.607 270.266 li
cp
f
213.095 270.674 mo
213.605 270.677 214.022 270.304 214.027 269.831 cv
214.031 269.363 213.624 268.979 213.109 268.973 cv
212.598 268.968 212.18 269.344 212.178 269.814 cv
212.172 270.284 212.582 270.668 213.095 270.674 cv
cp
f
216.031 270.313 mo
216.811 270.072 li
215.961 267.371 li
215.181 267.615 li
216.031 270.313 li
cp
f
214.557 267.102 mo
214.709 267.589 215.197 267.871 215.644 267.731 cv
216.094 267.589 216.333 267.08 216.18 266.591 cv
216.027 266.107 215.54 265.822 215.092 265.962 cv
214.644 266.107 214.401 266.615 214.557 267.102 cv
cp
f
216.576 269.507 mo
216.561 270.079 li
218.543 270.127 li
218.559 269.556 li
216.576 269.507 li
cp
f
219.041 269.26 mo
218.684 269.252 218.383 269.51 218.378 269.84 cv
218.367 270.166 218.651 270.44 219.009 270.452 cv
219.368 270.461 219.662 270.201 219.671 269.873 cv
219.681 269.543 219.397 269.271 219.041 269.26 cv
cp
f
216.542 269.992 mo
215.992 270.156 li
216.557 272.06 li
217.103 271.895 li
216.542 269.992 li
cp
f
217.537 272.257 mo
217.433 271.919 217.095 271.714 216.78 271.809 cv
216.466 271.902 216.292 272.258 216.393 272.604 cv
216.496 272.939 216.833 273.144 217.15 273.05 cv
217.465 272.957 217.638 272.604 217.537 272.257 cv
cp
f
216.113 270.137 mo
215.789 269.666 li
214.155 270.786 li
214.478 271.257 li
216.113 270.137 li
cp
f
214.26 271.784 mo
214.559 271.582 214.648 271.197 214.461 270.928 cv
214.275 270.656 213.883 270.599 213.586 270.801 cv
213.292 271.003 213.205 271.388 213.391 271.658 cv
213.577 271.931 213.968 271.986 214.26 271.784 cv
cp
f
215.81 269.747 mo
216.162 269.294 li
214.586 268.084 li
214.239 268.54 li
215.81 269.747 li
cp
f
213.672 268.496 mo
213.959 268.714 214.348 268.682 214.552 268.417 cv
214.753 268.161 214.683 267.769 214.399 267.553 cv
214.117 267.334 213.724 267.372 213.525 267.631 cv
213.324 267.891 213.393 268.283 213.672 268.496 cv
cp
f
216.114 269.34 mo
216.654 269.533 li
217.314 267.66 li
216.78 267.475 li
216.114 269.34 li
cp
f
216.638 266.923 mo
216.522 267.258 216.677 267.624 216.99 267.731 cv
217.297 267.841 217.643 267.655 217.765 267.318 cv
217.884 266.983 217.73 266.62 217.421 266.51 cv
217.109 266.404 216.76 266.586 216.638 266.923 cv
cp
f
233.426 231.101 mo
233.426 231.101 239.895 234.162 243.03 225.463 cv
243.03 225.463 236.697 222.82 233.426 231.101 cv
cp
.752941 .168627 .47451 rgb
f
233.423 231.099 mo
233.423 231.099 239.95 229.746 237.52 222.252 cv
237.52 222.252 231.328 223.817 233.423 231.099 cv
cp
f
248.279 255.93 mo
249.63 254.833 251.375 254.021 253.148 253.736 cv
254.96 253.426 256.765 253.761 258.533 254.491 cv
260.476 255.111 262.549 254.692 264.225 253.752 cv
265.914 252.812 267.336 251.48 268.493 249.977 cv
267.258 251.417 265.772 252.658 264.083 253.479 cv
262.413 254.304 260.435 254.56 258.749 253.917 cv
257.057 253.093 255.006 252.57 253.031 252.823 cv
251.038 253.048 249.161 253.776 247.496 254.981 cv
248.279 255.93 li
cp
.309804 .156863 .12549 rgb
f
263.75 253.783 mo
263.75 253.783 259.997 247.687 268.295 243.622 cv
268.295 243.622 271.619 249.622 263.75 253.783 cv
cp
.972549 .513726 .52549 rgb
f
263.75 253.788 mo
263.75 253.788 264.381 247.148 272.094 248.741 cv
272.094 248.741 271.218 255.071 263.75 253.788 cv
cp
f
339.387 225.762 mo
335.477 230.192 327.615 235.679 328.186 247.578 cv
328.806 260.496 337.94 259.813 336.708 269.634 cv
336.197 273.729 331.768 275.692 328.965 279.587 cv
325.221 284.786 326.042 292.198 332.47 295.061 cv
332.47 295.061 328.899 286.883 336.927 285.839 cv
344.957 284.798 367.173 282.265 365.525 265.339 cv
363.874 248.414 347.834 249.465 347.834 249.465 cv
338.952 232.135 li
339.387 225.762 li
cp
.0823529 .0823529 .0823529 rgb
f
337.722 232.196 mo
336.112 234.328 332.417 242.036 333.458 245.707 cv
334.498 249.377 334.923 248.195 333.629 250.585 cv
332.335 252.976 330.061 255.148 331.809 256.051 cv
333.56 256.956 334.498 257.265 333.8 258.092 cv
333.102 258.922 332.976 259.321 334.228 259.656 cv
335.478 259.993 336.225 259.532 335.652 259.729 cv
334.784 260.027 333.446 260.878 334.318 261.693 cv
335.637 262.928 335.391 262.696 335.232 263.769 cv
335.071 264.84 335.272 266.072 337.008 266.284 cv
338.747 266.497 344.303 263.899 345.919 264.629 cv
347.47 265.328 348.077 267.453 346.05 270.272 cv
344.023 273.093 338.87 274.837 337.797 277.214 cv
337.797 277.214 358.562 276.126 359.45 268.18 cv
360.339 260.236 360.68 251.589 360.132 250.655 cv
359.583 249.721 337.722 232.196 337.722 232.196 cv
cp
.992157 .694118 .443137 rgb
f
336.237 233.467 mo
337.443 239.821 341.923 240.668 348.659 248.479 cv
352.029 252.382 355.701 258.22 353.656 265.58 cv
352.084 271.231 344.975 274.759 339.432 276.145 cv
326.974 279.26 324.466 290.998 332.47 295.061 cv
332.47 295.061 323.776 282.361 343.194 281.712 cv
350.432 281.468 363.818 280.117 366.788 268.393 cv
370.876 252.249 360.098 246.094 357.44 243.547 cv
352.418 238.739 337.132 233.09 340.365 225.009 cv
340.365 225.009 335.246 228.249 336.237 233.467 cv
cp
.180392 .180392 .180392 rgb
f
347.141 227.194 mo
347.141 227.194 340.644 220.403 334.326 222.583 cv
328.006 224.766 334.194 227.567 334.835 227.964 cv
335.478 228.359 338.639 232.318 340.651 231.961 cv
342.66 231.604 347.219 228.234 347.219 228.234 cv
347.141 227.194 li
cp
.176471 .145098 .109804 rgb
f
347.934 229.488 mo
347.934 229.488 349.672 236.31 348.003 237.168 cv
346.333 238.023 341.635 236.617 341.24 234.731 cv
340.843 232.85 342.133 230.284 346.977 228.387 cv
346.977 228.387 347.718 228.216 347.934 229.488 cv
cp
.517647 .733333 .0235294 rgb
f
346.273 227.045 mo
346.681 226.792 344.422 225.58 343.302 225.097 cv
342.181 224.614 340.763 223.756 339.685 224.374 cv
338.817 224.869 338.822 225.857 339.598 226.234 cv
340.375 226.611 345.321 227.636 346.273 227.045 cv
cp
f
345.977 227.765 mo
346.361 227.448 343.919 227.129 342.875 227.519 cv
341.832 227.905 338.808 229.96 338.981 230.63 cv
339.158 231.298 340.195 231.699 340.578 231.594 cv
340.964 231.487 341.665 230.432 342.012 229.976 cv
342.362 229.52 344 228.335 344.71 228.12 cv
345.421 227.902 345.801 227.909 345.977 227.765 cv
cp
f
337.797 229.16 mo
337.686 229.512 338.228 230.455 338.724 230.269 cv
339.224 230.082 339.881 228.984 340.581 228.512 cv
341.281 228.038 342.648 227.547 342.417 227.311 cv
342.189 227.072 341.173 226.813 340.161 227.353 cv
339.147 227.893 337.905 228.806 337.797 229.16 cv
cp
f
336.698 227.872 mo
336.48 228.155 336.817 229.012 337.391 228.961 cv
337.963 228.912 338.222 228.077 338.72 227.814 cv
339.218 227.551 340.503 227.131 340.478 226.991 cv
340.45 226.854 340.03 226.55 338.899 226.808 cv
337.766 227.064 336.989 227.495 336.698 227.872 cv
cp
f
335.537 226.886 mo
335.303 227.255 335.914 227.914 336.296 227.805 cv
336.678 227.691 337.982 226.654 338.732 226.625 cv
339.479 226.599 339.215 226.143 338.793 226.079 cv
338.372 226.014 336 226.157 335.537 226.886 cv
cp
f
334.062 225.291 mo
333.872 225.493 334.245 225.764 334.555 226.114 cv
334.867 226.466 334.94 226.902 335.311 226.648 cv
335.682 226.396 338.052 225.637 338.403 225.675 cv
338.751 225.714 339.024 225.284 338.57 225.062 cv
338.113 224.84 334.98 224.301 334.062 225.291 cv
cp
.360784 .529412 .12549 rgb
f
332.442 224.02 mo
332.258 224.157 332.768 224.287 333.051 224.378 cv
333.334 224.47 333.418 224.775 333.748 224.811 cv
334.076 224.845 337.006 224.396 338.313 224.562 cv
339.248 224.68 339.026 223.784 338.693 223.53 cv
338.209 223.167 334.983 222.112 332.442 224.02 cv
cp
f
347.181 230.967 mo
346.974 231.631 346.419 233.198 345.783 233.461 cv
345.651 233.514 345.528 233.508 345.405 233.438 cv
344.785 233.09 344.812 232.79 344.835 232.547 cv
344.829 232.315 li
344.811 232.114 345.9 230.053 346.753 229.7 cv
346.845 229.663 346.926 229.649 347 229.659 cv
347.176 229.795 li
347.326 230.03 347.328 230.503 347.181 230.967 cv
cp
348.625 233.553 mo
348.454 233.279 348.278 233.007 348.142 232.718 cv
347.343 230.984 li
347.495 230.481 347.485 229.982 347.314 229.707 cv
347.241 229.589 347.138 229.517 347.021 229.499 cv
346.92 229.484 346.808 229.5 346.689 229.551 cv
346.399 229.672 346.053 230.015 345.733 230.421 cv
345.362 230.598 344.985 230.768 344.606 230.929 cv
344.417 231.012 344.226 231.092 344.032 231.163 cv
343.839 231.232 343.641 231.313 343.456 231.406 cv
343.083 231.592 342.723 231.802 342.379 232.034 cv
342.041 232.268 341.692 232.511 341.438 232.845 cv
341.7 232.521 342.055 232.291 342.4 232.068 cv
342.751 231.849 343.115 231.65 343.491 231.479 cv
343.679 231.392 343.866 231.322 344.066 231.259 cv
344.263 231.19 344.458 231.119 344.654 231.042 cv
344.951 230.927 345.246 230.802 345.539 230.678 cv
345.147 231.223 344.82 231.813 344.71 232.143 cv
344.234 232.447 343.785 232.778 343.333 233.112 cv
342.877 233.45 342.424 233.795 341.974 234.142 cv
342.44 233.815 342.908 233.495 343.381 233.178 cv
343.806 232.894 344.235 232.611 344.673 232.352 cv
344.673 232.358 li
344.673 232.533 li
344.661 232.691 344.641 232.899 344.797 233.131 cv
344.442 233.521 344.117 233.934 343.82 234.368 cv
343.671 234.592 343.53 234.822 343.413 235.063 cv
343.295 235.303 343.191 235.56 343.165 235.826 cv
343.204 235.561 343.321 235.315 343.448 235.082 cv
343.578 234.851 343.728 234.63 343.885 234.415 cv
344.197 234.007 344.539 233.619 344.899 233.256 cv
344.997 233.361 345.131 233.47 345.327 233.58 cv
345.427 233.623 li
345.39 234.082 345.344 234.545 345.268 235.002 cv
345.227 235.242 345.181 235.477 345.083 235.701 cv
345.001 235.932 344.971 236.194 345.064 236.424 cv
344.984 236.189 345.03 235.935 345.121 235.716 cv
345.232 235.499 345.292 235.256 345.348 235.019 cv
345.448 234.569 345.519 234.116 345.58 233.658 cv
345.844 233.609 li
346.228 233.451 346.573 232.905 346.846 232.312 cv
346.849 232.572 346.852 232.834 346.847 233.096 cv
346.834 233.487 346.826 233.884 346.76 234.264 cv
346.64 234.649 346.712 235.061 346.758 235.447 cv
346.816 235.837 346.894 236.225 346.988 236.607 cv
346.909 236.222 346.842 235.833 346.798 235.44 cv
346.764 235.052 346.708 234.652 346.837 234.282 cv
346.92 233.89 346.943 233.497 346.968 233.103 cv
346.989 232.715 347 232.327 347.005 231.94 cv
347.111 231.683 347.201 231.429 347.276 231.204 cv
348.071 232.753 li
348.221 233.042 348.409 233.307 348.59 233.571 cv
348.667 233.68 li
348.659 233.604 li
348.625 233.553 li
cp
.176471 .145098 .109804 rgb
f
348.505 236.405 mo
347.997 236.756 347.67 236.735 347.301 236.946 cv
346.932 237.158 346.646 237.236 346.274 237.007 cv
345.897 236.777 345.956 236.823 345.502 236.852 cv
345.05 236.883 344.674 236.716 344.403 236.411 cv
344.127 236.105 343.839 236.059 343.461 235.999 cv
343.083 235.939 343.073 236.091 342.878 235.528 cv
342.682 234.964 342.5 234.857 342.203 234.729 cv
341.905 234.6 341.738 234.362 341.734 233.984 cv
341.731 233.606 341.659 233.4 341.486 233.145 cv
341.408 233.028 341.397 232.929 341.414 232.825 cv
341.156 233.499 341.117 234.148 341.24 234.731 cv
341.635 236.617 346.333 238.023 348.003 237.168 cv
348.263 237.033 348.443 236.754 348.555 236.378 cv
348.505 236.405 li
cp
f
347.934 229.488 mo
347.718 228.216 346.977 228.387 346.977 228.387 cv
345.103 229.121 343.762 229.956 342.844 230.812 cv
343.224 230.435 345.633 229.152 346.137 229.12 cv
346.481 229.097 346.597 229.053 346.891 229.415 cv
347.125 229.704 347.215 229.441 347.717 229.977 cv
348.187 230.476 348.44 231.951 348.471 232.146 cv
348.238 230.69 347.934 229.488 347.934 229.488 cv
cp
f
342.407 232.913 mo
342.45 233.036 342.383 233.171 342.262 233.212 cv
342.139 233.254 342.005 233.19 341.962 233.067 cv
341.92 232.944 341.986 232.811 342.107 232.767 cv
342.231 232.724 342.364 232.79 342.407 232.913 cv
cp
f
342.928 234.421 mo
342.969 234.544 342.907 234.68 342.784 234.721 cv
342.661 234.764 342.526 234.697 342.484 234.575 cv
342.441 234.451 342.506 234.32 342.628 234.275 cv
342.751 234.234 342.885 234.3 342.928 234.421 cv
cp
f
344.121 235.378 mo
344.163 235.501 344.098 235.635 343.975 235.677 cv
343.85 235.719 343.717 235.656 343.674 235.532 cv
343.634 235.41 343.699 235.277 343.821 235.231 cv
343.943 235.191 344.078 235.257 344.121 235.378 cv
cp
f
345.302 236.179 mo
345.207 236.373 li
345.014 236.279 li
345.108 236.085 li
345.302 236.179 li
cp
f
348.596 226.692 mo
348.596 226.692 349.519 217.337 355.835 215.156 cv
362.156 212.976 359.015 218.997 358.756 219.704 cv
358.494 220.414 358.448 225.479 356.646 226.438 cv
354.844 227.399 349.175 227.56 349.175 227.56 cv
348.596 226.692 li
cp
f
349.386 228.986 mo
349.386 228.986 352.229 235.427 354.07 235.072 cv
355.912 234.718 358.741 230.709 357.892 228.983 cv
357.041 227.258 354.444 226.035 349.46 227.53 cv
349.46 227.53 348.772 227.852 349.386 228.986 cv
cp
.517647 .733333 .0235294 rgb
f
349.188 226.038 mo
348.71 226.092 349.738 223.745 350.322 222.672 cv
350.906 221.602 351.494 220.052 352.723 219.872 cv
353.713 219.727 354.317 220.508 353.94 221.284 cv
353.562 222.06 350.301 225.915 349.188 226.038 cv
cp
f
349.865 226.423 mo
349.367 226.412 351.09 224.653 352.151 224.313 cv
353.214 223.975 356.86 223.728 357.135 224.362 cv
357.409 224.997 356.841 225.95 356.474 226.105 cv
356.108 226.26 354.904 225.862 354.349 225.715 cv
353.792 225.57 351.772 225.653 351.079 225.919 cv
350.384 226.187 350.089 226.43 349.865 226.423 cv
cp
f
357.163 222.472 mo
357.467 222.682 357.623 223.759 357.116 223.919 cv
356.609 224.079 355.415 223.624 354.571 223.682 cv
353.729 223.742 352.349 224.195 352.384 223.868 cv
352.418 223.542 353.057 222.711 354.189 222.51 cv
355.319 222.308 356.858 222.261 357.163 222.472 cv
cp
f
357.232 220.783 mo
357.577 220.87 357.84 221.752 357.361 222.066 cv
356.878 222.38 356.161 221.884 355.606 221.984 cv
355.052 222.086 353.779 222.546 353.715 222.421 cv
353.65 222.295 353.793 221.798 354.844 221.301 cv
355.893 220.805 356.77 220.666 357.232 220.783 cv
cp
f
357.538 219.291 mo
357.949 219.436 357.875 220.333 357.506 220.48 cv
357.137 220.63 355.468 220.615 354.864 221.056 cv
354.259 221.497 354.184 220.974 354.476 220.663 cv
354.768 220.351 356.723 219.005 357.538 219.291 cv
cp
f
357.716 217.125 mo
357.989 217.168 357.863 217.609 357.835 218.077 cv
357.806 218.545 358.019 218.936 357.57 218.965 cv
357.12 218.993 354.788 219.857 354.537 220.104 cv
354.284 220.351 353.804 220.18 354.026 219.726 cv
354.249 219.27 356.38 216.913 357.716 217.125 cv
cp
.360784 .529412 .12549 rgb
f
358.205 215.125 mo
358.437 215.118 358.114 215.533 357.948 215.783 cv
357.78 216.028 357.903 216.324 357.666 216.553 cv
357.429 216.782 354.845 218.235 353.919 219.171 cv
353.254 219.843 352.877 219 352.983 218.596 cv
353.138 218.011 355.027 215.19 358.205 215.125 cv
cp
f
350.172 228.759 mo
350.229 228.545 li
350.28 228.493 350.354 228.451 350.448 228.425 cv
351.335 228.176 353.464 229.126 353.576 229.294 cv
353.714 229.481 li
353.88 229.658 354.087 229.88 353.814 230.534 cv
353.76 230.665 353.667 230.747 353.532 230.784 cv
352.867 230.971 351.463 230.079 350.893 229.686 cv
350.491 229.41 350.201 229.038 350.172 228.759 cv
cp
351.357 232.674 mo
351.397 232.737 li
351.391 232.606 li
351.369 232.283 351.354 231.962 351.293 231.64 cv
350.964 229.929 li
351.161 230.06 351.388 230.204 351.63 230.344 cv
351.873 230.646 352.122 230.943 352.377 231.234 cv
352.641 231.526 352.9 231.826 353.207 232.084 cv
353.54 232.294 353.739 232.644 353.954 232.971 cv
354.161 233.307 354.35 233.652 354.527 234.005 cv
354.361 233.646 354.184 233.296 353.989 232.951 cv
353.788 232.617 353.59 232.25 353.256 232.021 cv
352.97 231.763 352.72 231.455 352.467 231.155 cv
352.303 230.952 352.146 230.744 351.985 230.537 cv
352.568 230.837 353.175 231.053 353.576 230.941 cv
353.667 230.915 353.748 230.873 353.81 230.817 cv
354.143 231.138 354.478 231.451 354.834 231.743 cv
355.024 231.896 355.223 232.048 355.444 232.151 cv
355.649 232.268 355.842 232.439 355.923 232.672 cv
355.855 232.437 355.668 232.247 355.463 232.116 cv
355.249 232.002 355.069 231.844 354.886 231.683 cv
354.545 231.368 354.224 231.033 353.911 230.693 cv
353.963 230.599 li
354.048 230.391 354.087 230.222 354.101 230.079 cv
354.608 230.143 355.116 230.236 355.612 230.368 cv
355.87 230.437 356.124 230.519 356.368 230.62 cv
356.612 230.726 356.856 230.847 357.049 231.031 cv
356.867 230.837 356.625 230.703 356.385 230.584 cv
356.144 230.467 355.89 230.372 355.635 230.29 cv
355.133 230.13 354.623 230.009 354.105 229.918 cv
354.083 229.641 353.94 229.486 353.83 229.371 cv
353.723 229.235 li
353.72 229.229 li
354.224 229.163 354.738 229.12 355.248 229.081 cv
355.814 229.038 356.38 229.003 356.949 228.971 cv
356.38 228.976 355.812 228.984 355.244 229 cv
354.682 229.018 354.125 229.032 353.561 229.086 cv
353.273 228.896 352.648 228.63 352.005 228.444 cv
352.313 228.362 352.622 228.279 352.929 228.186 cv
353.127 228.125 353.327 228.063 353.522 227.995 cv
353.72 227.921 353.91 227.86 354.113 227.811 cv
354.512 227.717 354.922 227.646 355.333 227.602 cv
355.742 227.565 356.165 227.527 356.569 227.619 cv
356.166 227.513 355.742 227.539 355.329 227.562 cv
354.916 227.593 354.501 227.647 354.093 227.732 cv
353.891 227.773 353.685 227.833 353.491 227.899 cv
353.294 227.96 353.095 228.015 352.895 228.067 cv
352.499 228.174 352.097 228.271 351.695 228.365 cv
351.191 228.241 350.709 228.183 350.403 228.268 cv
350.281 228.301 350.183 228.356 350.114 228.433 cv
350.031 228.519 349.996 228.64 350.01 228.776 cv
350.044 229.099 350.344 229.498 350.775 229.801 cv
351.213 231.654 li
351.286 231.967 351.317 232.29 351.351 232.611 cv
351.357 232.674 li
cp
.176471 .145098 .109804 rgb
f
353.205 234.782 mo
353.823 234.746 354.064 234.526 354.485 234.465 cv
354.907 234.404 355.18 234.29 355.335 233.878 cv
355.486 233.467 355.468 233.536 355.843 233.282 cv
356.22 233.024 356.41 232.665 356.437 232.256 cv
356.465 231.845 356.665 231.631 356.924 231.351 cv
357.186 231.07 357.287 231.184 357.093 230.618 cv
356.897 230.056 356.977 229.859 357.13 229.575 cv
357.287 229.29 357.272 229.002 357.042 228.701 cv
356.812 228.401 356.741 228.194 356.717 227.886 cv
356.708 227.745 356.652 227.661 356.578 227.588 cv
357.194 227.961 357.626 228.446 357.892 228.983 cv
358.741 230.709 355.912 234.718 354.07 235.072 cv
353.783 235.129 353.47 235.019 353.15 234.792 cv
353.205 234.782 li
cp
f
349.386 228.986 mo
348.772 227.852 349.46 227.53 349.46 227.53 cv
351.388 226.952 352.958 226.78 354.208 226.888 cv
353.68 226.826 350.992 227.303 350.575 227.587 cv
350.29 227.781 350.171 227.821 350.162 228.284 cv
350.157 228.655 349.925 228.508 349.858 229.237 cv
349.797 229.92 350.508 231.238 350.603 231.409 cv
349.888 230.119 349.386 228.986 349.386 228.986 cv
cp
f
355.849 228.272 mo
355.891 228.396 356.026 228.46 356.149 228.417 cv
356.272 228.374 356.335 228.24 356.294 228.12 cv
356.251 227.995 356.118 227.931 355.995 227.974 cv
355.872 228.015 355.807 228.148 355.849 228.272 cv
cp
f
356.371 229.78 mo
356.413 229.903 356.545 229.97 356.668 229.926 cv
356.793 229.885 356.856 229.751 356.815 229.627 cv
356.772 229.504 356.639 229.439 356.516 229.481 cv
356.394 229.523 356.329 229.657 356.371 229.78 cv
cp
f
356.022 231.269 mo
356.064 231.393 356.2 231.457 356.323 231.413 cv
356.444 231.373 356.509 231.238 356.466 231.116 cv
356.425 230.994 356.292 230.927 356.167 230.97 cv
356.044 231.013 355.981 231.147 356.022 231.269 cv
cp
f
355.587 232.628 mo
355.779 232.724 li
355.875 232.528 li
355.68 232.435 li
355.587 232.628 li
cp
f
348.094 229.84 mo
348.094 229.84 348.388 231.984 349.13 233.398 cv
349.872 234.817 350.397 235.73 350.848 235.574 cv
348.787 229.601 li
348.094 229.84 li
cp
f
349.477 229.362 mo
349.477 229.362 350.569 231.23 350.86 232.802 cv
351.15 234.378 351.3 235.419 350.848 235.574 cv
348.787 229.601 li
349.477 229.362 li
cp
f
348.308 226.114 mo
348.431 226.474 348.242 226.864 347.883 226.988 cv
347.526 227.112 347.135 226.921 347.011 226.563 cv
346.886 226.203 347.078 225.813 347.436 225.691 cv
347.794 225.566 348.185 225.757 348.308 226.114 cv
cp
f
347.808 226.693 mo
347.561 226.226 347.273 225.778 346.961 225.351 cv
346.651 224.922 346.312 224.516 345.942 224.14 cv
345.571 223.769 345.165 223.428 344.717 223.156 cv
344.273 222.889 343.785 222.689 343.278 222.626 cv
343.175 222.492 li
343.307 222.389 li
343.313 222.391 li
343.857 222.481 344.366 222.711 344.814 223.008 cv
345.266 223.304 345.665 223.667 346.027 224.058 cv
346.388 224.452 346.714 224.875 347.01 225.315 cv
347.307 225.759 347.579 226.217 347.808 226.693 cv
cp
f
347.76 226.712 mo
347.668 226.188 347.62 225.657 347.599 225.129 cv
347.581 224.601 347.595 224.071 347.657 223.549 cv
347.717 223.026 347.829 222.508 348.013 222.021 cv
348.198 221.532 348.458 221.075 348.817 220.713 cv
348.817 220.544 li
348.648 220.545 li
348.644 220.549 li
348.272 220.957 348.015 221.45 347.842 221.961 cv
347.671 222.474 347.581 223.005 347.538 223.537 cv
347.495 224.069 347.5 224.604 347.539 225.135 cv
347.581 225.663 347.649 226.192 347.76 226.712 cv
cp
f
348.605 226.61 mo
348.156 226.205 347.735 226.557 347.735 226.557 cv
347.735 226.557 347.187 226.539 347.083 227.137 cv
346.981 227.733 346.656 228.311 348.094 229.84 cv
348.094 229.84 348.423 230.063 348.889 229.902 cv
349.356 229.739 349.477 229.362 349.477 229.362 cv
349.666 227.271 349.053 227.017 348.605 226.61 cv
cp
f
364.672 245.548 mo
364.672 245.548 366.527 238.072 362.249 234.656 cv
357.97 231.238 358.741 236.748 358.748 237.365 cv
358.757 237.985 357.403 241.906 358.529 243.142 cv
359.656 244.377 363.989 246.056 363.989 246.056 cv
364.672 245.548 li
cp
f
363.432 247.101 mo
363.432 247.101 359.471 251.292 358.147 250.512 cv
356.824 249.732 355.739 245.864 356.872 244.764 cv
358 243.665 360.339 243.434 363.775 245.956 cv
363.775 245.956 364.218 246.394 363.432 247.101 cv
cp
.517647 .733333 .0235294 rgb
f
364.395 244.88 mo
364.75 245.051 364.6 242.957 364.442 241.97 cv
364.287 240.983 364.258 239.625 363.358 239.148 cv
362.634 238.768 361.955 239.203 362.031 239.906 cv
362.11 240.608 363.569 244.478 364.395 244.88 cv
cp
f
363.768 244.991 mo
364.155 245.117 363.306 243.286 362.58 242.734 cv
361.854 242.184 359.108 240.99 358.721 241.404 cv
358.335 241.819 358.511 242.711 358.754 242.931 cv
358.994 243.151 360.032 243.175 360.501 243.215 cv
360.968 243.256 362.507 243.872 362.968 244.269 cv
363.428 244.666 363.59 244.933 363.768 244.991 cv
cp
f
359.219 239.938 mo
358.925 240.018 358.511 240.806 358.858 241.069 cv
359.206 241.33 360.252 241.306 360.888 241.582 cv
361.521 241.861 362.46 242.59 362.524 242.329 cv
362.586 242.065 362.32 241.248 361.504 240.783 cv
360.687 240.317 359.51 239.859 359.219 239.938 cv
cp
f
359.628 238.613 mo
359.338 238.589 358.892 239.197 359.177 239.571 cv
359.463 239.946 360.154 239.758 360.554 239.987 cv
360.954 240.219 361.809 240.925 361.894 240.846 cv
361.976 240.766 362.002 240.342 361.33 239.669 cv
360.657 239 360.016 238.651 359.628 238.613 cv
cp
f
359.802 237.379 mo
359.444 237.378 359.255 238.09 359.5 238.307 cv
359.746 238.522 361.034 238.97 361.381 239.476 cv
361.727 239.982 361.928 239.6 361.789 239.277 cv
361.648 238.96 360.509 237.382 359.802 237.379 cv
cp
f
360.257 235.659 mo
360.038 235.617 360.012 235.993 359.907 236.363 cv
359.799 236.729 359.529 236.973 359.868 237.118 cv
360.208 237.265 361.77 238.572 361.896 238.832 cv
362.021 239.092 362.44 239.091 362.393 238.679 cv
362.347 238.266 361.348 235.862 360.257 235.659 cv
cp
.360784 .529412 .12549 rgb
f
360.43 233.982 mo
360.253 233.914 360.386 234.322 360.45 234.559 cv
360.511 234.796 360.334 234.99 360.455 235.23 cv
360.575 235.474 362.171 237.305 362.627 238.281 cv
362.956 238.981 363.478 238.435 363.506 238.093 cv
363.549 237.599 362.864 234.904 360.43 233.982 cv
cp
f
362.078 247.229 mo
361.528 247.373 360.2 247.676 359.742 247.351 cv
359.646 247.283 359.596 247.196 359.589 247.08 cv
359.561 246.499 359.781 246.388 359.957 246.296 cv
360.115 246.19 li
360.248 246.087 362.152 245.94 362.768 246.376 cv
362.904 246.529 li
362.89 246.71 li
362.791 246.916 362.462 247.126 362.078 247.229 cv
cp
360.921 249.359 mo
361.036 249.119 361.148 248.879 361.29 248.659 cv
362.137 247.348 li
362.55 247.232 362.893 247.006 363.007 246.768 cv
363.059 246.664 363.065 246.563 363.024 246.475 cv
362.844 246.268 li
362.633 246.119 362.246 246.03 361.823 245.986 cv
361.538 245.804 361.253 245.621 360.976 245.43 cv
360.835 245.333 360.698 245.236 360.563 245.134 cv
360.431 245.028 360.29 244.929 360.143 244.841 cv
359.852 244.664 359.548 244.507 359.236 244.37 cv
358.924 244.238 358.606 244.104 358.263 244.074 cv
358.601 244.113 358.917 244.259 359.223 244.399 cv
359.528 244.548 359.825 244.712 360.107 244.897 cv
360.25 244.99 360.379 245.088 360.513 245.199 cv
360.644 245.308 360.784 245.411 360.918 245.511 cv
361.13 245.666 361.344 245.815 361.561 245.962 cv
361.012 245.931 360.458 245.962 360.183 246.032 cv
359.763 245.834 359.335 245.67 358.909 245.504 cv
358.474 245.335 358.038 245.174 357.6 245.013 cv
358.03 245.192 358.456 245.376 358.883 245.566 cv
359.266 245.733 359.652 245.908 360.022 246.1 cv
360.016 246.103 li
359.895 246.179 li
359.781 246.236 359.627 246.316 359.537 246.524 cv
359.111 246.451 358.683 246.405 358.252 246.392 cv
358.033 246.386 357.812 246.389 357.591 246.414 cv
357.375 246.438 357.153 246.476 356.957 246.575 cv
357.158 246.486 357.377 246.459 357.594 246.445 cv
357.812 246.435 358.031 246.439 358.249 246.458 cv
358.667 246.492 359.086 246.56 359.494 246.65 cv
359.464 246.765 359.45 246.904 359.458 247.089 cv
359.47 247.177 li
359.136 247.353 358.797 247.523 358.448 247.671 cv
358.264 247.747 358.081 247.817 357.882 247.849 cv
357.688 247.893 357.494 247.987 357.375 248.151 cv
357.501 247.994 357.698 247.915 357.89 247.882 cv
358.088 247.863 358.283 247.797 358.469 247.734 cv
358.827 247.605 359.171 247.456 359.515 247.297 cv
359.664 247.46 li
359.94 247.656 360.469 247.654 361.002 247.584 cv
360.822 247.7 360.642 247.817 360.458 247.928 cv
360.183 248.092 359.905 248.258 359.613 248.379 cv
359.292 248.465 359.041 248.694 358.793 248.897 cv
358.547 249.109 358.314 249.332 358.088 249.563 cv
358.323 249.341 358.562 249.124 358.814 248.924 cv
359.068 248.729 359.32 248.515 359.635 248.442 cv
359.94 248.327 360.224 248.169 360.508 248.015 cv
360.785 247.859 361.058 247.697 361.33 247.532 cv
361.552 247.492 361.77 247.442 361.957 247.396 cv
361.233 248.624 li
361.098 248.857 360.997 249.102 360.893 249.344 cv
360.851 249.444 li
360.901 249.404 li
360.921 249.359 li
cp
.176471 .145098 .109804 rgb
f
358.894 250.526 mo
358.428 250.329 358.3 250.094 357.994 249.93 cv
357.685 249.77 357.504 249.603 357.5 249.243 cv
357.496 248.886 357.489 248.943 357.27 248.643 cv
357.049 248.343 357 248.012 357.093 247.689 cv
357.185 247.365 357.09 247.144 356.965 246.857 cv
356.841 246.569 356.731 246.627 357.037 246.246 cv
357.341 245.864 357.334 245.692 357.293 245.43 cv
357.253 245.166 357.343 244.947 357.604 244.779 cv
357.863 244.611 357.975 244.472 358.076 244.24 cv
358.123 244.135 358.187 244.083 358.265 244.049 cv
357.688 244.166 357.221 244.424 356.872 244.764 cv
355.739 245.864 356.824 249.732 358.147 250.512 cv
358.354 250.634 358.625 250.634 358.935 250.548 cv
358.894 250.526 li
cp
f
363.432 247.101 mo
364.218 246.394 363.775 245.956 363.775 245.956 cv
362.445 244.981 361.281 244.417 360.288 244.157 cv
360.713 244.254 362.657 245.362 362.9 245.695 cv
363.067 245.925 363.148 245.983 363.026 246.347 cv
362.928 246.634 363.15 246.582 363 247.164 cv
362.86 247.706 361.949 248.529 361.828 248.637 cv
362.734 247.838 363.432 247.101 363.432 247.101 cv
cp
f
358.639 244.775 mo
358.37 244.806 li
358.339 244.535 li
358.612 244.505 li
358.639 244.775 li
cp
f
357.823 245.797 mo
357.553 245.828 li
357.523 245.557 li
357.793 245.526 li
357.823 245.797 li
cp
f
357.684 247.04 mo
357.414 247.071 li
357.382 246.801 li
357.654 246.771 li
357.684 247.04 li
cp
f
357.648 248.209 mo
357.472 248.229 li
357.454 248.053 li
357.628 248.034 li
357.648 248.209 li
cp
f
365.657 246.333 mo
365.657 246.333 372.538 242.875 376.815 246.292 cv
381.092 249.708 375.55 250.173 374.944 250.303 cv
374.34 250.434 370.813 252.62 369.359 251.795 cv
367.906 250.967 365.312 247.114 365.312 247.114 cv
365.657 246.333 li
cp
f
364.417 247.886 mo
364.417 247.886 361.203 252.675 362.255 253.795 cv
363.307 254.913 367.323 255.115 368.144 253.77 cv
368.966 252.427 368.674 250.095 365.458 247.298 cv
365.458 247.298 364.931 246.963 364.417 247.886 cv
cp
.517647 .733333 .0235294 rgb
f
366.37 246.457 mo
366.125 246.147 368.199 245.832 369.197 245.767 cv
370.194 245.701 371.524 245.431 372.187 246.203 cv
372.719 246.825 372.444 247.584 371.742 247.662 cv
371.041 247.741 366.942 247.173 366.37 246.457 cv
cp
f
366.401 247.093 mo
366.19 246.742 368.161 247.167 368.861 247.754 cv
369.562 248.339 371.332 250.756 371.011 251.225 cv
370.692 251.692 369.783 251.717 369.515 251.528 cv
369.247 251.342 368.995 250.335 368.855 249.888 cv
368.709 249.439 367.767 248.077 367.28 247.713 cv
366.792 247.35 366.495 247.252 366.401 247.093 cv
cp
f
372.332 250.414 mo
372.321 250.718 371.642 251.296 371.308 251.016 cv
370.977 250.734 370.769 249.707 370.359 249.149 cv
369.95 248.594 369.03 247.838 369.272 247.72 cv
369.514 247.599 370.369 247.677 371.003 248.371 cv
371.638 249.065 372.346 250.11 372.332 250.414 cv
cp
f
373.532 249.723 mo
373.622 249.999 373.126 250.567 372.698 250.373 cv
372.271 250.178 372.299 249.464 371.989 249.122 cv
371.674 248.783 370.798 248.104 370.858 248.006 cv
370.917 247.905 371.324 247.788 372.126 248.295 cv
372.93 248.804 373.411 249.352 373.532 249.723 cv
cp
f
374.698 249.279 mo
374.779 249.629 374.126 249.969 373.862 249.78 cv
373.597 249.59 372.875 248.429 372.306 248.202 cv
371.735 247.978 372.065 247.696 372.406 247.762 cv
372.75 247.83 374.54 248.591 374.698 249.279 cv
cp
f
376.276 248.455 mo
376.365 248.662 376.002 248.768 375.667 248.954 cv
375.333 249.14 375.154 249.457 374.939 249.159 cv
374.721 248.859 373.102 247.625 372.821 247.558 cv
372.54 247.493 372.447 247.086 372.86 247.039 cv
373.271 246.995 375.837 247.438 376.276 248.455 cv
cp
.360784 .529412 .12549 rgb
f
377.875 247.918 mo
377.978 248.076 377.549 248.034 377.306 248.025 cv
377.062 248.019 376.911 248.233 376.651 248.17 cv
376.386 248.105 374.25 246.954 373.195 246.722 cv
372.439 246.558 372.858 245.927 373.182 245.824 cv
373.656 245.674 376.436 245.747 377.875 247.918 cv
cp
f
364.917 248.329 mo
365.09 248.275 li
365.27 248.373 li
365.832 248.879 366.108 250.77 366.038 250.922 cv
365.968 251.098 li
365.918 251.291 365.858 251.53 365.285 251.628 cv
365.171 251.649 365.073 251.62 364.988 251.543 cv
364.567 251.163 364.569 249.804 364.591 249.235 cv
364.607 248.836 364.737 248.473 364.917 248.329 cv
cp
362.727 250.865 mo
362.7 250.92 li
362.789 250.859 li
363.001 250.703 363.218 250.551 363.415 250.369 cv
364.454 249.39 li
364.451 249.584 364.451 249.805 364.459 250.033 cv
364.356 250.334 364.259 250.636 364.169 250.94 cv
364.082 251.251 363.99 251.562 363.945 251.888 cv
363.944 252.21 363.792 252.501 363.659 252.793 cv
363.517 253.083 363.36 253.365 363.196 253.642 cv
363.37 253.371 363.536 253.094 363.687 252.807 cv
363.829 252.523 363.999 252.226 364.011 251.895 cv
364.063 251.584 364.167 251.274 364.264 250.968 cv
364.332 250.766 364.408 250.564 364.48 250.363 cv
364.529 250.899 364.645 251.413 364.899 251.641 cv
365.087 251.751 li
365.011 252.12 364.941 252.489 364.894 252.864 cv
364.872 253.063 364.854 253.267 364.879 253.467 cv
364.888 253.659 364.854 253.867 364.728 254.026 cv
364.863 253.875 364.91 253.664 364.911 253.464 cv
364.897 253.265 364.927 253.071 364.961 252.874 cv
365.028 252.501 365.121 252.132 365.218 251.767 cv
365.306 251.759 li
365.487 251.728 365.62 251.681 365.724 251.627 cv
365.904 252.006 366.062 252.399 366.188 252.8 cv
366.251 253.009 366.308 253.221 366.343 253.435 cv
366.379 253.649 366.401 253.872 366.357 254.086 cv
366.411 253.875 366.401 253.647 366.377 253.429 cv
366.352 253.212 366.306 252.994 366.25 252.783 cv
366.143 252.363 366.003 251.957 365.838 251.56 cv
366.02 251.423 366.065 251.256 366.096 251.131 cv
366.145 250.998 li
366.148 250.992 li
366.415 251.311 366.668 251.649 366.918 251.983 cv
367.196 252.358 367.468 252.733 367.74 253.113 cv
367.489 252.722 367.232 252.331 366.972 251.946 cv
366.715 251.565 366.461 251.184 366.176 250.818 cv
366.181 250.537 366.091 249.987 365.938 249.461 cv
366.13 249.638 366.323 249.815 366.522 249.987 cv
366.651 250.099 366.78 250.208 366.915 250.315 cv
367.052 250.419 367.176 250.524 367.299 250.643 cv
367.541 250.877 367.767 251.13 367.979 251.394 cv
368.185 251.662 368.394 251.937 368.508 252.257 cv
368.405 251.932 368.202 251.651 368.005 251.374 cv
367.803 251.103 367.584 250.841 367.346 250.595 cv
367.229 250.473 367.098 250.355 366.968 250.251 cv
366.838 250.141 366.711 250.027 366.587 249.911 cv
366.34 249.683 366.097 249.448 365.859 249.21 cv
365.721 248.809 365.552 248.448 365.358 248.274 cv
365.117 248.146 li
365.021 248.128 364.924 248.156 364.835 248.225 cv
364.627 248.39 364.482 248.772 364.46 249.204 cv
363.37 250.32 li
363.184 250.508 362.974 250.669 362.768 250.833 cv
362.727 250.865 li
cp
.176471 .145098 .109804 rgb
f
362.078 253.067 mo
362.372 253.479 362.631 253.552 362.857 253.814 cv
363.083 254.081 363.285 254.219 363.636 254.146 cv
363.989 254.071 363.929 254.089 364.273 254.236 cv
364.614 254.385 364.946 254.36 365.243 254.198 cv
365.538 254.037 365.774 254.082 366.082 254.14 cv
366.389 254.197 366.355 254.317 366.661 253.936 cv
366.967 253.553 367.137 253.523 367.402 253.505 cv
367.667 253.487 367.858 253.349 367.967 253.061 cv
368.075 252.769 368.186 252.629 368.39 252.479 cv
368.482 252.409 368.517 252.334 368.535 252.252 cv
368.545 252.841 368.399 253.354 368.144 253.77 cv
367.323 255.115 363.307 254.913 362.255 253.795 cv
362.089 253.62 362.03 253.355 362.046 253.033 cv
362.078 253.067 li
cp
f
364.417 247.886 mo
364.931 246.963 365.458 247.298 365.458 247.298 cv
366.702 248.38 367.506 249.39 367.981 250.304 cv
367.792 249.91 366.284 248.258 365.905 248.095 cv
365.645 247.984 365.567 247.918 365.242 248.116 cv
364.982 248.273 364.983 248.049 364.45 248.322 cv
363.95 248.578 363.349 249.649 363.272 249.79 cv
363.851 248.729 364.417 247.886 364.417 247.886 cv
cp
f
367.743 252.046 mo
367.772 252.316 li
368.043 252.287 li
368.012 252.017 li
367.743 252.046 li
cp
f
366.927 253.067 mo
366.956 253.339 li
367.227 253.308 li
367.197 253.037 li
366.927 253.067 li
cp
f
365.743 253.479 mo
365.774 253.749 li
366.043 253.72 li
366.014 253.449 li
365.743 253.479 li
cp
f
364.611 253.771 mo
364.631 253.948 li
364.807 253.93 li
364.788 253.753 li
364.611 253.771 li
cp
f
363.259 247.365 mo
363.259 247.365 361.904 248.51 361.249 249.642 cv
360.591 250.776 360.192 251.54 360.498 251.784 cv
363.729 247.74 li
363.259 247.365 li
cp
f
364.196 248.113 mo
364.196 248.113 363.381 249.688 362.419 250.577 cv
361.456 251.468 360.803 252.028 360.498 251.784 cv
363.729 247.74 li
364.196 248.113 li
cp
f
365.931 245.882 mo
365.738 246.124 365.383 246.163 365.14 245.971 cv
364.899 245.777 364.858 245.422 365.051 245.179 cv
365.247 244.937 365.601 244.898 365.843 245.093 cv
366.086 245.285 366.125 245.639 365.931 245.882 cv
cp
f
365.313 245.79 mo
365.527 245.413 365.71 245.016 365.871 244.614 cv
366.031 244.213 366.164 243.8 366.26 243.378 cv
366.355 242.958 366.415 242.526 366.406 242.1 cv
366.396 241.675 366.32 241.25 366.143 240.872 cv
366.189 240.741 li
366.32 240.787 li
366.322 240.791 li
366.496 241.206 366.559 241.66 366.551 242.101 cv
366.543 242.544 366.466 242.979 366.354 243.401 cv
366.242 243.823 366.091 244.234 365.915 244.633 cv
365.739 245.031 365.542 245.42 365.313 245.79 cv
cp
f
365.279 245.765 mo
365.599 245.472 365.946 245.205 366.301 244.957 cv
366.659 244.714 367.033 244.491 367.421 244.307 cv
367.81 244.12 368.217 243.97 368.635 243.883 cv
369.053 243.797 369.485 243.778 369.893 243.866 cv
370.01 243.793 li
369.934 243.676 li
369.932 243.675 li
369.487 243.598 369.03 243.636 368.601 243.738 cv
368.173 243.846 367.765 244.016 367.377 244.217 cv
366.991 244.423 366.625 244.659 366.273 244.919 cv
365.925 245.179 365.588 245.458 365.279 245.765 cv
cp
f
365.717 246.305 mo
365.802 245.816 365.374 245.679 365.374 245.679 cv
365.374 245.679 365.146 245.292 364.686 245.481 cv
364.232 245.673 363.688 245.699 363.259 247.365 cv
363.259 247.365 363.248 247.689 363.564 247.943 cv
363.881 248.195 364.196 248.113 364.196 248.113 cv
365.725 247.329 365.632 246.792 365.717 246.305 cv
cp
f
369.958 228.732 mo
369.958 228.732 372.192 223.706 369.606 220.77 cv
367.024 217.834 366.881 221.805 366.807 222.243 cv
366.736 222.678 365.296 225.269 365.935 226.274 cv
366.575 227.285 369.415 229.005 369.415 229.005 cv
369.958 228.732 li
cp
f
368.893 229.673 mo
368.893 229.673 365.586 232.128 364.75 231.413 cv
363.916 230.702 363.635 227.847 364.567 227.21 cv
365.499 226.58 367.171 226.708 369.278 228.908 cv
369.278 228.908 369.534 229.271 368.893 229.673 cv
cp
.517647 .733333 .0235294 rgb
f
369.844 228.229 mo
370.073 228.394 370.229 226.901 370.24 226.188 cv
370.253 225.475 370.403 224.517 369.828 224.068 cv
369.367 223.711 368.833 223.933 368.801 224.438 cv
368.769 224.939 369.314 227.845 369.844 228.229 cv
cp
f
369.389 228.229 mo
369.648 228.366 369.279 226.974 368.834 226.495 cv
368.393 226.017 366.611 224.836 366.287 225.078 cv
365.963 225.322 365.976 225.972 366.119 226.157 cv
366.26 226.342 366.989 226.486 367.314 226.573 cv
367.637 226.659 368.641 227.287 368.917 227.621 cv
369.193 227.958 369.275 228.166 369.389 228.229 cv
cp
f
366.818 224.11 mo
366.601 224.127 366.213 224.633 366.422 224.859 cv
366.636 225.088 367.376 225.201 367.788 225.475 cv
368.2 225.747 368.768 226.378 368.845 226.201 cv
368.923 226.024 368.839 225.417 368.322 224.987 cv
367.804 224.562 367.033 224.09 366.818 224.11 cv
cp
f
367.271 223.229 mo
367.071 223.175 366.681 223.547 366.834 223.847 cv
366.989 224.146 367.5 224.1 367.75 224.31 cv
368.004 224.522 368.519 225.124 368.588 225.08 cv
368.656 225.034 368.727 224.74 368.338 224.183 cv
367.948 223.627 367.54 223.304 367.271 223.229 cv
cp
f
367.548 222.381 mo
367.297 222.336 367.075 222.814 367.219 222.996 cv
367.363 223.178 368.216 223.653 368.397 224.052 cv
368.578 224.452 368.766 224.209 368.708 223.966 cv
368.648 223.723 368.045 222.472 367.548 222.381 cv
cp
f
368.082 221.229 mo
367.931 221.172 367.869 221.434 367.748 221.679 cv
367.626 221.925 367.406 222.061 367.625 222.206 cv
367.846 222.352 368.783 223.465 368.839 223.663 cv
368.895 223.86 369.19 223.913 369.209 223.616 cv
369.229 223.32 368.823 221.507 368.082 221.229 cv
cp
.360784 .529412 .12549 rgb
f
368.413 220.067 mo
368.295 219.999 368.338 220.304 368.353 220.479 cv
368.367 220.651 368.219 220.766 368.274 220.951 cv
368.327 221.137 369.223 222.623 369.422 223.369 cv
369.565 223.9 370.003 223.579 370.066 223.345 cv
370.157 223.001 370.01 221.021 368.413 220.067 cv
cp
f
367.924 229.591 mo
367.518 229.627 366.545 229.675 366.263 229.389 cv
366.192 229.181 li
366.244 228.767 366.411 228.716 366.547 228.674 cv
366.671 228.616 li
366.778 228.563 368.134 228.697 368.515 229.079 cv
368.592 229.202 li
368.559 229.328 li
368.463 229.463 368.208 229.568 367.924 229.591 cv
cp
366.846 230.948 mo
366.956 230.794 367.065 230.64 367.19 230.502 cv
367.949 229.685 li
368.255 229.654 368.525 229.537 368.635 229.384 cv
368.684 229.181 li
368.582 229.011 li
368.452 228.882 368.19 228.771 367.898 228.688 cv
367.721 228.525 367.544 228.357 367.374 228.189 cv
367.119 227.931 li
367.039 227.842 366.951 227.752 366.86 227.673 cv
366.674 227.511 366.482 227.364 366.279 227.231 cv
366.076 227.099 365.87 226.961 365.633 226.899 cv
365.868 226.973 366.069 227.11 366.267 227.247 cv
366.463 227.391 366.653 227.544 366.827 227.708 cv
366.917 227.791 366.996 227.876 367.076 227.971 cv
367.155 228.064 367.237 228.152 367.324 228.24 cv
367.449 228.375 367.584 228.508 367.715 228.64 cv
367.335 228.547 366.942 228.5 366.74 228.515 cv
366.469 228.325 366.188 228.157 365.909 227.984 cv
365.624 227.812 365.338 227.644 365.049 227.478 cv
365.33 227.658 365.608 227.839 365.883 228.025 cv
366.131 228.193 366.379 228.363 366.618 228.543 cv
366.613 228.544 li
366.52 228.583 li
366.431 228.609 366.312 228.646 366.222 228.782 cv
365.931 228.677 365.637 228.589 365.337 228.529 cv
365.184 228.497 365.026 228.473 364.868 228.461 cv
364.713 228.45 364.552 228.452 364.402 228.497 cv
364.554 228.46 364.712 228.468 364.868 228.484 cv
365.02 228.503 365.174 228.535 365.326 228.573 cv
365.615 228.651 365.901 228.75 366.178 228.864 cv
366.142 228.942 366.114 229.038 366.098 229.169 cv
366.097 229.233 li
365.84 229.314 365.581 229.393 365.314 229.452 cv
365.176 229.483 365.039 229.511 364.896 229.508 cv
364.751 229.515 364.605 229.555 364.5 229.657 cv
364.609 229.563 364.756 229.531 364.895 229.531 cv
365.038 229.543 365.184 229.522 365.324 229.499 cv
365.589 229.453 365.851 229.392 366.112 229.322 cv
366.196 229.454 li
366.368 229.628 366.74 229.693 367.123 229.709 cv
366.981 229.768 366.839 229.83 366.698 229.886 cv
366.483 229.965 366.266 230.046 366.047 230.098 cv
365.809 230.117 365.604 230.246 365.405 230.358 cv
365.207 230.478 365.015 230.604 364.827 230.741 cv
365.019 230.612 365.217 230.489 365.416 230.38 cv
365.621 230.274 365.825 230.155 366.053 230.143 cv
366.284 230.099 366.502 230.024 366.722 229.951 cv
366.937 229.876 367.148 229.796 367.36 229.712 cv
367.521 229.713 367.68 229.705 367.819 229.695 cv
367.155 230.472 li
367.03 230.615 366.93 230.775 366.828 230.935 cv
366.787 230.999 li
366.826 230.979 li
366.846 230.948 li
cp
.176471 .145098 .109804 rgb
f
365.274 231.516 mo
364.971 231.318 364.911 231.138 364.714 230.985 cv
364.519 230.835 364.411 230.694 364.452 230.442 cv
364.492 230.188 364.484 230.229 364.366 229.992 cv
364.248 229.754 364.257 229.512 364.361 229.297 cv
364.464 229.081 364.424 228.913 364.374 228.696 cv
364.321 228.478 364.239 228.508 364.5 228.275 cv
364.762 228.045 364.779 227.922 364.78 227.733 cv
364.787 227.542 364.876 227.4 365.081 227.313 cv
365.285 227.228 365.379 227.143 365.48 226.992 cv
365.636 226.883 li
365.216 226.895 364.855 227.016 364.567 227.21 cv
363.635 227.847 363.916 230.702 364.75 231.413 cv
364.881 231.524 365.072 231.558 365.299 231.54 cv
365.274 231.516 li
cp
f
368.893 229.673 mo
369.534 229.271 369.278 228.908 369.278 228.908 cv
368.462 228.058 367.712 227.518 367.046 227.209 cv
367.333 227.329 368.563 228.352 368.693 228.616 cv
368.782 228.798 368.831 228.849 368.7 229.091 cv
368.597 229.28 368.757 229.271 368.58 229.663 cv
368.414 230.027 367.67 230.493 367.572 230.553 cv
368.31 230.102 368.893 229.673 368.893 229.673 cv
cp
f
365.81 227.438 mo
365.616 227.426 li
365.628 227.233 li
365.825 227.247 li
365.81 227.438 li
cp
f
365.109 228.056 mo
364.915 228.046 li
364.926 227.85 li
365.123 227.861 li
365.109 228.056 li
cp
f
364.855 228.915 mo
364.663 228.903 li
364.673 228.706 li
364.868 228.72 li
364.855 228.915 li
cp
f
364.683 229.732 mo
364.559 229.724 li
364.568 229.599 li
364.695 229.605 li
364.683 229.732 li
cp
f
370.551 229.407 mo
370.551 229.407 375.822 227.83 378.407 230.766 cv
380.99 233.702 377.034 233.34 376.592 233.355 cv
376.151 233.372 373.398 234.472 372.478 233.71 cv
371.558 232.947 370.211 229.914 370.211 229.914 cv
370.551 229.407 li
cp
f
369.487 230.346 mo
369.487 230.346 366.631 233.315 367.232 234.234 cv
367.835 235.151 370.631 235.793 371.378 234.951 cv
372.124 234.104 372.208 232.429 370.292 230.063 cv
370.292 230.063 369.963 229.762 369.487 230.346 cv
cp
.517647 .733333 .0235294 rgb
f
371.038 229.585 mo
370.903 229.337 372.403 229.372 373.11 229.45 cv
373.824 229.529 374.793 229.502 375.164 230.13 cv
375.46 230.631 375.172 231.132 374.667 231.101 cv
374.165 231.068 371.353 230.159 371.038 229.585 cv
cp
f
370.98 230.036 mo
370.876 229.762 372.211 230.307 372.629 230.805 cv
373.049 231.305 373.995 233.225 373.712 233.515 cv
373.429 233.805 372.786 233.709 372.621 233.542 cv
372.458 233.378 372.403 232.639 372.358 232.307 cv
372.314 231.972 371.822 230.896 371.524 230.581 cv
371.224 230.265 371.028 230.158 370.98 230.036 cv
cp
f
374.741 233.107 mo
374.694 233.321 374.146 233.644 373.949 233.403 cv
373.747 233.166 373.729 232.42 373.511 231.974 cv
373.292 231.532 372.739 230.888 372.923 230.835 cv
373.107 230.778 373.699 230.941 374.058 231.507 cv
374.419 232.074 374.787 232.896 374.741 233.107 cv
cp
f
375.671 232.771 mo
375.699 232.979 375.282 233.315 375.003 233.125 cv
374.726 232.935 374.836 232.436 374.658 232.158 cv
374.48 231.879 373.951 231.294 374.002 231.23 cv
374.058 231.168 374.359 231.137 374.861 231.593 cv
375.36 232.054 375.631 232.495 375.671 232.771 cv
cp
f
376.544 232.604 mo
376.559 232.86 376.057 233.021 375.895 232.852 cv
375.733 232.688 375.371 231.78 374.997 231.55 cv
374.624 231.319 374.89 231.163 375.124 231.253 cv
375.356 231.342 376.52 232.1 376.544 232.604 cv
cp
f
377.759 232.222 mo
377.795 232.377 377.53 232.407 377.271 232.497 cv
377.009 232.585 376.846 232.786 376.728 232.549 cv
376.614 232.313 375.628 231.243 375.44 231.16 cv
375.249 231.078 375.236 230.781 375.532 230.8 cv
375.827 230.819 377.578 231.45 377.759 232.222 cv
cp
.360784 .529412 .12549 rgb
f
378.95 232.04 mo
379.002 232.166 378.708 232.085 378.536 232.048 cv
378.365 232.011 378.233 232.146 378.057 232.067 cv
377.881 231.988 376.52 230.913 375.805 230.619 cv
375.295 230.408 375.668 230.019 375.909 229.984 cv
376.261 229.938 378.208 230.333 378.95 232.04 cv
cp
f
369.782 230.722 mo
369.913 230.704 li
370.027 230.797 li
370.358 231.222 370.318 232.583 370.25 232.682 cv
370.179 232.799 li
370.121 232.929 370.048 233.088 369.632 233.087 cv
369.434 232.991 li
369.184 232.671 369.356 231.714 369.443 231.317 cv
369.502 231.038 369.639 230.799 369.782 230.722 cv
cp
367.928 232.23 mo
367.903 232.268 li
367.972 232.235 li
368.143 232.15 368.312 232.071 368.473 231.968 cv
369.327 231.41 li
369.3 231.543 369.272 231.701 369.249 231.861 cv
369.14 232.06 369.035 232.261 368.934 232.466 cv
368.833 232.671 368.729 232.88 368.66 233.103 cv
368.616 233.328 368.474 233.517 368.342 233.705 cv
368.208 233.892 368.064 234.069 367.911 234.242 cv
368.069 234.075 368.221 233.9 368.363 233.717 cv
368.497 233.534 368.653 233.346 368.703 233.116 cv
368.78 232.905 368.891 232.697 368.999 232.496 cv
369.069 232.36 369.147 232.228 369.226 232.097 cv
369.192 232.479 369.209 232.856 369.358 233.049 cv
369.479 233.147 li
369.377 233.397 369.282 233.65 369.204 233.905 cv
369.164 234.044 369.125 234.185 369.118 234.329 cv
369.101 234.465 369.051 234.608 368.944 234.704 cv
369.055 234.614 369.118 234.472 369.141 234.332 cv
369.158 234.19 369.203 234.057 369.25 233.922 cv
369.341 233.669 369.456 233.42 369.567 233.175 cv
369.631 233.182 li
369.762 233.182 369.861 233.165 369.943 233.141 cv
370.021 233.43 370.083 233.727 370.122 234.022 cv
370.141 234.179 370.156 234.335 370.153 234.489 cv
370.15 234.646 370.139 234.804 370.083 234.95 cv
370.145 234.806 370.167 234.646 370.177 234.489 cv
370.186 234.333 370.18 234.174 370.169 234.02 cv
370.144 233.711 370.096 233.409 370.029 233.106 cv
370.175 233.035 370.227 232.923 370.267 232.838 cv
370.315 232.749 li
370.317 232.747 li
370.464 233.005 370.602 233.271 370.738 233.541 cv
370.886 233.839 371.032 234.138 371.176 234.436 cv
371.047 234.13 370.914 233.823 370.781 233.521 cv
370.646 233.221 370.514 232.921 370.359 232.629 cv
370.398 232.431 370.405 232.034 370.36 231.643 cv
370.474 231.791 370.587 231.94 370.707 232.086 cv
370.783 232.182 370.861 232.275 370.939 232.364 cv
371.027 232.456 371.101 232.545 371.173 232.643 cv
371.313 232.839 371.44 233.046 371.557 233.258 cv
371.667 233.472 371.783 233.692 371.822 233.932 cv
371.79 233.69 371.68 233.466 371.58 233.246 cv
371.469 233.03 371.347 232.819 371.211 232.617 cv
371.145 232.515 371.065 232.42 370.988 232.325 cv
370.912 232.234 370.836 232.137 370.762 232.042 cv
370.619 231.85 370.474 231.654 370.337 231.457 cv
370.292 231.158 370.215 230.885 370.102 230.736 cv
369.948 230.615 li
369.739 230.638 li
369.573 230.729 369.421 230.979 369.354 231.28 cv
368.448 231.929 li
368.294 232.037 368.126 232.124 367.962 232.214 cv
367.928 232.23 li
cp
.176471 .145098 .109804 rgb
f
367.198 233.7 mo
367.354 234.026 367.527 234.109 367.652 234.323 cv
367.78 234.538 367.902 234.662 368.16 234.652 cv
368.417 234.646 368.374 234.649 368.597 234.796 cv
368.817 234.941 369.054 234.967 369.282 234.89 cv
369.51 234.813 369.671 234.873 369.881 234.954 cv
370.09 235.033 370.052 235.113 370.315 234.881 cv
370.577 234.649 370.7 234.649 370.888 234.67 cv
371.077 234.691 371.23 234.618 371.342 234.426 cv
371.452 234.236 371.549 234.149 371.71 234.072 cv
371.841 233.929 li
371.776 234.348 371.608 234.687 371.378 234.951 cv
370.631 235.793 367.835 235.151 367.232 234.234 cv
367.137 234.091 367.129 233.896 367.179 233.674 cv
367.198 233.7 li
cp
f
369.487 230.346 mo
369.963 229.762 370.292 230.063 370.292 230.063 cv
371.033 230.979 371.473 231.79 371.694 232.491 cv
371.611 232.19 370.753 230.839 370.508 230.677 cv
370.339 230.568 370.293 230.512 370.04 230.61 cv
369.835 230.691 369.866 230.53 369.456 230.657 cv
369.072 230.775 368.518 231.453 368.447 231.542 cv
368.984 230.872 369.487 230.346 369.487 230.346 cv
cp
f
371.308 233.687 mo
371.295 233.88 li
371.492 233.893 li
371.502 233.696 li
371.308 233.687 li
cp
f
370.608 234.305 mo
370.596 234.498 li
370.789 234.509 li
370.801 234.317 li
370.608 234.305 li
cp
f
369.724 234.447 mo
369.711 234.639 li
369.908 234.652 li
369.918 234.458 li
369.724 234.447 li
cp
f
368.893 234.512 mo
368.884 234.637 li
369.008 234.646 li
369.019 234.52 li
368.893 234.512 li
cp
f
368.738 229.836 mo
368.738 229.836 367.641 230.474 367.04 231.188 cv
366.436 231.904 366.058 232.392 366.246 232.601 cv
369.022 230.16 li
368.738 229.836 li
cp
f
369.303 230.479 mo
369.303 230.479 368.535 231.484 367.748 231.991 cv
366.959 232.498 366.427 232.813 366.246 232.601 cv
369.022 230.16 li
369.303 230.479 li
cp
f
370.802 229.125 mo
370.636 229.272 370.38 229.254 370.235 229.088 cv
370.088 228.923 370.104 228.668 370.268 228.521 cv
370.438 228.373 370.692 228.391 370.838 228.558 cv
370.985 228.724 370.968 228.978 370.802 229.125 cv
cp
f
370.377 228.984 mo
370.574 228.744 370.753 228.489 370.917 228.227 cv
371.079 227.963 371.224 227.688 371.344 227.404 cv
371.464 227.12 371.559 226.826 371.607 226.523 cv
371.652 226.224 371.652 225.916 371.572 225.625 cv
371.624 225.54 li
371.708 225.589 li
371.709 225.592 li
371.781 225.908 371.769 226.233 371.708 226.543 cv
371.648 226.854 371.541 227.15 371.408 227.435 cv
371.276 227.718 371.119 227.985 370.947 228.243 cv
370.772 228.502 370.584 228.752 370.377 228.984 cv
cp
f
370.357 228.96 mo
370.62 228.794 370.896 228.652 371.176 228.521 cv
371.458 228.396 371.749 228.284 372.046 228.204 cv
372.343 228.12 372.648 228.065 372.951 228.054 cv
373.256 228.047 373.563 228.087 373.84 228.2 cv
373.931 228.162 li
373.891 228.07 li
373.89 228.069 li
373.586 227.959 373.262 227.93 372.947 227.949 cv
372.631 227.971 372.324 228.038 372.027 228.136 cv
371.73 228.23 371.44 228.352 371.163 228.492 cv
370.884 228.629 370.614 228.783 370.357 228.96 cv
cp
f
370.601 229.396 mo
370.718 229.063 370.434 228.913 370.434 228.913 cv
370.434 228.913 370.322 228.611 369.976 228.688 cv
369.631 228.766 369.246 228.718 368.738 229.836 cv
368.738 229.836 368.689 230.063 368.88 230.28 cv
369.072 230.498 369.303 230.479 369.303 230.479 cv
370.478 230.116 370.478 229.728 370.601 229.396 cv
cp
f
380.496 28.7651 mo
380.496 42.8462 369.087 54.2544 355.008 54.2544 cv
340.932 54.2544 329.523 42.8462 329.523 28.7651 cv
329.523 14.6904 340.932 3.28125 355.008 3.28125 cv
369.087 3.28125 380.496 14.6904 380.496 28.7651 cv
cp
.254902 .741176 .941176 rgb
f
380.344 26.0107 mo
379.642 31.9771 376.657 41.1694 366.839 41.312 cv
356.043 41.4736 354.613 28.7666 354.613 28.7666 cv
354.613 21.8389 348.995 16.2241 342.068 16.2241 cv
336.495 16.2241 331.777 19.8594 330.143 24.8857 cv
330.045 24.8687 329.952 24.8535 329.856 24.8408 cv
329.655 26.1226 329.523 27.4287 329.523 28.7651 cv
329.523 28.7666 li
329.523 29.2002 329.545 29.6274 329.587 30.0498 cv
330.259 43.5288 341.366 54.2544 355.008 54.2544 cv
369.087 54.2544 380.496 42.8462 380.496 28.7651 cv
380.496 27.8325 380.438 26.9194 380.344 26.0107 cv
cp
.0823529 .0823529 .0823529 rgb
f
344.287 29.4009 mo
344.287 31.0679 342.937 32.4175 341.272 32.4175 cv
339.606 32.4175 338.254 31.0679 338.254 29.4009 cv
338.254 27.7339 339.606 26.3843 341.272 26.3843 cv
342.937 26.3843 344.287 27.7339 344.287 29.4009 cv
cp
.254902 .741176 .941176 rgb
f
370.172 29.4009 mo
370.172 31.0679 368.822 32.4175 367.158 32.4175 cv
365.489 32.4175 364.138 31.0679 364.138 29.4009 cv
364.138 27.7339 365.489 26.3843 367.158 26.3843 cv
368.822 26.3843 370.172 27.7339 370.172 29.4009 cv
cp
.0823529 .0823529 .0823529 rgb
f
328.077 53.1313 mo
324.941 53.249 324.932 53.4277 324.932 53.4277 cv
324.932 53.4277 324.778 53.5205 326.147 56.3403 cv
328.232 60.6426 329.981 69.5625 336.237 73.3242 cv
342.494 77.0845 349.444 73.1108 351.63 69.4761 cv
353.817 65.8384 354.066 57.8364 347.807 54.0737 cv
341.551 50.3149 332.852 52.957 328.077 53.1313 cv
cp
.972549 .513726 .52549 rgb
f
339.793 42.0767 mo
336.715 40.4458 336.606 40.6123 336.606 40.6123 cv
336.606 40.6123 336.409 40.6147 336.157 44.0903 cv
335.775 49.3906 332.5 58.9419 336.431 66.0366 cv
340.362 73.1343 349.256 73.1699 353.38 70.8838 cv
357.504 68.6001 362.189 61.0381 358.256 53.9443 cv
354.326 46.8511 344.492 44.5601 339.793 42.0767 cv
cp
.752941 .168627 .47451 rgb
f
381.784 54.0098 mo
384.911 54.2334 384.914 54.4141 384.914 54.4141 cv
384.914 54.4141 385.065 54.5103 383.598 57.2827 cv
381.361 61.5083 379.299 70.3628 372.916 73.8984 cv
366.53 77.4385 359.725 73.2188 357.669 69.5098 cv
355.615 65.7993 355.645 57.7944 362.029 54.2534 cv
368.416 50.7183 377.015 53.6616 381.784 54.0098 cv
cp
.972549 .513726 .52549 rgb
f
370.461 42.5684 mo
373.598 41.0493 373.7 41.2192 373.7 41.2192 cv
373.7 41.2192 373.898 41.2275 374.024 44.709 cv
374.225 50.0205 377.156 59.6836 372.977 66.6338 cv
368.8 73.5864 359.91 73.3105 355.871 70.8818 cv
351.831 68.4507 347.414 60.7319 351.589 53.7793 cv
355.768 46.8291 365.681 44.8862 370.461 42.5684 cv
cp
.752941 .168627 .47451 rgb
f
357.55 36.0527 mo
355.49 32.7739 355.294 32.8711 355.294 32.8711 cv
355.294 32.8711 355.1 32.7671 352.928 35.9697 cv
349.616 40.8569 341.161 48.2329 341.001 57.2437 cv
340.843 66.2515 349.379 71.231 354.615 71.3232 cv
359.854 71.4165 368.563 66.7407 368.719 57.7319 cv
368.879 48.7217 360.688 41.0527 357.55 36.0527 cv
cp
.972549 .513726 .52549 rgb
f
356.501 48.9214 mo
355.173 46.8076 355.045 46.8721 355.045 46.8721 cv
355.045 46.8721 354.924 46.8037 353.523 48.8677 cv
351.39 52.0151 345.941 56.7686 345.837 62.5747 cv
345.736 68.3779 351.238 71.5874 354.611 71.647 cv
357.984 71.7061 363.597 68.6938 363.699 62.8901 cv
363.799 57.0835 358.524 52.1406 356.501 48.9214 cv
cp
.8 .152941 .466667 rgb
f
245.908 1.6875 mo
245.908 1.6875 235.279 -1.44971 225.767 7.896 cv
216.242 17.2534 212.605 35.8281 225.034 51.4116 cv
236.947 66.3486 232.798 72.5264 229.374 74.3052 cv
225.948 76.0854 244.276 75.3594 246.711 66.252 cv
249.15 57.146 254.035 39.2598 254.035 39.2598 cv
254.035 39.2598 244.888 13.2739 244.656 12.5903 cv
244.423 11.9067 245.908 1.6875 245.908 1.6875 cv
cp
.0823529 .0823529 .0823529 rgb
f
235.758 8.04004 mo
234.395 9.07422 230.237 13.3066 229.246 16.9966 cv
228.252 20.6855 228.521 21.0054 228.923 22.3228 cv
229.598 24.5303 227.217 26.0117 225.909 27.1196 cv
223.885 28.8354 221.549 30.0649 223.896 31.7261 cv
226.529 33.5923 225.459 34.5845 224.437 35.2183 cv
223.682 35.686 224.675 37.0405 224.987 37.4492 cv
224.987 37.4492 223.4 38.4971 224.165 39.457 cv
224.93 40.415 225.957 40.4707 225.888 41.2759 cv
225.82 42.0791 224.4 45.0356 225.723 46.355 cv
227.048 47.6738 231.174 47.4585 233.276 47.6563 cv
235.058 47.8228 237.479 48.0493 239.209 50.0923 cv
244.723 56.6079 234.715 71.4507 234.715 71.4507 cv
234.715 71.4507 247.565 62.79 256.768 53.7925 cv
259.673 50.9521 257.029 42.3545 256.823 42.083 cv
256.615 41.8096 244.99 20.2852 244.99 20.2852 cv
235.758 8.04004 li
cp
.992157 .694118 .443137 rgb
f
234.151 9.51416 mo
234.151 9.51416 230.667 18.4912 243.617 32.7109 cv
255.497 45.7539 239.449 72.1772 224.762 76.0298 cv
224.762 76.0298 261.937 77.6895 271.292 49.918 cv
281.827 18.6499 265.298 4.44531 255.513 1.02441 cv
245.726 -2.39795 236.763 3.34619 234.151 9.51416 cv
cp
.180392 .180392 .180392 rgb
f
226.144 23.438 mo
226.144 23.438 229.104 24.1274 230.173 22.3638 cv
229.69 24.0962 li
229.69 24.0962 227.867 24.3999 226.144 23.438 cv
cp
.992157 .694118 .443137 rgb
f
244.448 30.626 mo
244.448 30.626 236.369 31.1099 236.749 20.6709 cv
236.749 20.6709 244.502 20.5605 244.448 30.626 cv
cp
.972549 .513726 .52549 rgb
f
244.453 30.6284 mo
244.453 30.6284 238.173 26.4546 243.878 19.6191 cv
243.878 19.6191 249.72 23.873 244.453 30.6284 cv
cp
f
249.132 27.999 mo
247.709 28.8716 245.791 31.6284 246.665 33.0547 cv
247.534 34.4761 250.864 34.0225 252.291 33.1514 cv
253.712 32.2778 254.158 30.4185 253.286 28.9971 cv
252.416 27.5762 250.557 27.1274 249.132 27.999 cv
cp
.752941 .168627 .47451 rgb
f
252.216 34.3364 mo
250.95 33.2559 247.73 32.2827 246.647 33.5493 cv
245.561 34.8188 247.024 37.8481 248.291 38.9297 cv
249.56 40.0176 251.466 39.8643 252.552 38.5947 cv
253.637 37.3301 253.486 35.4229 252.216 34.3364 cv
cp
f
247.103 39.2534 mo
247.743 37.7119 247.67 34.3496 246.131 33.7109 cv
244.587 33.0723 242.159 35.397 241.52 36.9375 cv
240.883 38.4795 241.612 40.248 243.156 40.8872 cv
244.697 41.5264 246.465 40.7939 247.103 39.2534 cv
cp
f
240.864 35.8691 mo
242.528 35.9985 245.705 34.8936 245.836 33.2314 cv
245.966 31.5679 243.001 29.9756 241.339 29.8467 cv
239.676 29.7144 238.222 30.9541 238.091 32.6196 cv
237.958 34.2827 239.202 35.7373 240.864 35.8691 cv
cp
f
242.167 28.9307 mo
242.557 30.5522 244.589 33.2314 246.214 32.8428 cv
247.834 32.4556 248.43 29.145 248.044 27.5215 cv
247.654 25.8979 246.023 24.8979 244.401 25.2896 cv
242.779 25.6787 241.777 27.3091 242.167 28.9307 cv
cp
f
245.83 33.0942 mo
246.245 33.7783 li
248.611 32.3306 li
248.192 31.6484 li
245.83 33.0942 li
cp
1 1 1 rgb
f
248.53 30.9331 mo
248.103 31.1963 247.952 31.7246 248.192 32.1157 cv
248.433 32.5083 248.972 32.6157 249.399 32.353 cv
249.824 32.0923 249.974 31.563 249.736 31.1724 cv
249.496 30.7808 248.955 30.6724 248.53 30.9331 cv
cp
f
246.28 32.752 mo
245.76 33.3613 li
247.869 35.1616 li
248.384 34.5518 li
246.28 32.752 li
cp
f
249.172 34.6538 mo
248.788 34.3281 248.241 34.3496 247.942 34.6997 cv
247.644 35.0444 247.708 35.5952 248.089 35.918 cv
248.469 36.2441 249.018 36.2251 249.319 35.874 cv
249.616 35.5264 249.548 34.9785 249.172 34.6538 cv
cp
f
246.744 33.0752 mo
246.006 32.769 li
244.946 35.3306 li
245.684 35.6357 li
246.744 33.0752 li
cp
f
245.83 36.4116 mo
246.022 35.9512 245.834 35.4355 245.409 35.2568 cv
244.984 35.0815 244.484 35.314 244.291 35.7759 cv
244.103 36.2383 244.29 36.7544 244.715 36.9297 cv
245.139 37.1064 245.639 36.8745 245.83 36.4116 cv
cp
f
246.579 33.6206 mo
246.643 32.8228 li
243.88 32.605 li
243.817 33.4014 li
246.579 33.6206 li
cp
f
243.125 33.7803 mo
243.625 33.8208 244.057 33.4819 244.093 33.022 cv
244.129 32.5615 243.756 32.1592 243.257 32.1201 cv
242.756 32.082 242.326 32.4199 242.291 32.8774 cv
242.251 33.3369 242.628 33.7417 243.125 33.7803 cv
cp
f
246.015 33.6309 mo
246.792 33.4458 li
246.145 30.7495 li
245.369 30.9331 li
246.015 33.6309 li
cp
f
244.794 30.3965 mo
244.909 30.8804 245.369 31.1885 245.815 31.0791 cv
246.261 30.9751 246.529 30.4932 246.414 30.0068 cv
246.295 29.522 245.839 29.2153 245.392 29.3203 cv
244.945 29.4272 244.676 29.9077 244.794 30.3965 cv
cp
f
246.6 32.8794 mo
246.546 33.4316 li
248.479 33.6157 li
248.533 33.061 li
246.6 32.8794 li
cp
f
249.022 32.8032 mo
248.672 32.769 248.362 33.002 248.336 33.3247 cv
248.304 33.6411 248.563 33.9312 248.91 33.9644 cv
249.258 33.9971 249.565 33.7632 249.595 33.4438 cv
249.627 33.123 249.37 32.8374 249.022 32.8032 cv
cp
f
246.534 33.3486 mo
245.986 33.4702 li
246.41 35.3652 li
246.955 35.2432 li
246.534 33.3486 li
cp
f
247.35 35.6289 mo
247.274 35.2876 246.958 35.0669 246.645 35.1353 cv
246.331 35.2061 246.139 35.5415 246.214 35.8818 cv
246.287 36.2212 246.606 36.4434 246.92 36.3735 cv
247.232 36.3052 247.425 35.9683 247.35 35.6289 cv
cp
f
246.105 33.457 mo
245.822 32.9775 li
244.15 33.9644 li
244.434 34.4453 li
246.105 33.457 li
cp
f
244.192 34.9419 mo
244.491 34.7642 244.604 34.3955 244.441 34.1172 cv
244.278 33.8408 243.901 33.7593 243.598 33.937 cv
243.297 34.1162 243.186 34.4834 243.348 34.7603 cv
243.514 35.0386 243.889 35.1182 244.192 34.9419 cv
cp
f
245.838 33.0601 mo
246.214 32.6421 li
244.757 31.3569 li
244.386 31.7754 li
245.838 33.0601 li
cp
f
243.838 31.6973 mo
244.102 31.9272 244.486 31.9224 244.702 31.6782 cv
244.915 31.438 244.874 31.0537 244.612 30.8213 cv
244.346 30.5898 243.962 30.5977 243.75 30.8389 cv
243.536 31.082 243.576 31.4648 243.838 31.6973 cv
cp
f
246.164 32.6826 mo
246.673 32.9082 li
247.445 31.126 li
246.936 30.9058 li
246.164 32.6826 li
cp
f
246.841 30.3594 mo
246.699 30.6812 246.828 31.0459 247.122 31.1724 cv
247.419 31.3008 247.769 31.1445 247.909 30.8242 cv
248.048 30.5034 247.921 30.1396 247.627 30.0117 cv
247.331 29.8843 246.982 30.0371 246.841 30.3594 cv
cp
f
204.613 168.828 mo
204.613 176.534 219.935 182.779 238.837 182.779 cv
257.74 182.779 273.062 176.534 273.062 168.828 cv
273.062 161.124 257.74 154.878 238.837 154.878 cv
219.935 154.878 204.613 161.124 204.613 168.828 cv
cp
.0823529 .607843 .819608 rgb
f
209.937 166.659 mo
209.937 173.165 222.875 178.439 238.837 178.439 cv
254.799 178.439 267.739 173.165 267.739 166.659 cv
267.739 160.152 254.799 154.878 238.837 154.878 cv
222.875 154.878 209.937 160.152 209.937 166.659 cv
cp
.254902 .741176 .941176 rgb
f
213.738 165.108 mo
213.738 170.759 224.974 175.338 238.837 175.338 cv
252.701 175.338 263.937 170.759 263.937 165.108 cv
263.937 159.458 252.701 154.878 238.837 154.878 cv
224.974 154.878 213.738 159.458 213.738 165.108 cv
cp
.0823529 .607843 .819608 rgb
f
217.643 163.518 mo
217.643 168.288 227.131 172.156 238.837 172.156 cv
250.544 172.156 260.032 168.288 260.032 163.518 cv
260.032 158.747 250.544 154.878 238.837 154.878 cv
227.131 154.878 217.643 158.747 217.643 163.518 cv
cp
.254902 .741176 .941176 rgb
f
223.15 161.272 mo
223.15 164.804 230.172 167.667 238.837 167.667 cv
247.501 167.667 254.526 164.804 254.526 161.272 cv
254.526 157.741 247.501 154.878 238.837 154.878 cv
230.172 154.878 223.15 157.741 223.15 161.272 cv
cp
.0823529 .607843 .819608 rgb
f
254.526 161.272 mo
254.522 155.033 239.796 152.863 239.796 133.487 cv
239.796 133.487 240.107 130.698 241.5 128.528 cv
242.897 126.358 241.813 123.102 238.837 123.102 cv
238.837 163.518 li
254.526 161.272 li
cp
f
223.151 161.272 mo
223.154 155.033 237.879 152.863 237.879 133.487 cv
237.879 133.487 237.57 130.698 236.174 128.528 cv
234.78 126.358 235.863 123.102 238.837 123.102 cv
238.837 163.518 li
223.151 161.272 li
cp
f
234.498 114.113 mo
234.498 116.51 236.44 119.382 238.837 119.382 cv
241.236 119.382 243.179 116.51 243.179 114.113 cv
243.179 111.715 241.236 109.772 238.837 109.772 cv
236.44 109.772 234.498 111.715 234.498 114.113 cv
cp
f
237.877 118.153 mo
237.157 118.033 236.515 117.546 236.046 116.978 cv
235.57 116.4 235.239 115.707 235.083 114.954 cv
235.045 114.765 235.029 114.571 235.018 114.376 cv
235.014 114.069 li
235.022 113.977 235.016 113.91 235.037 113.797 cv
235.1 113.385 235.202 113.015 235.396 112.671 cv
235.759 111.985 236.382 111.457 237.083 111.269 cv
236.608 111.813 236.288 112.381 236.115 112.973 cv
236.041 113.267 235.979 113.578 235.982 113.855 cv
235.966 114.2 236 114.441 236.064 114.763 cv
236.17 115.371 236.407 115.968 236.692 116.545 cv
236.997 117.116 237.35 117.659 237.877 118.153 cv
cp
.572549 .87451 1 rgb
f
15.334 300.54 mo
15.334 302.944 13.3853 304.894 10.981 304.894 cv
8.57861 304.894 6.62939 302.944 6.62939 300.54 cv
6.62939 298.138 8.57861 296.19 10.981 296.19 cv
13.3853 296.19 15.334 298.138 15.334 300.54 cv
cp
.0823529 .607843 .819608 rgb
f
15.334 300.54 mo
15.334 296.663 10.1602 293.542 12.2407 287.487 cv
14.3228 281.431 19.4351 277.737 22.8296 277.878 cv
26.2231 278.017 22.8296 274.431 22.8296 274.431 cv
10.981 278.593 li
6.64502 284.975 li
6.64502 284.975 10.1602 288.433 10.1602 291.271 cv
10.1602 294.108 6.62939 297.703 6.62939 300.54 cv
15.334 300.54 li
cp
f
28.3545 248.91 mo
27.6064 249.069 26.8433 249.196 26.0903 249.284 cv
24.7251 249.442 23.3462 249.481 21.9971 249.338 cv
19.2983 249.022 16.6582 247.952 14.2495 246.548 cv
9.42432 243.702 5.41064 239.396 2.86084 234.304 cv
5.12939 239.53 8.93311 244.131 13.7534 247.345 cv
16.168 248.93 18.8491 250.212 21.7988 250.729 cv
23.27 250.984 24.7559 251.035 26.2275 250.962 cv
26.645 250.939 27.0615 250.906 27.4775 250.864 cv
24.8848 253.356 17.9307 257.97 9.61328 253.749 cv
-2.44189 247.632 .258789 229.331 .258789 229.331 cv
1.02881 230.987 6.55615 235.75 14.5142 234.923 cv
22.4736 234.095 25.5723 238.621 27.1382 242.567 cv
27.9551 244.626 28.252 247.464 28.3545 248.91 cv
cp
.517647 .733333 .0235294 rgb
f
50.1689 259.841 mo
49.103 259.54 48.0103 259.284 46.9277 259.084 cv
44.9678 258.727 42.9761 258.538 41.0083 258.62 cv
37.0713 258.818 33.147 260.118 29.5273 261.922 cv
22.2734 265.583 15.0581 270.892 10.8862 278.021 cv
14.6641 270.673 21.6021 264.919 28.8838 260.726 cv
32.5313 258.657 36.5347 257.056 40.853 256.585 cv
43.0059 256.358 45.1621 256.427 47.2847 256.671 cv
47.8877 256.741 48.4873 256.831 49.0854 256.93 cv
45.5684 253.075 35.9399 245.738 23.4985 251.06 cv
5.4668 258.771 6.64502 284.975 6.64502 284.975 cv
7.91748 282.652 16.3711 276.28 27.8135 278.232 cv
39.2563 280.187 45.1675 274.472 47.8086 268.907 cv
49.186 266.007 49.8843 261.925 50.1689 259.841 cv
cp
.360784 .529412 .12549 rgb
f
51.4624 255.71 mo
50.73 255.287 50.0083 254.829 49.3237 254.345 cv
48.0854 253.466 46.9238 252.48 45.9209 251.364 cv
43.9341 249.112 42.5557 246.282 41.6118 243.349 cv
39.7471 237.445 39.6289 230.94 41.2949 224.873 cv
39.2979 230.843 39.0283 237.433 40.6177 243.636 cv
41.4307 246.724 42.6875 249.757 44.729 252.362 cv
45.7505 253.657 46.9355 254.798 48.1987 255.823 cv
48.5581 256.114 48.9248 256.395 49.2979 256.668 cv
45.3252 256.802 36.2021 255.457 32.4819 245.845 cv
27.0903 231.91 42.8291 218.861 42.8291 218.861 cv
42.2393 220.791 43.2637 228.79 50.4175 233.987 cv
57.5732 239.187 56.7764 245.196 55.1475 249.598 cv
54.2988 251.892 52.4453 254.444 51.4624 255.71 cv
cp
.517647 .733333 .0235294 rgb
f
12.4717 303.552 mo
11.9927 304.021 11.2837 304.272 10.5723 304.265 cv
9.85498 304.269 9.13086 304 8.56006 303.542 cv
7.99805 303.081 7.57471 302.434 7.42578 301.73 cv
7.26904 301.034 7.36523 300.292 7.72363 299.722 cv
7.81348 301.048 8.33203 302.079 9.18848 302.766 cv
10.0337 303.458 11.1611 303.743 12.4717 303.552 cv
cp
.572549 .87451 1 rgb
f
54.7154 165.102 mo
54.7154 173.528 42.7011 180.358 27.8829 180.358 cv
13.0645 180.358 1.05034 173.528 1.05034 165.102 cv
1.05034 156.679 13.0645 149.846 27.8829 149.846 cv
42.7011 149.846 54.7154 156.679 54.7154 165.102 cv
.0823529 .0823529 .0823529 rgb
f
41.8076 163.901 mo
41.8076 169.952 33.1816 174.853 22.542 174.853 cv
11.9034 174.853 3.27786 169.952 3.27786 163.901 cv
3.27786 157.851 11.9034 152.947 22.542 152.947 cv
33.1816 152.947 41.8076 157.851 41.8076 163.901 cv
.180392 .180392 .180392 rgb
f
21.5664 155 mo
21.8633 156.311 19.3906 158.353 16.041 159.557 cv
12.6924 160.764 9.73631 160.676 9.43893 159.365 cv
9.14113 158.052 11.6138 156.012 14.9634 154.807 cv
18.312 153.601 21.2681 153.686 21.5664 155 cv
.823529 .823529 .823529 rgb
f
8.27295 161.356 mo
9.17871 161.953 9.4126 163.574 8.79492 164.98 cv
8.17676 166.384 6.94141 167.04 6.03564 166.444 cv
5.12842 165.849 4.89355 164.225 5.51221 162.821 cv
6.12988 161.417 7.36426 160.762 8.27295 161.356 cv
cp
f
gsave
36.149 156.146 mo
35.0591 155.528 33.8404 154.984 32.5165 154.528 cv
35.8465 154.079 38.8552 153.158 41.3107 151.896 cv
42.0928 152.154 42.8498 152.433 43.5796 152.732 cv
41.6378 154.188 39.0907 155.368 36.149 156.146 cv
14.2001 154.025 mo
13.473 153.624 12.7995 153.192 12.1865 152.732 cv
12.9163 152.433 13.6731 152.154 14.4551 151.896 cv
15.4758 152.421 16.5916 152.886 17.7868 153.284 cv
16.538 153.464 15.3381 153.713 14.2001 154.025 cv
clp
12.1865 151.896 mo
43.5796 151.896 li
43.5796 156.146 li
12.1865 156.146 li
cp
.0392157 .0392157 .0392157 rgb
f
grestore
27.8829 157.183 mo
25.468 157.183 23.1576 156.934 21.0227 156.481 cv
21.4604 155.945 21.6644 155.433 21.5664 155 cv
21.409 154.306 20.5119 153.955 19.2076 153.955 cv
18.1546 153.955 16.8357 154.184 15.4269 154.647 cv
15.0027 154.449 14.5938 154.242 14.2001 154.025 cv
15.3381 153.713 16.538 153.464 17.7868 153.284 cv
20.751 154.269 24.2011 154.834 27.8829 154.834 cv
29.478 154.834 31.0291 154.728 32.5165 154.528 cv
33.8404 154.984 35.0591 155.528 36.149 156.146 cv
33.6373 156.811 30.8379 157.183 27.8829 157.183 cv
.0823529 .0823529 .0823529 rgb
f
21.0227 156.481 mo
18.9747 156.046 17.0878 155.422 15.4269 154.647 cv
16.8357 154.184 18.1546 153.955 19.2076 153.955 cv
20.5119 153.955 21.409 154.306 21.5664 155 cv
21.6644 155.433 21.4604 155.945 21.0227 156.481 cv
.384314 .384314 .384314 rgb
f
47.9102 143.447 mo
47.9102 149.737 38.9429 154.834 27.8829 154.834 cv
16.8227 154.834 7.85595 149.737 7.85595 143.447 cv
7.85595 137.16 16.8227 132.061 27.8829 132.061 cv
38.9429 132.061 47.9102 137.16 47.9102 143.447 cv
.0823529 .0823529 .0823529 rgb
f
38.2754 142.55 mo
38.2754 147.066 31.8379 150.726 23.897 150.726 cv
15.956 150.726 9.51858 147.066 9.51858 142.55 cv
9.51858 138.034 15.956 134.377 23.897 134.377 cv
31.8379 134.377 38.2754 138.034 38.2754 142.55 cv
.180392 .180392 .180392 rgb
f
23.1679 135.907 mo
23.3897 136.887 21.5454 138.409 19.0445 139.308 cv
16.5454 140.208 14.3393 140.145 14.1162 139.166 cv
13.895 138.186 15.7397 136.661 18.2407 135.762 cv
20.7402 134.863 22.9458 134.926 23.1679 135.907 cv
.823529 .823529 .823529 rgb
f
13.2466 140.652 mo
13.9229 141.097 14.0972 142.308 13.6367 143.355 cv
13.1743 144.403 12.2524 144.894 11.5767 144.448 cv
10.8999 144.005 10.7246 142.794 11.187 141.745 cv
11.6475 140.696 12.5684 140.207 13.2466 140.652 cv
cp
f
33.9248 136.692 mo
31.3345 135.259 27.7972 134.377 23.897 134.377 cv
21.7319 134.377 19.6786 134.649 17.8371 135.136 cv
17.425 134.91 17.0366 134.67 16.6738 134.418 cv
19.8569 133.164 23.7149 132.423 27.8829 132.423 cv
32.0508 132.423 35.9087 133.164 39.0923 134.418 cv
37.7048 135.382 35.9395 136.165 33.9248 136.692 cv
.0392157 .0392157 .0392157 rgb
f
27.8829 137.441 mo
26.1059 137.441 24.4038 137.259 22.8311 136.926 cv
23.1101 136.558 23.2358 136.207 23.1679 135.907 cv
23.0507 135.389 22.3813 135.127 21.4079 135.127 cv
20.6611 135.127 19.7355 135.282 18.7429 135.593 cv
18.4298 135.448 18.1276 135.295 17.8371 135.136 cv
19.6786 134.649 21.7319 134.377 23.897 134.377 cv
27.7972 134.377 31.3345 135.259 33.9248 136.692 cv
32.0861 137.173 30.0397 137.441 27.8829 137.441 cv
.0823529 .0823529 .0823529 rgb
f
22.8311 136.926 mo
21.3358 136.609 19.9573 136.156 18.7429 135.593 cv
19.7355 135.282 20.6611 135.127 21.4079 135.127 cv
22.3813 135.127 23.0507 135.389 23.1679 135.907 cv
23.2358 136.207 23.1101 136.558 22.8311 136.926 cv
.384314 .384314 .384314 rgb
f
42.7241 127.009 mo
42.7241 131.67 36.0796 135.447 27.8828 135.447 cv
19.6865 135.447 13.041 131.67 13.041 127.009 cv
13.041 122.351 19.6865 118.572 27.8828 118.572 cv
36.0796 118.572 42.7241 122.351 42.7241 127.009 cv
cp
.0823529 .0823529 .0823529 rgb
f
35.5845 126.345 mo
35.5845 129.691 30.814 132.403 24.9297 132.403 cv
19.0444 132.403 14.2739 129.691 14.2739 126.345 cv
14.2739 122.999 19.0444 120.288 24.9297 120.288 cv
30.814 120.288 35.5845 122.999 35.5845 126.345 cv
cp
.180392 .180392 .180392 rgb
f
24.3892 121.421 mo
24.5527 122.147 23.1855 123.275 21.333 123.942 cv
19.481 124.609 17.8452 124.562 17.6816 123.837 cv
17.5176 123.11 18.8843 121.98 20.7378 121.314 cv
22.5898 120.647 24.2241 120.693 24.3892 121.421 cv
cp
.823529 .823529 .823529 rgb
f
17.0371 124.938 mo
17.5381 125.267 17.667 126.163 17.3252 126.943 cv
16.9834 127.719 16.3008 128.081 15.7993 127.751 cv
15.2974 127.422 15.168 126.525 15.5093 125.748 cv
15.8511 124.972 16.5337 124.607 17.0371 124.938 cv
cp
f
47.6782 170.603 mo
47.8911 170.059 48.1289 169.516 48.3892 168.996 cv
48.8604 168.057 49.4136 167.157 50.0718 166.354 cv
51.4053 164.757 53.1982 163.515 55.1064 162.563 cv
58.9526 160.666 63.3936 159.902 67.7222 160.405 cv
63.4248 159.667 58.8857 160.174 54.8066 161.912 cv
52.7778 162.793 50.8325 163.972 49.2642 165.642 cv
48.4839 166.478 47.8276 167.407 47.2573 168.382 cv
47.0962 168.658 46.9429 168.938 46.7959 169.222 cv
46.2871 166.517 46.2505 160.129 52.4409 156.573 cv
61.4146 151.421 71.999 160.824 71.999 160.824 cv
70.6162 160.625 65.2476 162.164 62.4399 167.609 cv
59.6313 173.051 55.4336 173.138 52.249 172.486 cv
50.5903 172.145 48.647 171.143 47.6782 170.603 cv
cp
.517647 .733333 .0235294 rgb
f
48.4209 160.375 mo
48.3462 159.975 48.2876 159.566 48.251 159.165 cv
48.1826 158.438 48.1807 157.705 48.2744 156.986 cv
48.4761 155.555 49.0786 154.163 49.856 152.9 cv
51.4316 150.37 53.7734 148.289 56.5156 146.997 cv
53.7051 148.137 51.2119 150.103 49.4399 152.625 cv
48.5654 153.892 47.8491 155.302 47.5352 156.86 cv
47.3818 157.642 47.3359 158.433 47.356 159.217 cv
47.3623 159.438 47.3745 159.661 47.3921 159.883 cv
46.0986 158.472 43.7329 154.715 46.0845 150.343 cv
49.4917 144.007 59.1943 145.676 59.1943 145.676 cv
58.3037 146.063 55.6982 148.944 56.0391 153.19 cv
56.3784 157.435 53.9307 159.025 51.8101 159.809 cv
50.7056 160.216 49.1914 160.34 48.4209 160.375 cv
cp
.360784 .529412 .12549 rgb
f
25.0601 162.845 mo
27.2383 164.474 25.6621 171.195 31.5806 172.601 cv
37.4995 174.008 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 40.9287 157.606 34.9478 156.519 cv
28.959 155.433 27.709 162.224 25.0601 162.845 cv
cp
.752941 .168627 .47451 rgb
f
44.8994 149.871 mo
43.269 152.05 36.5474 150.476 35.1392 156.39 cv
33.7354 162.309 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 50.1377 165.739 51.2231 159.756 cv
52.3091 153.773 45.519 152.52 44.8994 149.871 cv
cp
f
57.8716 169.711 mo
55.6973 168.079 57.271 161.358 51.3535 159.952 cv
45.4346 158.545 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 42.0029 174.948 47.9863 176.035 cv
53.9712 177.117 55.2246 170.33 57.8716 169.711 cv
cp
f
38.0342 182.683 mo
39.6646 180.505 46.3848 182.083 47.7925 176.16 cv
49.1987 170.244 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 32.7935 166.812 31.7085 172.796 cv
30.6221 178.782 37.4102 180.035 38.0342 182.683 cv
cp
f
29.5283 174.083 mo
31.8198 173.755 34.916 178.747 39.3228 176.034 cv
43.73 173.316 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 35.9248 161.381 31.6699 164.329 cv
27.4146 167.276 30.7476 172.118 29.5283 174.083 cv
cp
.972549 .513726 .52549 rgb
f
33.6602 154.338 mo
33.9868 156.629 28.9946 159.727 31.7109 164.134 cv
34.4243 168.54 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 46.3628 160.736 43.4131 156.481 cv
40.4673 152.228 35.6265 155.556 33.6602 154.338 cv
cp
f
53.4048 158.472 mo
51.1143 158.798 48.0146 153.806 43.6079 156.522 cv
39.2007 159.235 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 47.0088 171.172 51.2617 168.227 cv
55.5166 165.276 52.186 160.437 53.4048 158.472 cv
cp
f
49.2729 178.216 mo
48.9434 175.924 53.9375 172.828 51.2217 168.421 cv
48.5068 164.013 41.4668 166.278 41.4668 166.278 cv
41.4668 166.278 36.5679 171.821 39.5186 176.074 cv
42.4668 180.327 47.3066 176.995 49.2729 178.216 cv
cp
f
39.4702 175.822 mo
40.4185 174.557 44.3301 175.473 45.1479 172.03 cv
45.9634 168.586 41.4668 166.278 41.4668 166.278 cv
41.4668 166.278 36.4194 166.59 35.7881 170.07 cv
35.1567 173.554 39.1094 174.284 39.4702 175.822 cv
cp
1 1 1 rgb
f
31.9229 164.279 mo
33.188 165.229 32.2734 169.138 35.7144 169.957 cv
39.1577 170.777 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 41.1538 161.23 37.6738 160.601 cv
34.1919 159.97 33.4624 163.917 31.9229 164.279 cv
cp
f
43.4648 156.732 mo
42.5122 157.996 38.6064 157.082 37.7876 160.526 cv
36.9697 163.965 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 46.5146 165.966 47.1455 162.486 cv
47.7764 159.001 43.8267 158.271 43.4648 156.732 cv
cp
f
51.0112 168.275 mo
49.7471 167.327 50.6631 163.415 47.2197 162.596 cv
43.7749 161.776 41.4678 166.278 41.4678 166.278 cv
41.4678 166.278 41.7803 171.324 45.2612 171.956 cv
48.7446 172.583 49.4722 168.636 51.0112 168.275 cv
cp
f
35.0659 170.461 mo
34.7036 168.333 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 36.8701 171.644 35.0659 170.461 cv
cp
.752941 .168627 .47451 rgb
f
33.8311 166.697 mo
34.5791 164.678 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 34.7983 168.628 33.8311 166.697 cv
cp
f
34.6406 162.829 mo
36.3037 161.451 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 34.5161 164.98 34.6406 162.829 cv
cp
f
37.2803 159.879 mo
39.4082 159.515 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 36.0957 161.681 37.2803 159.879 cv
cp
f
41.0396 158.644 mo
43.0664 159.393 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 39.1147 159.612 41.0396 158.644 cv
cp
f
44.9111 159.451 mo
46.2925 161.115 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 42.7622 159.33 44.9111 159.451 cv
cp
f
47.8604 162.093 mo
48.2261 164.22 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 46.0591 160.907 47.8604 162.093 cv
cp
f
49.0947 165.854 mo
48.3486 167.875 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 48.1274 163.924 49.0947 165.854 cv
cp
f
48.2886 169.724 mo
46.6284 171.103 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 48.4131 167.569 48.2886 169.724 cv
cp
f
45.646 172.677 mo
43.5244 173.037 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 46.8335 170.872 45.646 172.677 cv
cp
f
41.8877 173.907 mo
39.8647 173.16 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 43.8203 172.939 41.8877 173.907 cv
cp
f
38.0171 173.099 mo
36.6372 171.437 41.4648 166.277 41.4648 166.277 cv
41.4648 166.277 40.1685 173.224 38.0171 173.099 cv
cp
f
140.254 31.6069 mo
140.254 31.6069 139.83 15.8369 132.027 9.39941 cv
124.224 2.96338 119.663 2.44336 118.476 5.60254 cv
117.288 8.75977 119.688 12.3643 119.09 16.7354 cv
118.491 21.1074 118.333 26.3901 122.062 27.8994 cv
125.792 29.4082 139.31 32.5596 140.254 31.6069 cv
cp
.0823529 .0823529 .0823529 rgb
f
139.101 32.6558 mo
139.907 32.4985 141.494 31.2813 139.418 26.1582 cv
137.34 21.0361 135.344 14.3833 134.354 14.1733 cv
133.364 13.9653 132.97 14.5811 132.895 15.5518 cv
132.816 16.5225 131.527 16.4624 131.193 15.9761 cv
130.858 15.4893 130.055 15.4688 129.643 16.1401 cv
129.23 16.811 130.853 17.7305 130.327 18.3647 cv
129.802 18.998 128.463 17.0522 128.013 18.0205 cv
127.562 18.9912 130.341 19.9878 129.724 20.3418 cv
129.106 20.6943 126.906 19.2676 126.708 20.0435 cv
126.51 20.8174 130.261 21.8945 129.512 22.4517 cv
128.763 23.0098 125.441 22.3267 126.224 22.9653 cv
127.007 23.6016 130.085 24.6372 129.467 24.9907 cv
128.851 25.3442 125.564 25.1113 126.179 25.8774 cv
126.792 26.645 130.113 27.3271 129.421 28.0903 cv
128.729 28.854 125.221 27.4268 125.237 28.3027 cv
125.253 29.1802 135.7 33.3184 139.101 32.6558 cv
cp
.290196 .756863 .960784 rgb
f
139.189 35.1465 mo
139.189 35.1465 135.26 40.1548 133.462 42.5352 cv
131.663 44.9165 127.45 51.1416 126.708 51.1289 cv
125.963 51.1172 125.053 49.3784 124.356 50.3374 cv
123.659 51.2979 123.984 54.0352 122.338 53.0039 cv
120.69 51.9722 118.766 49.1733 116.578 49.751 cv
114.389 50.3296 113.584 51.6113 113.119 53.3647 cv
112.653 55.1182 109.782 56.5688 109.011 55.2061 cv
107.789 53.0479 110.314 51.7021 112.015 50.7231 cv
113.714 49.7437 116.917 46.5205 116.755 45.1519 cv
116.592 43.7837 114.614 44.1089 115.496 42.5977 cv
116.38 41.0859 117.259 39.9497 116.512 39.5781 cv
115.765 39.2075 114.667 37.2852 116.219 36.374 cv
117.772 35.4634 117.874 34.4238 117.458 33.8057 cv
117.042 33.1885 118.263 28.8232 123.73 28.8706 cv
129.196 28.9189 140.611 32.4019 140.469 33.1909 cv
140.329 33.9785 139.189 35.1465 139.189 35.1465 cv
cp
.0823529 .0823529 .0823529 rgb
f
139.202 32.3301 mo
139.041 32.2559 130.994 29.3145 130.645 30.3521 cv
130.296 31.3896 133.151 32.3501 131.451 32.7744 cv
129.75 33.1987 129.494 31.9282 127.341 33.3228 cv
125.19 34.7173 122.394 32.8423 122.204 34.1489 cv
122.013 35.4551 121.565 35.3047 120.254 36.0474 cv
118.946 36.79 121.111 37.3945 121.126 38.2715 cv
121.143 39.1499 117.188 41.0894 118.881 41.4263 cv
120.576 41.7627 122.631 41.208 121.827 41.9351 cv
121.021 42.6602 121.541 43.7075 122.998 43.4507 cv
124.455 43.1938 122.585 44.4961 122.524 45.5957 cv
122.466 46.6992 125.161 44.6143 125.458 45.2129 cv
125.755 45.8115 124.126 47.2578 124.899 48.1401 cv
125.671 49.0234 128.694 49.667 132.033 44.7466 cv
135.372 39.8252 141.31 33.2896 139.202 32.3301 cv
cp
.0823529 .607843 .819608 rgb
f
127.965 16.4927 mo
127.813 16.752 126.207 16.0898 124.375 15.0161 cv
122.546 13.9438 121.186 12.8633 121.336 12.605 cv
121.488 12.3467 123.095 13.0078 124.926 14.0801 cv
126.754 15.1533 128.117 16.2349 127.965 16.4927 cv
cp
.262745 .262745 .262745 rgb
f
127.113 18.9888 mo
126.982 19.2593 125.328 18.7271 123.419 17.8013 cv
121.509 16.8755 120.068 15.9072 120.199 15.6372 cv
120.33 15.3672 121.983 15.9004 123.892 16.8237 cv
125.801 17.75 127.244 18.7197 127.113 18.9888 cv
cp
f
127.133 21.4902 mo
127.041 21.7759 125.33 21.4736 123.312 20.8184 cv
121.293 20.1631 119.733 19.4023 119.825 19.1157 cv
119.918 18.8315 121.629 19.1328 123.648 19.7861 cv
125.666 20.4419 127.226 21.2061 127.133 21.4902 cv
cp
f
127.327 24.644 mo
127.245 24.9326 125.523 24.6978 123.48 24.1191 cv
121.44 23.542 119.852 22.8403 119.933 22.5522 cv
120.015 22.2637 121.735 22.5 123.777 23.0752 cv
125.818 23.6533 127.408 24.356 127.327 24.644 cv
cp
f
127.359 27.5103 mo
127.276 27.7979 125.752 27.6191 123.951 27.1084 cv
122.15 26.5996 120.759 25.9541 120.84 25.665 cv
120.922 25.376 122.448 25.5557 124.248 26.0635 cv
126.047 26.5737 127.44 27.2212 127.359 27.5103 cv
cp
f
128.087 14.0942 mo
127.901 14.356 126.564 13.7207 125.102 12.6763 cv
123.64 11.6318 122.606 10.5742 122.793 10.3135 cv
122.979 10.0498 124.316 10.6865 125.778 11.7295 cv
127.24 12.7739 128.275 13.835 128.087 14.0942 cv
cp
f
140.587 31.9141 mo
140.587 31.9141 142.193 16.2197 135.282 8.83398 cv
128.369 1.44824 123.913 .347656 122.329 3.32666 cv
120.747 6.30664 122.664 10.1885 121.509 14.4473 cv
120.354 18.7061 119.519 23.9243 123.023 25.9014 cv
126.528 27.8755 139.53 32.7378 140.587 31.9141 cv
cp
.180392 .180392 .180392 rgb
f
139.308 32.8057 mo
140.128 32.7539 141.859 31.75 140.458 26.4028 cv
139.056 21.0562 137.93 14.2021 136.976 13.8677 cv
136.021 13.5337 135.55 14.0938 135.35 15.0469 cv
135.149 15.9985 133.879 15.7744 133.609 15.248 cv
133.34 14.7227 132.545 14.5996 132.051 15.2109 cv
131.555 15.8242 133.046 16.9448 132.444 17.5059 cv
131.842 18.0659 130.764 15.9658 130.193 16.8677 cv
129.621 17.772 132.249 19.1187 131.591 19.3892 cv
130.934 19.6611 128.937 17.9624 128.639 18.7061 cv
128.342 19.4482 131.924 20.9976 131.11 21.4536 cv
130.296 21.9121 127.089 20.8076 127.784 21.5415 cv
128.478 22.2729 131.397 23.6958 130.74 23.9663 cv
130.083 24.2378 126.853 23.585 127.365 24.4238 cv
127.875 25.2646 131.081 26.3677 130.296 27.0361 cv
129.511 27.7036 126.216 25.8374 126.12 26.708 cv
126.023 27.5806 135.85 33.0254 139.308 32.8057 cv
cp
.254902 .741176 .941176 rgb
f
139.076 35.2881 mo
139.076 35.2881 134.537 39.7485 132.448 41.8794 cv
130.358 44.0098 125.38 49.6421 124.646 49.5342 cv
123.909 49.4277 123.23 47.5859 122.416 48.4473 cv
121.601 49.3105 121.572 52.0674 120.072 50.8325 cv
118.57 49.5977 117.021 46.5752 114.777 46.8667 cv
112.532 47.1587 111.569 48.3262 110.881 50.0063 cv
110.196 51.6855 107.161 52.7549 106.572 51.3047 cv
105.637 49.0068 108.314 47.9966 110.126 47.2446 cv
111.938 46.4912 115.529 43.7065 115.542 42.3281 cv
115.558 40.9512 113.553 41.0186 114.623 39.6333 cv
115.693 38.2476 116.711 37.2334 116.019 36.7686 cv
115.325 36.3052 114.483 34.2583 116.139 33.5547 cv
117.797 32.8516 118.03 31.833 117.698 31.166 cv
117.366 30.501 119.137 26.3276 124.551 27.0776 cv
129.966 27.8271 140.839 32.7485 140.597 33.5127 cv
140.357 34.2759 139.076 35.2881 139.076 35.2881 cv
cp
.180392 .180392 .180392 rgb
f
139.451 32.4956 mo
139.301 32.4023 131.699 28.4507 131.219 29.4355 cv
130.74 30.4185 133.448 31.7388 131.708 31.9409 cv
129.965 32.1431 129.875 30.8496 127.562 31.957 cv
125.249 33.0635 122.717 30.8447 122.361 32.1162 cv
122.003 33.3867 121.579 33.1812 120.184 33.7495 cv
118.79 34.3184 120.861 35.1948 120.762 36.0664 cv
120.666 36.9399 116.494 38.355 118.13 38.9067 cv
119.768 39.4585 121.877 39.1714 120.986 39.7891 cv
120.093 40.4053 120.475 41.5107 121.953 41.4434 cv
123.432 41.3755 121.409 42.4258 121.208 43.5098 cv
121.008 44.5962 123.949 42.8745 124.166 43.5059 cv
124.384 44.1387 122.582 45.3628 123.237 46.3369 cv
123.888 47.313 126.804 48.3394 130.746 43.8882 cv
134.688 39.4375 141.418 33.7173 139.451 32.4956 cv
cp
.254902 .741176 .941176 rgb
f
142.461 32.3862 mo
142.831 32.2383 143.554 31.9986 143.504 30.9887 cv
143.454 29.9785 142.672 29.7954 142.672 29.7954 cv
142.672 29.7954 142.046 29.2929 141.221 29.876 cv
140.395 30.459 140.652 31.1758 140.761 31.5576 cv
140.761 31.5576 139.558 31.5942 138.957 33.0429 cv
138.353 34.4907 138.778 35.5503 138.483 36.1953 cv
138.19 36.8408 134.953 43.2763 135.882 43.729 cv
136.811 44.1826 139.888 37.6684 140.213 37.039 cv
140.541 36.4082 141.636 36.0913 142.405 34.7232 cv
143.175 33.3564 142.461 32.3862 142.461 32.3862 cv
.113725 .113725 .0901961 rgb
f
130.341 15.3467 mo
130.157 15.582 128.649 14.7207 126.972 13.4209 cv
125.295 12.1221 124.084 10.876 124.268 10.6401 cv
124.452 10.4023 125.959 11.2642 127.637 12.5635 cv
129.314 13.8628 130.525 15.1104 130.341 15.3467 cv
cp
.262745 .262745 .262745 rgb
f
129.177 17.7129 mo
129.012 17.9634 127.44 17.2227 125.666 16.0605 cv
123.89 14.8975 122.586 13.752 122.75 13.501 cv
122.915 13.2495 124.486 13.9893 126.26 15.1519 cv
128.035 16.3154 129.34 17.4624 129.177 17.7129 cv
cp
f
128.875 20.1958 mo
128.746 20.4673 127.088 19.9487 125.171 19.0391 cv
123.255 18.1294 121.805 17.1748 121.932 16.9028 cv
122.06 16.6313 123.719 17.1499 125.637 18.0576 cv
127.554 18.9668 129.004 19.9258 128.875 20.1958 cv
cp
f
128.662 23.3486 mo
128.543 23.624 126.866 23.1694 124.915 22.3335 cv
122.965 21.499 121.48 20.5996 121.597 20.3237 cv
121.716 20.0493 123.392 20.5029 125.343 21.3369 cv
127.292 22.1714 128.779 23.0732 128.662 23.3486 cv
cp
f
128.326 26.1953 mo
128.207 26.4702 126.717 26.0957 124.998 25.3589 cv
123.277 24.6235 121.98 23.8042 122.097 23.5283 cv
122.217 23.252 123.705 23.6265 125.425 24.3604 cv
127.144 25.0977 128.443 25.9189 128.326 26.1953 cv
cp
f
130.772 12.9824 mo
130.552 13.2192 129.308 12.4165 127.993 11.1938 cv
126.677 9.97021 125.787 8.78809 126.006 8.5542 cv
126.225 8.31738 127.468 9.11914 128.785 10.3413 cv
130.101 11.5649 130.991 12.75 130.772 12.9824 cv
cp
f
132.87 11.6221 mo
132.676 11.8008 131.71 11.0625 130.714 9.97559 cv
129.717 8.88867 129.068 7.8623 129.262 7.68457 cv
129.457 7.50488 130.422 8.24414 131.418 9.33008 cv
132.416 10.4175 133.064 11.4458 132.87 11.6221 cv
cp
f
141.461 31.2305 mo
141.739 30.375 141.969 29.5063 142.169 28.6328 cv
142.365 27.7593 142.533 26.8789 142.617 25.9888 cv
142.715 25.1011 142.735 24.2031 142.63 23.3193 cv
142.522 22.4414 142.274 21.5591 141.75 20.8208 cv
142.337 21.5117 142.654 22.4038 142.792 23.2964 cv
142.934 24.1963 142.913 25.1108 142.828 26.0103 cv
142.62 27.8071 142.161 29.5718 141.461 31.2305 cv
cp
.0980392 .121569 .219608 rgb
f
gsave
122.513 20.2446 mo
168.941 20.2446 li
168.941 78.79 li
122.513 78.79 li
122.513 20.2446 li
clp
134.385 72.8872 mo
146.147 57.043 li
136.395 54.9048 li
136.395 54.9048 136.314 56.068 135.346 57.9559 cv
135.832 55.5263 136.802 53.3209 138.98 51.5088 cv
142.844 48.293 146.159 46.9707 148.353 46.2168 cv
150.548 45.4658 151.437 44.4467 151.437 44.4467 cv
151.437 44.4467 150.911 41.6138 151.336 40.4878 cv
151.336 40.4878 148.772 39.2979 147.912 37.8291 cv
147.912 37.8291 146.366 38.2911 144.751 38.2912 cv
143.833 38.2912 142.893 38.1419 142.202 37.6734 cv
141.359 37.1022 141.093 36.6033 141.059 36.2246 cv
141.341 36.0024 141.655 35.7407 141.954 35.3809 cv
142.97 35.2467 144.979 34.9714 145.847 34.7832 cv
146.102 34.7279 146.331 34.7035 146.552 34.7035 cv
147.357 34.7035 148.051 35.0291 149.481 35.3726 cv
151.302 35.8125 154.709 37.3804 155.091 39.0532 cv
155.453 40.6389 156.046 42.7746 156.331 42.7746 cv
156.347 42.7746 156.362 42.7679 156.376 42.7539 cv
156.64 42.4897 156.218 38.1377 156.906 36.7475 cv
156.906 36.7475 153.267 34.2817 152.885 32.6075 cv
152.885 32.6075 147.692 31.9355 146.636 30.5107 cv
145.705 29.258 145.839 28.4541 147.829 28.4541 cv
148.102 28.4541 148.41 28.4692 148.756 28.5005 cv
151.616 28.7573 154.181 29.4189 155.027 29.9917 cv
155.871 30.564 159.435 32.8912 160.26 33.5386 cv
161.086 34.187 160.91 36.1899 161.027 37.5078 cv
161.027 37.5078 161.125 35.3726 161.492 34.3349 cv
161.492 34.3349 158.82 31.5449 158.369 27.7476 cv
158.369 27.7476 155.073 24.0288 155.299 21.706 cv
155.396 20.6994 155.619 20.2557 155.993 20.2446 cv
156.022 20.2446 li
156.512 20.2583 157.252 20.9784 158.298 22.1299 cv
160.182 24.2026 160.775 24.6934 161.672 26.9805 cv
162.566 29.2676 165.188 33.6074 165.188 33.6074 cv
165.188 33.6074 164.844 30.6333 165.26 29.1479 cv
165.26 29.1479 164.665 24.6763 165.799 23.5005 cv
166.341 22.9392 166.87 22.6513 167.294 22.6513 cv
167.758 22.6513 168.097 22.9966 168.189 23.706 cv
168.366 25.0659 169.07 28.6093 168.92 29.5937 cv
168.798 30.3955 168.349 35.6602 168.17 37.0435 cv
167.992 38.4253 166.48 40.4067 165.348 42.2031 cv
164.215 43.9981 162.85 45.0185 162.4 46.9253 cv
161.952 48.8315 161.742 50.6343 156.139 54.1753 cv
150.536 57.7168 146.19 61.8745 143.316 64.1406 cv
139.868 66.8585 136.734 70.1593 134.385 72.8872 cv
level3{
gsave
clp
[-48.8152 48.9521 -16.9238 -16.8765 170.684 24.416 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .623529 .360784 ]
/C1 [.929412 .623529 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .623529 .360784 ]
/C1 [1 1 1 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
]
/Bounds [.424242 .933333 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-48.8152 48.9521 -16.9238 -16.8765 170.684 24.416 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-X3-mHs<.mHs<.mHs<.mHs<.
mHs<.mHs<.mHs?0mdBN2mdBN2mdBN3n*f`6n*f`6n*oi9nF5r:nF?&=naZ/>o()ABo()ACoCMSFoCV\I
o^qeKp%A"Np@e4Rp@n=Up\4IXq"XX[q>'j_qYL'bqtp9fr;?KjrVc]nrr2oss8W-!s8W-!s8W-!s8W-!
~>
<~St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OF
St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFStDXIT:_aJT:_aJT:hjMTV.sO
TqS0SU8"EXUSO]]V5:#cVPg>jW2Q\pWiE,$XKAV-Y-5(6Z*CU@Za@-K[^WcW\[oDc]Y2%o^qmn)_o0O6
a2lBFbKS5Vcd:(fe'uq!f@\g3gtgiEiSrnYjlbjllKmp+nF?)Ap%J1VqY^<ls8W-!s8W-!s8W-!s8W-!
~>
<~>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?kE<>[1N=>[1Q??!U`B?=$uG
?smAN@:E\U@q9.^AnPaiBk_<tCi!s+DfB]:F)uGGG'A1WH[L6jIt3*&KS>/:M2I7ONf]BePa.T&R[fq@
TVA3XVl6VsY-5+:[C3TV]Y;1u`5]m@bg+S`eCN:+gtq#MjlbpqmdTi@p\Ogfs8W-!s8W-!s8W-!s8W-!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
141.059 36.2246 mo
141.016 35.747 141.341 35.4605 141.341 35.4605 cv
141.341 35.4605 141.581 35.4302 141.954 35.3809 cv
141.655 35.7407 141.341 36.0024 141.059 36.2246 cv
level3{
gsave
clp
[-48.8152 48.9521 -16.9238 -16.8765 170.684 24.416 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .623529 .360784 ]
/C1 [.929412 .623529 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .623529 .360784 ]
/C1 [.113725 .113725 .0901961 ]
/N 1.93502 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.113725 .113725 .0901961 ]
/C1 [.113725 .113725 .0901961 ]
/N 1 
>>
]
/Bounds [.424242 .933333 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-48.8152 48.9521 -16.9238 -16.8765 170.684 24.416 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-F!'lg!d#l07Eq
kND!ijlGL_io8qThqm5GgtUQ9f[n^)eC2glcd'eYb/q`E`P]R/^V7@l\[T#SZE^U8XK&4rUnaWUSXZ%6
Q'7>kNJ`OHKS"]%H['^UEGo]/BOt[]?!CE3;c$4^84>m24ZYMY0eOt),pFEN*#oq<*#oq<*#oq<*#oq<
~>
<~St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OF
St;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSXl=BS=H+>
S"#n9R[KS3R$a5,QBmf$P`q;oP*(ifO,f6[N/NUOM26qBL4t;5Jq8H%IXQTjH?jaZG'.nJEH#i6D/3m#
BP(gd@prbO?!LQ9=&r=";G^.`91h`F770C,5<V(g3&WTL0eY+/.OZVh+s7pH*#oq<*#oq<*#oq<*#oq<
~>
<~>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9
>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>?b<9>$>*5
>$>'3=]nm0=BJ[,='&I(<`W4#<E)ps;c?Um;Gg:g:f'q`:/4MX9MA)P8kMZH84Z6@7R]a66pj:-5sR\"
5!D+l4?GSb3B/rV2Dm<I1GU[=0/"q0/1W2!.4?Pj,pX]Z+WqjJ*?6":)&O/*()@Z$()@Z$()@Z$()@Z$
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
130.003 78.79 mo
130.003 78.79 li
130.003 78.79 121.158 72.3604 122.691 69.9141 cv
123.401 68.7812 126.616 67.2309 128.536 65.7089 cv
132.371 62.6697 134.338 59.9204 135.346 57.9559 cv
136.314 56.068 136.395 54.9048 136.395 54.9048 cv
146.147 57.043 li
134.385 72.8872 li
130.003 78.79 li
level3{
gsave
clp
[-48.8152 48.9521 -16.9238 -16.8765 170.684 24.416 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-48.8152 48.9521 -16.9238 -16.8765 170.684 24.416 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
grestore
151.438 130.391 mo
150.179 129.965 147.51 130.203 147.085 131.462 cv
146.661 132.722 148.639 134.525 149.897 134.952 cv
151.158 135.375 152.522 134.697 152.949 133.44 cv
153.371 132.181 152.698 130.816 151.438 130.391 cv
cp
.972549 .513726 .52549 rgb
f
149.138 135.515 mo
149.152 134.186 148.105 131.722 146.775 131.706 cv
145.444 131.691 144.342 134.131 144.324 135.46 cv
144.31 136.79 145.376 137.878 146.704 137.895 cv
148.034 137.907 149.124 136.842 149.138 135.515 cv
cp
f
143.522 134.896 mo
144.791 134.5 146.809 132.739 146.414 131.472 cv
146.016 130.202 143.356 129.906 142.085 130.301 cv
140.817 130.698 140.109 132.05 140.508 133.319 cv
140.904 134.589 142.254 135.295 143.522 134.896 cv
cp
f
142.406 129.356 mo
143.178 130.438 145.472 131.815 146.556 131.048 cv
147.641 130.281 147.099 127.655 146.33 126.57 cv
145.562 125.487 144.061 125.231 142.977 126.001 cv
141.892 126.769 141.637 128.271 142.406 129.356 cv
cp
f
147.312 126.611 mo
146.519 127.677 145.919 130.288 146.984 131.08 cv
148.05 131.874 150.379 130.55 151.173 129.481 cv
151.966 128.416 151.745 126.909 150.678 126.116 cv
149.612 125.32 148.105 125.542 147.312 126.611 cv
cp
f
146.634 130.972 mo
146.431 131.579 li
148.522 132.283 li
148.726 131.68 li
146.634 130.972 li
cp
1 1 1 rgb
f
149.335 131.52 mo
148.959 131.394 148.556 131.574 148.44 131.918 cv
148.322 132.266 148.536 132.651 148.911 132.777 cv
149.289 132.907 149.69 132.728 149.807 132.381 cv
149.922 132.033 149.713 131.649 149.335 131.52 cv
cp
f
147.075 131.075 mo
146.439 131.068 li
146.414 133.274 li
147.052 133.284 li
147.075 131.075 li
cp
f
147.389 133.812 mo
147.391 133.415 147.1 133.09 146.735 133.086 cv
146.368 133.08 146.07 133.401 146.061 133.795 cv
146.058 134.194 146.352 134.521 146.717 134.526 cv
147.083 134.53 147.383 134.209 147.389 133.812 cv
cp
f
147.116 131.525 mo
146.923 130.917 li
144.818 131.575 li
145.007 132.183 li
147.116 131.525 li
cp
f
144.608 132.669 mo
144.99 132.55 145.208 132.172 145.098 131.819 cv
144.989 131.471 144.594 131.286 144.212 131.403 cv
143.833 131.521 143.614 131.903 143.723 132.251 cv
143.832 132.6 144.23 132.789 144.608 132.669 cv
cp
f
146.696 131.7 mo
147.219 131.331 li
145.943 129.532 li
145.423 129.902 li
146.696 131.7 li
cp
f
144.835 129.672 mo
145.067 129.998 145.495 130.087 145.794 129.876 cv
146.093 129.667 146.148 129.229 145.917 128.904 cv
145.687 128.581 145.259 128.489 144.961 128.702 cv
144.661 128.912 144.606 129.348 144.835 129.672 cv
cp
f
146.404 131.36 mo
146.913 131.74 li
148.229 129.972 li
147.723 129.59 li
146.404 131.36 li
cp
f
147.758 128.964 mo
147.52 129.282 147.567 129.718 147.86 129.935 cv
148.153 130.154 148.584 130.075 148.821 129.754 cv
149.06 129.436 149.015 128.998 148.72 128.779 cv
148.429 128.562 147.995 128.642 147.758 128.964 cv
cp
f
147.162 131.336 mo
146.796 131.586 li
147.668 132.861 li
148.036 132.608 li
147.162 131.336 li
cp
f
148.443 132.776 mo
148.287 132.546 147.987 132.477 147.775 132.621 cv
147.564 132.767 147.521 133.074 147.679 133.302 cv
147.836 133.531 148.136 133.598 148.346 133.454 cv
148.558 133.311 148.601 133.006 148.443 132.776 cv
cp
f
146.839 131.535 mo
146.487 131.262 li
145.543 132.487 li
145.896 132.758 li
146.839 131.535 li
cp
f
145.865 133.198 mo
146.035 132.978 146.007 132.671 145.805 132.514 cv
145.602 132.358 145.298 132.411 145.128 132.629 cv
144.957 132.853 144.985 133.159 145.189 133.315 cv
145.391 133.472 145.694 133.417 145.865 133.198 cv
cp
f
146.554 131.331 mo
146.705 130.911 li
145.247 130.392 li
145.101 130.811 li
146.554 131.331 li
cp
f
144.671 130.915 mo
144.933 131.008 145.216 130.889 145.302 130.646 cv
145.388 130.406 145.246 130.135 144.982 130.042 cv
144.719 129.946 144.437 130.067 144.35 130.312 cv
144.266 130.55 144.406 130.821 144.671 130.915 cv
cp
f
146.663 130.964 mo
147.109 130.977 li
147.153 129.432 li
146.705 129.419 li
146.663 130.964 li
cp
f
146.475 129.045 mo
146.467 129.322 146.667 129.553 146.925 129.56 cv
147.18 129.57 147.395 129.347 147.403 129.07 cv
147.411 128.791 147.209 128.56 146.954 128.554 cv
146.696 128.546 146.483 128.767 146.475 129.045 cv
cp
f
147.057 130.968 mo
147.182 131.394 li
148.664 130.958 li
148.539 130.533 li
147.057 130.968 li
cp
f
148.823 130.195 mo
148.556 130.274 148.398 130.538 148.47 130.783 cv
148.544 131.031 148.819 131.166 149.084 131.088 cv
149.354 131.007 149.513 130.745 149.438 130.499 cv
149.367 130.255 149.091 130.12 148.823 130.195 cv
cp
f
135.351 113.146 mo
134.648 113.016 133.246 113.346 133.116 114.048 cv
132.987 114.752 134.178 115.561 134.879 115.691 cv
135.583 115.82 136.258 115.354 136.388 114.653 cv
136.517 113.95 136.053 113.275 135.351 113.146 cv
cp
.972549 .513726 .52549 rgb
f
134.519 116.049 mo
134.425 115.341 133.679 114.11 132.97 114.203 cv
132.26 114.296 131.861 115.679 131.953 116.388 cv
132.047 117.097 132.698 117.594 133.405 117.501 cv
134.115 117.407 134.612 116.756 134.519 116.049 cv
cp
f
131.482 116.15 mo
132.127 115.842 133.067 114.75 132.759 114.106 cv
132.451 113.46 131.012 113.507 130.365 113.814 cv
129.722 114.123 129.448 114.896 129.758 115.541 cv
130.065 116.188 130.838 116.458 131.482 116.15 cv
cp
f
130.464 113.286 mo
130.958 113.803 132.286 114.361 132.803 113.869 cv
133.321 113.377 132.833 112.022 132.34 111.503 cv
131.848 110.986 131.03 110.964 130.513 111.457 cv
129.993 111.949 129.972 112.769 130.464 113.286 cv
cp
f
132.865 111.45 mo
132.524 112.078 132.405 113.513 133.034 113.853 cv
133.661 114.194 134.799 113.312 135.14 112.682 cv
135.48 112.055 135.248 111.27 134.619 110.928 cv
133.991 110.586 133.206 110.82 132.865 111.45 cv
cp
f
132.838 113.823 mo
132.777 114.161 li
133.944 114.375 li
134.006 114.039 li
132.838 113.823 li
cp
1 1 1 rgb
f
134.318 113.907 mo
134.108 113.87 133.907 113.996 133.873 114.188 cv
133.835 114.382 133.979 114.571 134.188 114.61 cv
134.4 114.649 134.599 114.523 134.635 114.329 cv
134.67 114.136 134.529 113.948 134.318 113.907 cv
cp
f
133.081 113.844 mo
132.742 113.888 li
132.897 115.065 li
133.237 115.021 li
133.081 113.844 li
cp
f
133.458 115.277 mo
133.428 115.065 133.249 114.914 133.054 114.94 cv
132.858 114.965 132.724 115.159 132.75 115.369 cv
132.778 115.582 132.959 115.733 133.155 115.708 cv
133.35 115.683 133.485 115.488 133.458 115.277 cv
cp
f
133.137 114.081 mo
132.988 113.771 li
131.918 114.282 li
132.065 114.591 li
133.137 114.081 li
cp
f
131.89 114.881 mo
132.083 114.788 132.171 114.57 132.085 114.391 cv
132.001 114.214 131.776 114.145 131.583 114.237 cv
131.389 114.329 131.302 114.549 131.387 114.726 cv
131.471 114.904 131.697 114.974 131.89 114.881 cv
cp
f
132.928 114.206 mo
133.178 113.969 li
132.36 113.109 li
132.112 113.346 li
132.928 114.206 li
cp
f
131.781 113.269 mo
131.93 113.424 132.165 113.439 132.307 113.303 cv
132.451 113.17 132.446 112.933 132.298 112.777 cv
132.151 112.623 131.917 112.606 131.775 112.743 cv
131.631 112.877 131.635 113.113 131.781 113.269 cv
cp
f
132.745 114.047 mo
133.045 114.21 li
133.61 113.168 li
133.312 113.004 li
132.745 114.047 li
cp
f
133.283 112.668 mo
133.179 112.856 133.238 113.084 133.412 113.177 cv
133.585 113.271 133.808 113.196 133.909 113.007 cv
134.012 112.819 133.954 112.59 133.781 112.496 cv
133.608 112.403 133.385 112.479 133.283 112.668 cv
cp
f
133.147 113.977 mo
132.972 114.138 li
133.533 114.75 li
133.709 114.587 li
133.147 113.977 li
cp
f
133.939 114.644 mo
133.838 114.534 133.674 114.52 133.572 114.613 cv
133.471 114.707 133.472 114.874 133.572 114.982 cv
133.674 115.093 133.838 115.105 133.939 115.013 cv
134.042 114.92 134.042 114.755 133.939 114.644 cv
cp
f
132.991 114.106 mo
132.782 113.988 li
132.374 114.713 li
132.583 114.83 li
132.991 114.106 li
cp
f
132.6 115.066 mo
132.673 114.937 132.635 114.775 132.515 114.707 cv
132.395 114.639 132.237 114.691 132.164 114.821 cv
132.09 114.952 132.127 115.113 132.25 115.181 cv
132.369 115.248 132.524 115.196 132.6 115.066 cv
cp
f
132.823 114.021 mo
132.872 113.785 li
132.055 113.619 li
132.01 113.854 li
132.823 114.021 li
cp
f
131.79 113.943 mo
131.936 113.972 132.077 113.887 132.104 113.751 cv
132.132 113.617 132.035 113.483 131.888 113.454 cv
131.741 113.424 131.599 113.509 131.572 113.646 cv
131.545 113.779 131.642 113.914 131.79 113.943 cv
cp
f
132.853 113.816 mo
133.092 113.789 li
132.997 112.963 li
132.757 112.991 li
132.853 113.816 li
cp
f
132.606 112.81 mo
132.623 112.958 132.748 113.065 132.885 113.05 cv
133.021 113.035 133.119 112.899 133.102 112.751 cv
133.085 112.603 132.959 112.496 132.823 112.511 cv
132.686 112.526 132.588 112.661 132.606 112.81 cv
cp
f
133.063 113.788 mo
133.162 114.006 li
133.917 113.66 li
133.819 113.443 li
133.063 113.788 li
cp
f
133.944 113.241 mo
133.809 113.304 133.745 113.457 133.801 113.581 cv
133.859 113.708 134.016 113.758 134.151 113.697 cv
134.289 113.633 134.353 113.481 134.295 113.356 cv
134.237 113.231 134.081 113.182 133.944 113.241 cv
cp
f
127.152 117.978 mo
125.737 118.846 123.826 121.593 124.693 123.012 cv
125.562 124.429 128.877 123.977 130.295 123.107 cv
131.712 122.239 132.156 120.387 131.288 118.972 cv
130.421 117.557 128.571 117.11 127.152 117.978 cv
cp
.752941 .168627 .47451 rgb
f
130.224 124.289 mo
128.962 123.212 125.757 122.245 124.678 123.505 cv
123.597 124.77 125.053 127.785 126.315 128.862 cv
127.579 129.946 129.478 129.794 130.558 128.529 cv
131.637 127.269 131.488 125.371 130.224 124.289 cv
cp
f
125.132 129.185 mo
125.769 127.651 125.696 124.302 124.164 123.666 cv
122.628 123.028 120.209 125.346 119.572 126.879 cv
118.938 128.414 119.665 130.175 121.2 130.813 cv
122.736 131.448 124.496 130.719 125.132 129.185 cv
cp
f
118.919 125.814 mo
120.577 125.944 123.739 124.844 123.87 123.187 cv
124 121.53 121.049 119.947 119.392 119.818 cv
117.737 119.686 116.289 120.921 116.159 122.579 cv
116.027 124.235 117.264 125.685 118.919 125.814 cv
cp
f
120.218 118.906 mo
120.605 120.521 122.629 123.188 124.246 122.801 cv
125.86 122.415 126.454 119.12 126.069 117.502 cv
125.681 115.887 124.057 114.891 122.441 115.28 cv
120.825 115.667 119.829 117.291 120.218 118.906 cv
cp
f
123.863 123.053 mo
124.278 123.733 li
126.632 122.292 li
126.215 121.612 li
123.863 123.053 li
cp
1 1 1 rgb
f
126.552 120.9 mo
126.127 121.161 125.977 121.688 126.215 122.078 cv
126.456 122.468 126.994 122.575 127.417 122.314 cv
127.842 122.054 127.992 121.527 127.754 121.139 cv
127.515 120.747 126.977 120.64 126.552 120.9 cv
cp
f
124.313 122.712 mo
123.793 123.317 li
125.894 125.11 li
126.409 124.503 li
124.313 122.712 li
cp
f
127.192 124.604 mo
126.811 124.28 126.265 124.301 125.967 124.649 cv
125.669 124.994 125.734 125.541 126.114 125.865 cv
126.493 126.189 127.039 126.169 127.337 125.82 cv
127.633 125.475 127.568 124.928 127.192 124.604 cv
cp
f
124.774 123.033 mo
124.041 122.729 li
122.983 125.28 li
123.72 125.583 li
124.774 123.033 li
cp
f
123.864 126.355 mo
124.056 125.897 123.867 125.382 123.443 125.205 cv
123.022 125.031 122.523 125.262 122.333 125.722 cv
122.145 126.182 122.331 126.696 122.754 126.871 cv
123.177 127.047 123.675 126.816 123.864 126.355 cv
cp
f
124.611 123.574 mo
124.674 122.781 li
121.923 122.564 li
121.86 123.357 li
124.611 123.574 li
cp
f
121.17 123.734 mo
121.668 123.775 122.1 123.437 122.135 122.98 cv
122.172 122.522 121.798 122.121 121.302 122.082 cv
120.806 122.043 120.374 122.381 120.338 122.836 cv
120.301 123.292 120.675 123.696 121.17 123.734 cv
cp
f
124.049 123.586 mo
124.822 123.401 li
124.178 120.718 li
123.404 120.9 li
124.049 123.586 li
cp
f
122.833 120.366 mo
122.947 120.846 123.403 121.153 123.849 121.046 cv
124.292 120.941 124.562 120.461 124.445 119.977 cv
124.327 119.495 123.874 119.188 123.428 119.293 cv
122.983 119.4 122.715 119.879 122.833 120.366 cv
cp
f
124.631 122.836 mo
124.579 123.387 li
126.502 123.573 li
126.556 123.019 li
124.631 122.836 li
cp
f
127.042 122.761 mo
126.695 122.729 126.387 122.96 126.359 123.28 cv
126.328 123.598 126.585 123.885 126.931 123.917 cv
127.279 123.951 127.584 123.718 127.614 123.399 cv
127.647 123.081 127.388 122.795 127.042 122.761 cv
cp
f
124.565 123.305 mo
124.02 123.426 li
124.441 125.313 li
124.985 125.19 li
124.565 123.305 li
cp
f
125.378 125.576 mo
125.303 125.237 124.988 125.015 124.676 125.085 cv
124.363 125.154 124.172 125.488 124.247 125.828 cv
124.32 126.166 124.636 126.387 124.95 126.317 cv
125.262 126.249 125.455 125.913 125.378 125.576 cv
cp
f
124.137 123.415 mo
123.856 122.934 li
122.192 123.917 li
122.473 124.396 li
124.137 123.415 li
cp
f
122.232 124.892 mo
122.53 124.714 122.644 124.347 122.481 124.071 cv
122.318 123.795 121.943 123.715 121.642 123.891 cv
121.343 124.068 121.23 124.435 121.392 124.711 cv
121.559 124.987 121.932 125.067 122.232 124.892 cv
cp
f
123.874 123.018 mo
124.246 122.601 li
122.796 121.322 li
122.425 121.737 li
123.874 123.018 li
cp
f
121.882 121.661 mo
122.143 121.89 122.526 121.884 122.74 121.642 cv
122.952 121.403 122.912 121.021 122.651 120.789 cv
122.388 120.559 122.005 120.566 121.794 120.807 cv
121.58 121.048 121.621 121.43 121.882 121.661 cv
cp
f
124.196 122.642 mo
124.706 122.866 li
125.473 121.091 li
124.966 120.872 li
124.196 122.642 li
cp
f
124.871 120.329 mo
124.729 120.648 124.857 121.011 125.15 121.138 cv
125.446 121.266 125.795 121.111 125.934 120.791 cv
126.072 120.472 125.948 120.109 125.654 119.982 cv
125.358 119.854 125.009 120.009 124.871 120.329 cv
cp
f
156.744 135.974 mo
155.871 136.509 154.694 138.202 155.229 139.076 cv
155.765 139.948 157.808 139.67 158.682 139.135 cv
159.555 138.601 159.828 137.458 159.292 136.586 cv
158.759 135.714 157.619 135.439 156.744 135.974 cv
cp
.752941 .168627 .47451 rgb
f
158.637 139.863 mo
157.859 139.2 155.885 138.603 155.219 139.379 cv
154.554 140.159 155.451 142.017 156.229 142.682 cv
157.007 143.349 158.178 143.255 158.843 142.476 cv
159.508 141.699 159.415 140.53 158.637 139.863 cv
cp
f
155.499 142.879 mo
155.892 141.935 155.848 139.87 154.903 139.479 cv
153.957 139.086 152.466 140.514 152.073 141.459 cv
151.683 142.405 152.131 143.49 153.077 143.882 cv
154.023 144.274 155.107 143.825 155.499 142.879 cv
cp
f
151.671 140.803 mo
152.693 140.883 154.642 140.205 154.722 139.184 cv
154.802 138.163 152.984 137.187 151.963 137.108 cv
150.942 137.026 150.049 137.788 149.97 138.809 cv
149.888 139.829 150.651 140.723 151.671 140.803 cv
cp
f
152.471 136.546 mo
152.709 137.542 153.958 139.184 154.953 138.946 cv
155.949 138.708 156.314 136.677 156.077 135.681 cv
155.838 134.686 154.837 134.071 153.841 134.312 cv
152.845 134.55 152.231 135.55 152.471 136.546 cv
cp
f
154.717 139.102 mo
154.973 139.52 li
156.424 138.631 li
156.167 138.213 li
154.717 139.102 li
cp
1 1 1 rgb
f
156.374 137.774 mo
156.113 137.936 156.02 138.26 156.167 138.5 cv
156.316 138.741 156.647 138.807 156.908 138.646 cv
157.169 138.486 157.262 138.161 157.115 137.921 cv
156.968 137.68 156.636 137.614 156.374 137.774 cv
cp
f
154.995 138.891 mo
154.674 139.264 li
155.968 140.369 li
156.287 139.995 li
154.995 138.891 li
cp
f
156.769 140.057 mo
156.534 139.857 156.197 139.87 156.014 140.085 cv
155.831 140.298 155.871 140.634 156.104 140.833 cv
156.337 141.034 156.674 141.021 156.858 140.806 cv
157.042 140.593 157 140.256 156.769 140.057 cv
cp
f
155.279 139.088 mo
154.827 138.902 li
154.175 140.474 li
154.628 140.66 li
155.279 139.088 li
cp
f
154.717 141.136 mo
154.836 140.854 154.72 140.538 154.459 140.427 cv
154.2 140.32 153.892 140.462 153.773 140.746 cv
153.658 141.029 153.773 141.347 154.034 141.454 cv
154.294 141.563 154.602 141.42 154.717 141.136 cv
cp
f
155.178 139.422 mo
155.217 138.935 li
153.521 138.8 li
153.483 139.289 li
155.178 139.422 li
cp
f
153.058 139.521 mo
153.365 139.546 153.63 139.338 153.652 139.057 cv
153.675 138.774 153.445 138.527 153.14 138.503 cv
152.833 138.479 152.566 138.687 152.546 138.967 cv
152.522 139.249 152.753 139.498 153.058 139.521 cv
cp
f
154.832 139.43 mo
155.309 139.316 li
154.912 137.662 li
154.435 137.774 li
154.832 139.43 li
cp
f
154.082 137.446 mo
154.153 137.742 154.434 137.932 154.709 137.865 cv
154.983 137.8 155.148 137.504 155.076 137.206 cv
155.003 136.909 154.725 136.72 154.45 136.784 cv
154.175 136.851 154.011 137.146 154.082 137.446 cv
cp
f
155.191 138.967 mo
155.158 139.308 li
156.344 139.421 li
156.376 139.08 li
155.191 138.967 li
cp
f
156.677 138.921 mo
156.462 138.902 156.272 139.044 156.256 139.242 cv
156.237 139.438 156.394 139.614 156.608 139.633 cv
156.822 139.654 157.01 139.511 157.029 139.315 cv
157.049 139.118 156.89 138.942 156.677 138.921 cv
cp
f
155.149 139.256 mo
154.814 139.331 li
155.074 140.494 li
155.408 140.419 li
155.149 139.256 li
cp
f
155.651 140.656 mo
155.605 140.447 155.41 140.31 155.219 140.354 cv
155.025 140.395 154.908 140.602 154.954 140.811 cv
154.999 141.02 155.194 141.156 155.387 141.113 cv
155.58 141.07 155.697 140.864 155.651 140.656 cv
cp
f
154.886 139.324 mo
154.713 139.028 li
153.688 139.633 li
153.861 139.929 li
154.886 139.324 li
cp
f
153.712 140.234 mo
153.896 140.125 153.966 139.899 153.866 139.729 cv
153.765 139.558 153.534 139.509 153.349 139.617 cv
153.165 139.727 153.096 139.953 153.195 140.123 cv
153.297 140.293 153.527 140.342 153.712 140.234 cv
cp
f
154.725 139.079 mo
154.954 138.822 li
154.06 138.034 li
153.831 138.291 li
154.725 139.079 li
cp
f
153.496 138.243 mo
153.658 138.384 153.894 138.381 154.025 138.231 cv
154.156 138.084 154.131 137.85 153.97 137.706 cv
153.808 137.563 153.572 137.57 153.442 137.716 cv
153.311 137.866 153.335 138.101 153.496 138.243 cv
cp
f
154.922 138.848 mo
155.236 138.986 li
155.71 137.893 li
155.397 137.758 li
154.922 138.848 li
cp
f
155.338 137.423 mo
155.251 137.619 155.331 137.843 155.51 137.921 cv
155.694 138 155.908 137.905 155.994 137.707 cv
156.079 137.51 156.001 137.288 155.821 137.209 cv
155.639 137.131 155.424 137.225 155.338 137.423 cv
cp
f
137.48 118.172 mo
137.222 119.163 137.545 121.199 138.536 121.459 cv
139.527 121.718 140.808 120.102 141.067 119.111 cv
141.327 118.12 140.732 117.107 139.743 116.849 cv
138.754 116.59 137.741 117.181 137.48 118.172 cv
cp
.752941 .168627 .47451 rgb
f
141.54 119.667 mo
140.519 119.727 138.682 120.664 138.74 121.686 cv
138.799 122.708 140.734 123.427 141.754 123.368 cv
142.778 123.31 143.558 122.432 143.497 121.408 cv
143.439 120.388 142.563 119.608 141.54 119.667 cv
cp
f
141.366 124.016 mo
140.994 123.063 139.532 121.604 138.581 121.976 cv
137.625 122.349 137.539 124.41 137.91 125.364 cv
138.284 126.317 139.358 126.789 140.313 126.417 cv
141.267 126.044 141.737 124.969 141.366 124.016 cv
cp
f
137.166 125.169 mo
137.958 124.52 138.895 122.681 138.245 121.889 cv
137.595 121.097 135.609 121.652 134.816 122.302 cv
134.024 122.95 133.908 124.118 134.558 124.909 cv
135.207 125.702 136.375 125.818 137.166 125.169 cv
cp
f
134.794 121.544 mo
135.656 122.097 137.694 122.419 138.248 121.557 cv
138.8 120.696 137.658 118.978 136.796 118.423 cv
135.934 117.871 134.787 118.121 134.235 118.983 cv
133.682 119.845 133.933 120.992 134.794 121.544 cv
cp
f
138.185 121.831 mo
138.659 121.958 li
139.09 120.311 li
138.615 120.187 li
138.185 121.831 li
cp
1 1 1 rgb
f
138.461 119.728 mo
138.385 120.024 138.542 120.323 138.815 120.394 cv
139.087 120.465 139.373 120.283 139.45 119.987 cv
139.527 119.69 139.369 119.391 139.097 119.32 cv
138.824 119.249 138.539 119.431 138.461 119.728 cv
cp
f
138.24 121.487 mo
138.267 121.979 li
139.965 121.88 li
139.936 121.39 li
138.24 121.487 li
cp
f
140.326 121.101 mo
140.02 121.119 139.785 121.362 139.802 121.644 cv
139.816 121.925 140.078 122.14 140.385 122.12 cv
140.692 122.103 140.926 121.862 140.91 121.579 cv
140.895 121.298 140.632 121.083 140.326 121.101 cv
cp
f
138.581 121.433 mo
138.126 121.612 li
138.745 123.197 li
139.201 123.018 li
138.581 121.433 li
cp
f
139.594 123.3 mo
139.484 123.013 139.181 122.867 138.916 122.967 cv
138.656 123.07 138.532 123.385 138.643 123.671 cv
138.756 123.956 139.059 124.105 139.321 124.002 cv
139.584 123.9 139.707 123.584 139.594 123.3 cv
cp
f
138.74 121.745 mo
138.43 121.365 li
137.114 122.443 li
137.424 122.822 li
138.74 121.745 li
cp
f
137.278 123.285 mo
137.518 123.09 137.565 122.755 137.385 122.537 cv
137.206 122.318 136.869 122.299 136.632 122.493 cv
136.395 122.688 136.347 123.022 136.526 123.239 cv
136.704 123.458 137.043 123.479 137.278 123.285 cv
cp
f
138.495 121.989 mo
138.76 121.577 li
137.328 120.659 li
137.062 121.071 li
138.495 121.989 li
cp
f
136.579 121.078 mo
136.836 121.242 137.17 121.184 137.322 120.946 cv
137.475 120.71 137.389 120.382 137.13 120.216 cv
136.873 120.052 136.541 120.109 136.387 120.346 cv
136.234 120.585 136.319 120.911 136.579 121.078 cv
cp
f
138.434 121.407 mo
138.646 121.675 li
139.58 120.937 li
139.367 120.667 li
138.434 121.407 li
cp
f
139.474 120.345 mo
139.305 120.479 139.267 120.714 139.392 120.868 cv
139.513 121.022 139.75 121.041 139.917 120.906 cv
140.086 120.772 140.122 120.54 140 120.385 cv
139.878 120.229 139.642 120.213 139.474 120.345 cv
cp
f
138.604 121.644 mo
138.414 121.931 li
139.407 122.589 li
139.596 122.303 li
138.604 121.644 li
cp
f
139.936 122.306 mo
139.757 122.188 139.522 122.224 139.413 122.388 cv
139.303 122.552 139.361 122.782 139.539 122.902 cv
139.716 123.02 139.952 122.984 140.061 122.819 cv
140.171 122.655 140.113 122.424 139.936 122.306 cv
cp
f
138.461 121.875 mo
138.131 121.782 li
137.811 122.93 li
138.141 123.022 li
138.461 121.875 li
cp
f
138.244 123.345 mo
138.302 123.139 138.195 122.928 138.005 122.875 cv
137.815 122.821 137.613 122.945 137.555 123.152 cv
137.498 123.359 137.604 123.57 137.794 123.623 cv
137.986 123.675 138.187 123.551 138.244 123.345 cv
cp
f
138.174 121.812 mo
138.162 121.467 li
136.972 121.518 li
136.984 121.861 li
138.174 121.812 li
cp
f
136.709 122.059 mo
136.924 122.049 137.091 121.882 137.083 121.684 cv
137.075 121.487 136.895 121.335 136.679 121.342 cv
136.464 121.353 136.297 121.52 136.306 121.716 cv
136.314 121.915 136.495 122.067 136.709 122.059 cv
cp
f
138.158 121.507 mo
138.479 121.39 li
138.063 120.273 li
137.744 120.392 li
138.158 121.507 li
cp
f
137.47 120.191 mo
137.543 120.393 137.756 120.5 137.939 120.432 cv
138.126 120.361 138.215 120.145 138.14 119.942 cv
138.065 119.742 137.855 119.634 137.67 119.703 cv
137.484 119.771 137.395 119.989 137.47 120.191 cv
cp
f
146.887 123.001 mo
146.887 123.001 150.513 124.717 152.271 119.841 cv
152.271 119.841 148.721 118.358 146.887 123.001 cv
cp
.752941 .168627 .47451 rgb
f
146.885 123 mo
146.885 123 150.544 122.241 149.182 118.04 cv
149.182 118.04 145.71 118.917 146.885 123 cv
cp
f
158.578 145.367 mo
158.578 145.367 155.237 147.778 158.752 151.775 cv
158.752 151.775 161.845 149.317 158.578 145.367 cv
cp
f
158.579 145.366 mo
158.579 145.366 157.448 149.031 161.901 149.889 cv
161.901 149.889 162.833 146.332 158.579 145.366 cv
cp
f
160.188 154.078 mo
160.188 154.078 156.847 156.489 160.362 160.485 cv
160.362 160.485 163.454 158.027 160.188 154.078 cv
cp
f
125.521 130.239 mo
125.521 130.239 124.657 133.693 129.207 134.375 cv
129.207 134.375 129.879 131.027 125.521 130.239 cv
cp
f
166.588 159.173 mo
166.588 159.173 165.851 161.564 168.756 162.124 cv
168.756 162.124 169.364 159.803 166.588 159.173 cv
cp
.972549 .513726 .52549 rgb
f
130.726 131.992 mo
130.726 131.992 132.009 127.012 138.248 129.279 cv
138.248 129.279 136.801 133.989 130.726 131.992 cv
cp
f
130.725 131.996 mo
130.725 131.996 134.473 129.012 137.493 133.795 cv
137.493 133.795 133.782 136.497 130.725 131.996 cv
cp
f
145.21 118.339 mo
145.21 118.339 141.916 117.419 143.506 113.3 cv
143.506 113.3 146.62 114.325 145.21 118.339 cv
cp
f
153.291 124.521 mo
153.291 124.521 153.847 122.358 156.556 123.343 cv
156.556 123.343 155.927 125.388 153.291 124.521 cv
cp
f
138.712 114.702 mo
138.712 114.702 137.857 112.639 140.613 111.797 cv
140.613 111.797 141.341 113.808 138.712 114.702 cv
cp
f
153.259 129.148 mo
153.259 129.148 157.007 126.165 160.027 130.948 cv
160.027 130.948 156.316 133.651 153.259 129.148 cv
cp
f
115.842 135.374 mo
115.245 137.861 115.046 146.019 117.533 148.804 cv
120.021 151.591 119.92 150.396 119.722 152.983 cv
119.522 155.57 118.329 158.354 120.319 158.455 cv
122.309 158.554 123.303 158.455 123.005 159.449 cv
122.706 160.445 122.756 160.842 124.049 160.644 cv
125.342 160.445 125.84 159.748 125.392 160.146 cv
124.717 160.747 123.836 162.012 124.979 162.38 cv
126.71 162.936 126.387 162.832 126.686 163.827 cv
126.983 164.821 127.68 165.817 129.372 165.318 cv
131.063 164.821 135.106 160.378 136.9 160.378 cv
138.624 160.378 139.42 162.201 138.725 165.451 cv
138.026 168.702 132.058 172.88 132.058 175.367 cv
132.058 175.367 153.348 165.419 150.861 158.156 cv
148.374 150.894 145.09 143.233 144.194 142.637 cv
143.3 142.039 115.842 135.374 115.842 135.374 cv
cp
.992157 .694118 .443137 rgb
f
115.842 135.374 mo
119.597 140.219 123.808 139.155 133.272 143.133 cv
142.736 147.113 145.921 152.95 145.655 158.521 cv
145.389 164.092 140.116 168.451 133.272 173.079 cv
124.298 179.148 124.432 187.173 126.554 191.418 cv
126.554 191.418 124.298 182.53 136.436 180.276 cv
149.932 177.768 157.882 170.233 156.929 157.261 cv
155.935 143.731 146.185 140.215 139.553 138.093 cv
132.92 135.971 115.842 135.374 115.458 127.415 cv
115.458 127.415 112.758 131.394 115.842 135.374 cv
cp
.752941 .168627 .47451 rgb
f
114.395 130.636 mo
114.595 129.39 114.916 128.504 114.971 128.358 cv
114.729 128.924 114.477 129.711 114.395 130.636 cv
cp
.517647 .733333 .0235294 rgb
f
156.929 157.261 mo
155.935 143.731 146.185 140.215 139.553 138.093 cv
132.92 135.971 115.842 135.374 115.458 127.415 cv
115.458 127.415 115.231 127.757 114.984 128.328 cv
113.696 136.56 131.434 137.851 137.533 139.803 cv
143.633 141.756 152.601 144.988 153.516 157.434 cv
154.393 169.366 147.08 176.296 134.666 178.604 cv
123.604 180.658 126.177 190.506 126.226 190.686 cv
126.329 190.94 126.437 191.186 126.554 191.418 cv
126.554 191.418 124.298 182.53 136.436 180.276 cv
149.932 177.768 157.882 170.233 156.929 157.261 cv
cp
.972549 .513726 .52549 rgb
f
335.435 380.631 mo
333.445 381.798 333.502 381.916 333.502 381.916 cv
333.502 381.916 333.433 382.031 335.301 383.382 cv
338.152 385.442 342.387 390.615 347.75 390.875 cv
353.113 391.137 356.236 386.141 356.386 383.025 cv
356.538 379.908 353.913 374.636 348.548 374.376 cv
343.185 374.116 338.471 378.854 335.435 380.631 cv
cp
f
338.75 369.62 mo
336.189 369.636 336.173 369.781 336.173 369.781 cv
336.173 369.781 336.047 369.852 337.093 372.19 cv
338.691 375.761 339.894 383.087 344.91 386.316 cv
349.927 389.551 355.704 386.478 357.579 383.562 cv
359.457 380.646 359.862 374.116 354.843 370.887 cv
349.828 367.657 342.66 369.596 338.75 369.62 cv
cp
.752941 .168627 .47451 rgb
f
367.955 363.899 mo
370.059 362.956 370.125 363.075 370.125 363.075 cv
370.125 363.075 370.254 363.083 370.27 365.39 cv
370.291 368.908 372.037 375.361 369.129 379.876 cv
366.222 384.39 360.345 384.024 357.723 382.335 cv
355.1 380.648 352.333 375.448 355.239 370.934 cv
358.148 366.419 364.745 365.335 367.955 363.899 cv
cp
.972549 .513726 .52549 rgb
f
357.069 360.193 mo
358.572 358.119 358.697 358.193 358.697 358.193 cv
358.697 358.193 358.83 358.131 360.123 360.344 cv
362.1 363.714 367.363 368.957 367.073 374.915 cv
366.786 380.872 360.928 383.789 357.467 383.62 cv
354.001 383.451 348.455 379.984 348.743 374.024 cv
349.03 368.068 354.777 363.36 357.069 360.193 cv
cp
.752941 .168627 .47451 rgb
f
347.298 360.003 mo
344.823 358.593 344.729 358.725 344.729 358.725 cv
344.729 358.725 344.569 358.725 344.274 361.556 cv
343.83 365.877 340.917 373.6 343.947 379.492 cv
346.981 385.387 354.246 385.641 357.668 383.878 cv
361.095 382.116 365.112 376.055 362.08 370.163 cv
359.047 364.27 351.071 362.149 347.298 360.003 cv
cp
.972549 .513726 .52549 rgb
f
351.096 368.706 mo
349.5 367.799 349.44 367.883 349.44 367.883 cv
349.44 367.883 349.337 367.883 349.149 369.708 cv
348.862 372.49 346.984 377.466 348.938 381.264 cv
350.891 385.06 355.572 385.226 357.778 384.09 cv
359.985 382.954 362.574 379.05 360.621 375.253 cv
358.665 371.456 353.527 370.088 351.096 368.706 cv
cp
.8 .152941 .466667 rgb
f
383.392 351.479 mo
378.139 333.093 358.974 322.442 340.586 327.694 cv
339.767 327.928 338.967 328.197 338.18 328.487 cv
353.239 325.44 368.346 334.438 372.635 349.463 cv
377.146 365.253 368.001 381.709 352.212 386.22 cv
337.185 390.51 321.568 382.434 316.202 368.037 cv
316.373 368.859 316.566 369.682 316.799 370.499 cv
322.05 388.889 341.216 399.537 359.605 394.285 cv
377.993 389.034 388.643 369.869 383.392 351.479 cv
cp
.254902 .741176 .941176 rgb
f
383.392 351.479 mo
378.139 333.093 358.974 322.442 340.586 327.694 cv
340.29 327.778 339.998 327.874 339.707 327.967 cv
356.958 323.472 374.729 333.548 379.649 350.778 cv
384.643 368.263 374.517 386.486 357.033 391.479 cv
339.807 396.4 321.875 386.64 316.572 369.63 cv
316.645 369.92 316.717 370.209 316.799 370.499 cv
322.05 388.889 341.216 399.537 359.605 394.285 cv
377.993 389.034 388.643 369.869 383.392 351.479 cv
cp
.0823529 .607843 .819608 rgb
f
355.156 353.49 mo
355.156 353.49 361.443 352.896 359.901 344.884 cv
359.901 344.884 353.905 345.733 355.156 353.49 cv
cp
.752941 .168627 .47451 rgb
f
355.155 353.491 mo
355.155 353.491 359.495 349.52 354.272 344.932 cv
354.272 344.932 350.28 348.91 355.155 353.491 cv
cp
f
349.876 347.79 mo
349.876 347.79 344.679 349.198 343.516 342.345 cv
343.516 342.345 348.554 341.225 349.876 347.79 cv
cp
.972549 .513726 .52549 rgb
f
364.376 360.79 mo
364.376 360.79 363.077 356.345 368.946 355.23 cv
368.946 355.23 369.995 359.539 364.376 360.79 cv
cp
f
365.486 353.224 mo
365.486 353.224 362.564 351.269 365.441 347.76 cv
365.441 347.76 368.149 349.76 365.486 353.224 cv
cp
f
339.395 363.021 mo
339.395 363.021 342.544 357.548 335.118 354.172 cv
335.118 354.172 332.341 359.555 339.395 363.021 cv
cp
f
339.394 363.023 mo
339.394 363.023 338.665 357.185 331.901 358.793 cv
331.901 358.793 332.837 364.351 339.394 363.023 cv
cp
f
334.982 374.649 mo
334.982 374.649 332.227 379.275 326.624 375.162 cv
326.624 375.162 329.464 370.852 334.982 374.649 cv
cp
.752941 .168627 .47451 rgb
f
342.59 353.164 mo
342.59 353.164 339.267 352.019 341.153 347.892 cv
341.153 347.892 344.284 349.135 342.59 353.164 cv
cp
f
353.923 358.777 mo
353.923 358.777 350.517 359.647 349.823 355.166 cv
349.823 355.166 353.12 354.482 353.923 358.777 cv
cp
f
330.904 349.227 mo
330.904 349.227 327.632 350.512 326.389 346.15 cv
326.389 346.15 329.576 345.063 330.904 349.227 cv
cp
f
330.243 369.476 mo
330.243 369.476 326.731 369.61 326.995 365.081 cv
326.995 365.081 330.363 365.106 330.243 369.476 cv
cp
f
125.935 233.916 mo
129.589 222.149 154.091 222.579 162.958 242.718 cv
171.352 261.781 166.366 271.62 162.832 277.749 cv
157.857 276.686 li
157.857 276.686 161.288 269.63 157.888 261.714 cv
154.49 253.799 145.612 258.518 137.001 253.485 cv
128.391 248.451 123.396 242.089 125.935 233.916 cv
cp
.254902 .741176 .941176 rgb
f
144.478 255.951 mo
144.478 255.951 139.369 250.323 135.228 252.39 cv
135.228 252.39 137.176 261.862 148.608 262.72 cv
148.608 262.72 144.203 261.13 144.478 255.951 cv
cp
.0823529 .607843 .819608 rgb
f
154.518 231.512 mo
154.518 231.512 146.926 231.743 145.535 227.328 cv
145.535 227.328 153.701 222.151 162.259 229.776 cv
162.259 229.776 158.053 227.715 154.518 231.512 cv
cp
f
160.792 275.114 mo
160.792 275.114 164.552 269.445 160.231 255.954 cv
155.417 240.909 141.017 242.111 141.017 242.111 cv
141.017 242.111 154.377 238.813 160.764 252.813 cv
167.126 266.749 162.684 275.971 162.684 275.971 cv
160.792 275.114 li
cp
1 1 1 rgb
f
159.33 274.2 mo
159.33 274.2 153.482 274.364 152.411 279.647 cv
151.589 283.687 156.319 285.021 150.125 293.097 cv
150.125 293.097 163.559 289.018 161.686 274.704 cv
159.33 274.2 li
cp
.0823529 .607843 .819608 rgb
f
163.769 275.119 mo
163.769 275.119 167.612 277.189 166.842 281.907 cv
166.254 285.518 162.872 285.035 165.474 293.675 cv
165.474 293.675 155.614 286.078 161.654 274.794 cv
163.769 275.119 li
cp
f
142.312 280.708 mo
138.098 292.282 113.642 290.673 105.757 270.129 cv
98.293 250.682 103.746 241.098 107.573 235.144 cv
112.49 236.444 li
112.49 236.444 108.72 243.326 111.732 251.396 cv
114.745 259.469 123.843 255.186 132.202 260.627 cv
140.558 266.068 145.243 272.663 142.312 280.708 cv
cp
.0823529 .0823529 .0823529 rgb
f
124.854 257.803 mo
124.854 257.803 129.683 263.668 133.92 261.802 cv
133.92 261.802 132.429 252.248 121.053 250.842 cv
121.053 250.842 125.377 252.641 124.854 257.803 cv
cp
.517647 .733333 .0235294 rgb
f
113.648 281.729 mo
113.648 281.729 121.243 281.866 122.419 286.339 cv
122.419 286.339 114.011 291.12 105.832 283.089 cv
105.832 283.089 109.931 285.354 113.648 281.729 cv
cp
f
109.484 237.875 mo
109.484 237.875 105.451 243.357 109.115 257.039 cv
113.205 272.298 127.641 271.788 127.641 271.788 cv
127.641 271.788 114.144 274.44 108.435 260.148 cv
102.981 246.493 117.995 217.81 107.632 236.928 cv
109.484 237.875 li
cp
1 1 1 rgb
f
110.894 238.859 mo
110.894 238.859 116.746 238.976 118.071 233.751 cv
119.083 229.755 114.426 228.194 121.002 220.427 cv
121.002 220.427 107.388 223.856 108.57 238.242 cv
110.894 238.859 li
cp
.517647 .733333 .0235294 rgb
f
106.512 237.729 mo
106.512 237.729 102.769 235.472 103.762 230.796 cv
104.527 227.223 107.887 227.864 105.696 219.109 cv
105.696 219.109 115.182 227.174 108.602 238.153 cv
106.512 237.729 li
cp
f
137.235 236.669 mo
137.235 238.499 135.75 239.983 133.922 239.983 cv
132.088 239.983 130.603 238.499 130.603 236.669 cv
130.603 234.835 132.088 233.351 133.922 233.351 cv
135.75 233.351 137.235 234.835 137.235 236.669 cv
cp
.0823529 .0823529 .0823529 rgb
f
137.799 277.75 mo
137.799 279.58 136.313 281.063 134.485 281.063 cv
132.651 281.063 131.167 279.58 131.167 277.75 cv
131.167 275.917 132.651 274.433 134.485 274.433 cv
136.313 274.433 137.799 275.917 137.799 277.75 cv
cp
.254902 .741176 .941176 rgb
f
31.8486 323.582 mo
31.8486 323.582 21.7295 320.596 12.6733 329.494 cv
3.60254 338.402 .140137 356.089 11.9736 370.926 cv
23.3169 385.148 19.3672 391.03 16.1055 392.724 cv
12.8442 394.418 30.2944 393.726 32.6147 385.055 cv
34.9355 376.387 39.5859 359.354 39.5859 359.354 cv
39.5859 359.354 30.8779 334.613 30.6567 333.964 cv
30.436 333.313 31.8486 323.582 31.8486 323.582 cv
cp
.0823529 .0823529 .0823529 rgb
f
22.1851 329.631 mo
20.8872 330.617 16.9277 334.644 15.9839 338.157 cv
15.0396 341.671 15.2939 341.976 15.6782 343.229 cv
16.3208 345.331 14.0518 346.742 12.8071 347.797 cv
10.8799 349.43 8.65771 350.601 10.8916 352.183 cv
13.3989 353.96 12.3789 354.904 11.4063 355.508 cv
10.6875 355.953 11.6338 357.243 11.9297 357.632 cv
11.9297 357.632 10.4189 358.63 11.1465 359.544 cv
11.8745 360.455 12.8525 360.509 12.7876 361.273 cv
12.7222 362.04 11.3701 364.854 12.6309 366.111 cv
13.8921 367.368 17.8203 367.161 19.8213 367.35 cv
21.5186 367.51 23.8242 367.726 25.4707 369.67 cv
30.7212 375.874 21.1929 390.005 21.1929 390.005 cv
21.1929 390.005 33.4263 381.758 42.1885 373.193 cv
44.9546 370.488 42.4375 362.303 42.2407 362.044 cv
42.043 361.782 30.9741 341.289 30.9741 341.289 cv
22.1851 329.631 li
cp
.992157 .694118 .443137 rgb
f
20.6548 331.034 mo
20.6548 331.034 17.3384 339.581 29.6675 353.121 cv
40.9775 365.539 25.6982 390.698 11.7158 394.365 cv
11.7158 394.365 47.1113 395.945 56.019 369.506 cv
66.0483 339.732 50.3105 326.207 40.9932 322.952 cv
31.6758 319.692 23.1431 325.162 20.6548 331.034 cv
cp
.180392 .180392 .180392 rgb
f
13.0303 344.291 mo
13.0303 344.291 15.8491 344.948 16.8682 343.271 cv
16.4067 344.918 li
16.4067 344.918 14.6704 345.207 13.0303 344.291 cv
cp
.992157 .694118 .443137 rgb
f
46.9766 391.013 mo
45.9727 389.61 44.0229 389.29 42.6216 390.296 cv
41.2212 391.302 40.8989 393.252 41.9053 394.653 cv
42.9087 396.055 44.8579 396.374 46.2612 395.372 cv
47.6611 394.366 47.9824 392.415 46.9766 391.013 cv
cp
.180392 .180392 .180392 rgb
f
32.9565 395.512 mo
32.8135 394.586 32.7817 393.649 32.8521 392.72 cv
32.8984 392.089 32.998 391.464 33.1416 390.851 cv
33.3643 389.91 33.6948 388.993 34.1343 388.123 cv
34.4219 387.557 34.7554 387.01 35.1333 386.486 cv
35.7046 385.698 36.3794 384.969 37.1484 384.319 cv
37.3945 384.114 37.6475 383.913 37.9116 383.727 cv
38.1748 383.537 38.4424 383.362 38.7153 383.197 cv
39.5796 382.675 40.4854 382.27 41.4146 381.981 cv
42.0303 381.793 42.6572 381.65 43.2856 381.562 cv
44.2515 381.423 45.2236 381.402 46.1875 381.495 cv
46.8169 381.558 47.438 381.663 48.0527 381.817 cv
48.9526 382.05 49.8286 382.384 50.6636 382.813 cv
50.9673 382.974 51.2666 383.147 51.5601 383.331 cv
63.1426 367.077 li
62.168 366.149 61.1436 365.293 60.0737 364.512 cv
59.5449 364.126 58.9976 363.771 58.4482 363.422 cv
58.4458 363.418 li
58.1729 363.242 57.897 363.082 57.6216 362.917 cv
57.6177 362.916 li
57.1157 362.621 56.6143 362.323 56.1025 362.056 cv
54.0059 360.974 51.8042 360.129 49.5381 359.553 cv
47.9956 359.16 46.4253 358.891 44.8433 358.74 cv
42.4219 358.508 39.9697 358.558 37.543 358.905 cv
36.5757 359.046 35.6143 359.246 34.6577 359.479 cv
34.6558 359.479 li
34.0474 359.626 33.4365 359.78 32.8345 359.97 cv
30.4966 360.69 28.2158 361.709 26.0435 363.021 cv
25.4956 363.354 24.9507 363.707 24.4155 364.08 cv
24.2817 364.173 24.146 364.26 24.0137 364.353 cv
23.8828 364.447 23.7578 364.549 23.6299 364.646 cv
23.103 365.032 22.5972 365.433 22.103 365.847 cv
20.1626 367.482 18.4702 369.315 17.0322 371.299 cv
16.6611 371.811 16.3247 372.342 15.9893 372.872 cv
15.458 373.702 14.9595 374.548 14.5186 375.416 cv
13.4102 377.608 12.5757 379.91 12.0171 382.278 cv
11.6558 383.825 11.4063 385.402 11.2861 386.991 cv
11.1055 389.319 11.1958 391.673 11.5508 394.009 cv
11.6392 394.58 11.7598 395.148 11.8789 395.717 cv
11.8799 395.726 li
11.9453 396.036 12.0107 396.351 12.0859 396.662 cv
12.0894 396.672 li
12.2432 397.301 12.4048 397.936 12.6035 398.559 cv
13 399.819 13.4795 401.067 14.0488 402.289 cv
33.1577 396.529 li
33.0786 396.193 33.0078 395.854 32.9565 395.512 cv
cp
.752941 .168627 .47451 rgb
f
32.9565 395.512 mo
32.8135 394.586 32.7817 393.649 32.8521 392.72 cv
32.8984 392.089 32.998 391.464 33.1416 390.851 cv
33.3643 389.91 33.6948 388.993 34.1343 388.123 cv
34.4219 387.557 34.7554 387.01 35.1333 386.486 cv
35.7046 385.698 36.3794 384.969 37.1484 384.319 cv
37.3945 384.114 37.6475 383.913 37.9116 383.727 cv
38.1748 383.537 38.4424 383.362 38.7153 383.197 cv
39.5796 382.675 40.4854 382.27 41.4146 381.981 cv
42.0303 381.793 42.6572 381.65 43.2856 381.562 cv
44.2515 381.423 45.2236 381.402 46.1875 381.495 cv
46.8169 381.558 47.438 381.663 48.0527 381.817 cv
48.9526 382.05 49.8286 382.384 50.6636 382.813 cv
50.9995 382.99 51.3257 383.184 51.6499 383.395 cv
61.2446 369.931 li
60.3721 369.101 59.4556 368.333 58.4995 367.636 cv
57.3677 366.806 56.1787 366.078 54.9492 365.442 cv
53.0752 364.471 51.1079 363.721 49.0845 363.203 cv
47.7046 362.851 46.2998 362.611 44.8853 362.477 cv
42.7222 362.269 40.5313 362.314 38.3594 362.625 cv
36.9434 362.826 35.5352 363.145 34.1499 363.572 cv
32.061 364.221 30.0234 365.129 28.0811 366.303 cv
27.4673 366.675 26.8623 367.069 26.269 367.495 cv
25.6753 367.919 25.1074 368.366 24.5586 368.831 cv
22.8223 370.29 21.3101 371.931 20.0234 373.702 cv
19.1758 374.879 18.4238 376.109 17.7783 377.385 cv
16.7871 379.343 16.0435 381.402 15.5449 383.516 cv
15.2192 384.903 14.9966 386.308 14.8872 387.728 cv
14.7275 389.813 14.8091 391.919 15.126 394.001 cv
15.335 395.368 15.6455 396.73 16.0659 398.069 cv
16.4194 399.199 16.8506 400.315 17.3599 401.404 cv
33.188 396.634 li
33.0947 396.261 33.0132 395.89 32.9565 395.512 cv
cp
.254902 .741176 .941176 rgb
f
45.5957 392.008 mo
45.1387 391.367 44.249 391.223 43.6123 391.681 cv
42.9761 392.136 42.8276 393.021 43.2866 393.663 cv
43.7446 394.298 44.6323 394.444 45.2681 393.985 cv
45.9067 393.531 46.0542 392.644 45.5957 392.008 cv
cp
.180392 .180392 .180392 rgb
f
41.3628 392.324 mo
41.4229 391.954 41.5508 391.597 41.7422 391.267 cv
12.1924 381.746 li
11.8975 381.65 11.5835 381.813 11.4888 382.106 cv
11.394 382.401 11.5537 382.716 11.8501 382.813 cv
41.3628 392.324 li
cp
.972549 .513726 .52549 rgb
f
42.6216 390.296 mo
42.7764 390.185 42.9419 390.093 43.106 390.014 cv
24.4897 364.054 li
24.3086 363.799 23.96 363.743 23.708 363.923 cv
23.4556 364.104 23.3999 364.451 23.5806 364.706 cv
42.1963 390.665 li
42.3247 390.53 42.4658 390.408 42.6216 390.296 cv
cp
f
44.9478 389.753 mo
45.4023 358.747 li
45.4063 358.437 45.1592 358.185 44.8496 358.18 cv
44.541 358.175 44.2856 358.421 44.2827 358.73 cv
43.8291 389.775 li
44.1973 389.701 44.5786 389.692 44.9478 389.753 cv
cp
f
41.3999 393.545 mo
13.8911 401.751 li
13.5942 401.84 13.4292 402.151 13.5161 402.447 cv
13.604 402.743 13.9141 402.912 14.2119 402.822 cv
41.8569 394.579 li
41.6362 394.254 41.4858 393.904 41.3999 393.545 cv
cp
f
63.4678 366.619 mo
63.2153 366.441 62.8657 366.501 62.6846 366.754 cv
46.0928 390.183 li
46.4077 390.381 46.6865 390.633 46.9248 390.946 cv
63.5996 367.401 li
63.7793 367.148 63.7188 366.8 63.4678 366.619 cv
cp
f
28.4561 381.785 mo
28.1279 381.483 27.8452 381.453 27.7446 381.571 cv
27.6436 381.688 27.855 382.638 27.9146 382.798 cv
27.9756 382.954 28.1196 383.923 28.1211 384.08 cv
28.123 384.241 28.1729 384.643 28.2949 384.73 cv
28.3755 384.79 28.5913 384.663 28.6133 384.374 cv
28.6323 384.088 28.5435 383.356 28.5571 383.125 cv
28.5708 382.893 28.7866 382.087 28.4561 381.785 cv
cp
.180392 .180392 .180392 rgb
f
28.6709 379.111 mo
28.7432 379.01 28.8999 378.809 28.6958 378.581 cv
28.4912 378.36 28.3423 378.208 28.188 378.267 cv
28.0332 378.329 27.979 378.791 27.792 379.117 cv
27.7437 379.201 27.6177 379.396 27.457 379.646 cv
27.3003 379.449 li
27.1108 379.131 26.7217 378.829 26.5493 378.878 cv
26.3745 378.927 25.7832 379.649 26.9893 380.379 cv
26.5796 381.018 26.166 381.67 26.1606 381.742 cv
26.1606 381.742 26.7808 382.152 26.9209 382.038 cv
27.0288 381.951 27.4458 381.179 27.6611 380.774 cv
28.6733 381.368 29.5859 381.912 29.5845 382.233 cv
29.5845 382.453 29.5981 382.461 29.3711 382.737 cv
29.3711 382.737 29.9941 383.075 30.3091 382.563 cv
30.6309 382.051 29.8301 381.397 29.0972 380.892 cv
28.7441 380.649 28.3584 380.382 28.0308 380.132 cv
28.2759 379.736 28.6235 379.173 28.6709 379.111 cv
cp
f
28.3125 376.865 mo
27.0039 377.728 23.5693 377.81 23.5693 377.81 cv
24.8848 378.579 25.4395 381.513 25.2261 382.367 cv
25.0122 383.221 25.1001 383.749 25.2896 383.794 cv
25.4814 383.832 25.6802 383.276 25.7261 382.185 cv
25.769 381.088 25.2407 378.511 25.2407 378.511 cv
28.5352 378.146 29.1396 377.596 29.4604 377.228 cv
29.7832 376.859 29.8872 376.062 29.8872 376.062 cv
29.8872 376.062 29.623 376.003 28.3125 376.865 cv
cp
f
22.2026 378.95 mo
22.2026 378.95 23.3428 379.465 23.5391 379.404 cv
23.7334 379.346 23.6787 378.722 23.6787 378.722 cv
23.3403 378.849 22.5903 378.443 22.5903 378.443 cv
23.7178 376.3 li
24.5747 377.254 li
25.043 377.04 li
24.0806 375.766 li
24.0806 375.766 25.2935 373.785 25.4038 373.651 cv
25.5195 373.517 25.1045 373.033 24.7822 372.834 cv
24.4614 372.634 24.375 373.166 24.3105 373.497 cv
24.2476 373.833 23.4927 375.281 23.4927 375.281 cv
22.6118 374.132 li
22.0054 374.719 22.1445 375.371 22.1445 375.371 cv
22.4761 375.371 23.2061 375.875 23.2061 375.875 cv
21.9238 378.039 li
20.6284 377.178 li
20.4082 377.186 20.1172 378.726 20.4521 378.584 cv
20.7847 378.442 21.5469 378.689 21.5469 378.689 cv
21.5469 378.689 20.3921 380.32 20.293 380.521 cv
20.1943 380.728 20.4331 380.851 20.9673 380.938 cv
21.4985 381.029 22.2026 378.95 22.2026 378.95 cv
cp
f
28.6982 380.224 mo
28.6982 380.224 29.0947 380.411 29.5918 380.09 cv
30.0918 379.775 31.1006 379.813 31.3906 379.898 cv
31.6841 379.981 32.0635 379.809 31.9355 379.486 cv
31.8018 379.165 31.1885 378.48 28.6982 380.224 cv
cp
f
26.8926 393.545 mo
26.4517 393.479 26.2002 393.614 26.1841 393.771 cv
26.166 393.923 26.8765 394.587 27.0146 394.686 cv
27.1519 394.781 27.8179 395.503 27.9082 395.63 cv
28.0005 395.761 28.27 396.068 28.4136 396.07 cv
28.521 396.074 28.6255 395.846 28.4795 395.596 cv
28.3335 395.348 27.8486 394.793 27.7314 394.595 cv
27.6123 394.395 27.3325 393.605 26.8926 393.545 cv
cp
f
25.562 391.216 mo
25.5698 391.09 25.5859 390.834 25.2896 390.764 cv
24.9941 390.694 24.7827 390.652 24.6914 390.789 cv
24.6011 390.927 24.8125 391.338 24.8408 391.716 cv
24.8472 391.812 24.8545 392.042 24.8618 392.339 cv
24.7642 392.318 24.6802 392.296 24.6226 392.268 cv
24.2837 392.106 23.7944 392.076 23.6792 392.216 cv
23.564 392.353 23.4839 393.286 24.8877 393.206 cv
24.9102 393.97 24.9375 394.737 24.9727 394.804 cv
24.9727 394.804 25.7168 394.792 25.7676 394.615 cv
25.8066 394.486 25.7168 393.612 25.665 393.158 cv
26.8369 393.075 27.8984 393.014 28.0767 393.279 cv
28.1992 393.462 28.2188 393.461 28.1841 393.814 cv
28.1841 393.814 28.8877 393.746 28.8628 393.144 cv
28.8379 392.541 27.8096 392.447 26.9194 392.445 cv
26.4917 392.445 26.0225 392.441 25.6104 392.417 cv
25.5898 391.954 25.5591 391.293 25.562 391.216 cv
cp
f
24.0039 389.56 mo
23.4087 391.011 20.6147 393.009 20.6147 393.009 cv
22.1362 392.905 24.2485 395.02 24.5527 395.844 cv
24.8579 396.673 25.2256 397.057 25.4077 396.985 cv
25.5889 396.91 25.4395 396.34 24.8604 395.412 cv
24.2817 394.484 22.3945 392.649 22.3945 392.649 cv
24.9102 390.494 25.0952 389.696 25.1572 389.214 cv
25.2168 388.727 24.8545 388.007 24.8545 388.007 cv
24.8545 388.007 24.6016 388.108 24.0039 389.56 cv
cp
f
20.1255 394.722 mo
20.1255 394.722 21.3643 394.506 21.4893 394.347 cv
21.6167 394.187 21.2178 393.704 21.2178 393.704 cv
21.0098 393.998 20.1616 394.084 20.1616 394.084 cv
19.8887 391.681 li
21.1353 391.985 li
21.3999 391.547 li
19.8877 391.034 li
19.8877 391.034 19.7754 388.713 19.7915 388.54 cv
19.8091 388.362 19.1924 388.2 18.8164 388.215 cv
18.439 388.23 18.6655 388.722 18.8013 389.034 cv
18.9351 389.345 19.126 390.963 19.126 390.963 cv
17.7539 390.509 li
17.5845 391.338 18.0659 391.797 18.0659 391.797 cv
18.3374 391.611 19.2266 391.616 19.2266 391.616 cv
19.3833 394.13 li
17.8325 394.144 li
17.6494 394.272 18.2813 395.713 18.4761 395.406 cv
18.6714 395.101 19.438 394.873 19.438 394.873 cv
19.438 394.873 19.4023 396.874 19.437 397.097 cv
19.4712 397.321 19.7378 397.289 20.2275 397.062 cv
20.7144 396.838 20.1255 394.722 20.1255 394.722 cv
cp
f
26.2129 392.118 mo
26.2129 392.118 26.6479 392.049 26.8789 391.505 cv
27.1113 390.962 27.9692 390.425 28.2563 390.331 cv
28.5439 390.236 28.7607 389.878 28.4712 389.686 cv
28.1841 389.495 27.2886 389.276 26.2129 392.118 cv
cp
f
39.1025 374.15 mo
38.9209 373.741 38.9814 373.465 39.1279 373.407 cv
39.2729 373.349 40.1016 373.854 40.2334 373.962 cv
40.3623 374.068 41.2368 374.516 41.3828 374.567 cv
41.5322 374.621 41.8984 374.797 41.9438 374.938 cv
41.9756 375.038 41.7847 375.2 41.5039 375.13 cv
41.2256 375.056 40.5601 374.736 40.3389 374.675 cv
40.1128 374.614 39.2773 374.559 39.1025 374.15 cv
cp
f
36.4995 373.496 mo
36.3799 373.534 36.1382 373.615 35.9897 373.352 cv
35.8467 373.084 35.7495 372.896 35.855 372.769 cv
35.9634 372.644 36.4165 372.737 36.7886 372.664 cv
36.8818 372.644 37.1079 372.59 37.3965 372.519 cv
37.2598 372.304 li
37.0186 372.026 36.8584 371.562 36.9595 371.412 cv
37.0591 371.263 37.938 370.935 38.2378 372.309 cv
38.9771 372.125 39.7271 371.943 39.7983 371.961 cv
39.7983 371.961 39.9873 372.681 39.8306 372.779 cv
39.7163 372.851 38.8501 372.998 38.3999 373.071 cv
38.6353 374.224 38.8608 375.261 39.1631 375.359 cv
39.3711 375.431 39.3765 375.448 39.7109 375.322 cv
39.7109 375.322 39.8315 376.021 39.2417 376.157 cv
38.6538 376.292 38.293 375.326 38.0508 374.472 cv
37.9355 374.059 37.8027 373.609 37.6729 373.219 cv
37.2188 373.323 36.5747 373.47 36.4995 373.496 cv
cp
f
34.4878 372.438 mo
35.7231 371.475 36.8994 368.247 36.8994 368.247 cv
37.2095 369.741 39.8125 371.207 40.689 371.276 cv
41.5664 371.349 42.0366 371.603 42.0166 371.794 cv
41.9922 371.989 41.4028 371.999 40.355 371.692 cv
39.3037 371.383 37.0317 370.054 37.0317 370.054 cv
35.6294 373.058 34.9111 373.454 34.4629 373.642 cv
34.0132 373.828 33.2197 373.671 33.2197 373.671 cv
33.2197 373.671 33.249 373.401 34.4878 372.438 cv
cp
f
35.1846 367.285 mo
37.6499 366.761 li
37.2461 365.26 li
37.3223 365.052 38.8765 365.271 38.6377 365.542 cv
38.3936 365.812 38.3823 366.614 38.3823 366.614 cv
38.3823 366.614 40.2949 366.042 40.5215 366.016 cv
40.7466 365.984 40.7881 366.254 40.7021 366.784 cv
40.6157 367.319 38.4204 367.319 38.4204 367.319 cv
38.4204 367.319 38.542 368.563 38.4233 368.729 cv
38.3052 368.896 37.7295 368.642 37.7295 368.642 cv
37.96 368.362 37.8169 367.522 37.8169 367.522 cv
35.4238 367.904 li
36.0547 369.021 li
35.7017 369.396 li
34.8022 368.075 li
34.8022 368.075 32.5386 368.592 32.376 368.652 cv
32.2109 368.717 31.8857 368.167 31.8003 367.8 cv
31.7139 367.431 32.248 367.521 32.5825 367.566 cv
32.9214 367.613 34.5332 367.361 34.5332 367.361 cv
33.7271 366.163 li
34.4761 365.773 35.0479 366.115 35.0479 366.115 cv
34.9419 366.427 35.1846 367.285 35.1846 367.285 cv
cp
f
37.543 373.879 mo
37.543 373.879 37.5933 374.314 37.1338 374.685 cv
36.6753 375.056 36.3867 376.022 36.3716 376.326 cv
36.3579 376.63 36.0698 376.934 35.8081 376.707 cv
35.5469 376.48 35.0938 375.679 37.543 373.879 cv
cp
f
50.7412 376.438 mo
50.8203 376.003 51.0288 375.806 51.1807 375.841 cv
51.3325 375.873 51.7373 376.759 51.7817 376.923 cv
51.8301 377.084 52.2993 377.944 52.3921 378.069 cv
52.4849 378.199 52.688 378.552 52.647 378.69 cv
52.6143 378.792 52.3677 378.817 52.1753 378.602 cv
51.9878 378.385 51.6191 377.746 51.4668 377.569 cv
51.3159 377.393 50.6592 376.875 50.7412 376.438 cv
cp
f
48.9609 374.432 mo
48.8408 374.401 48.5908 374.331 48.6216 374.028 cv
48.6504 373.727 48.6792 373.514 48.8359 373.472 cv
48.9941 373.428 49.3164 373.762 49.6646 373.91 cv
49.7573 373.944 49.9712 374.029 50.2515 374.13 cv
50.2622 374.029 50.2681 373.942 50.2583 373.878 cv
50.2163 373.509 50.3467 373.035 50.5117 372.971 cv
50.6807 372.905 51.5889 373.126 51.0659 374.434 cv
51.7798 374.698 52.498 374.969 52.5479 375.024 cv
52.5479 375.024 52.2988 375.723 52.1147 375.719 cv
51.9814 375.716 51.1831 375.347 50.7656 375.154 cv
50.3149 376.238 49.9155 377.223 50.1104 377.475 cv
50.2432 377.651 50.2378 377.668 50.5845 377.749 cv
50.5845 377.749 50.292 378.396 49.7285 378.176 cv
49.165 377.959 49.4097 376.955 49.6924 376.114 cv
49.8286 375.706 49.9712 375.262 50.0859 374.864 cv
49.6533 374.695 49.0347 374.452 48.9609 374.432 cv
cp
f
47.8921 372.426 mo
49.4556 372.326 52.25 370.324 52.25 370.324 cv
51.6606 371.728 52.9854 374.407 53.6704 374.962 cv
54.356 375.514 54.6016 375.987 54.4731 376.134 cv
54.3477 376.282 53.8545 375.958 53.1641 375.113 cv
52.4683 374.266 51.3364 371.889 51.3364 371.889 cv
48.4849 373.583 47.6724 373.505 47.1963 373.405 cv
46.7163 373.308 46.1479 372.733 46.1479 372.733 cv
46.1479 372.733 46.3281 372.527 47.8921 372.426 cv
cp
f
54.0254 370.41 mo
54.0254 370.41 53.4263 371.511 53.2349 371.58 cv
53.041 371.649 52.709 371.116 52.709 371.116 cv
53.0571 371.013 53.4106 370.236 53.4106 370.236 cv
51.2207 369.208 li
51.1123 370.486 li
50.6079 370.594 li
50.6108 368.999 li
50.6108 368.999 48.4453 368.15 48.2764 368.111 cv
48.1064 368.066 48.1455 367.432 48.2803 367.081 cv
48.417 366.727 48.8076 367.101 49.061 367.327 cv
49.314 367.558 50.7871 368.256 50.7871 368.256 cv
50.7969 366.813 li
51.6377 366.915 51.9165 367.519 51.9165 367.519 cv
51.6538 367.718 51.3706 368.562 51.3706 368.562 cv
53.7017 369.515 li
54.2134 368.049 li
54.395 367.92 55.5542 368.977 55.2036 369.063 cv
54.8516 369.149 54.3901 369.806 54.3901 369.806 cv
54.3901 369.806 56.2959 370.413 56.4941 370.515 cv
56.6987 370.621 56.5835 370.862 56.2104 371.254 cv
55.8408 371.645 54.0254 370.41 54.0254 370.41 cv
cp
f
49.6079 375.34 mo
49.6079 375.34 49.4023 375.728 48.8145 375.774 cv
48.2251 375.818 47.4434 376.457 47.2588 376.699 cv
47.0791 376.943 46.6689 377.036 46.5796 376.698 cv
46.4897 376.364 46.5708 375.446 49.6079 375.34 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.2
%%For: (lena) ()
%%Title: (1506.i029.006.P.m005.c26.beauty icons set.eps)
%%CreationDate: 6/30/2015 8:33 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9=Qe+!7Ff@Bn_mSG&!^&W#lg<r<]5kfu$`'?r'Anb'0&'o0DB1A%94&07rS0T(EkENoNAW8PDN2/OZMOe1fhIrMr49)DF
%F=Xh4kYBFMo\>mI?GC[HcI9dahiCd[CRUu+9foO=Q3u0M]W/"(9]!)=\T4T+D#*J7I]l]Aqu'Ejg$/1]F/>L841FOH_&Y3'c>PU&
%5B=`?=1`uq$JX]_[F+WISR0JYjK-!\(\M9apf/E-Jd1^+?+5m(>B&iR*t4fXco+q>F7>tR^Cm\I=o**qT/HItSi:>)g7O\9C15k+
%9cs4;O55?+eoN=*-+K?nqkr;T3FM="Ksfk)?oa!:XQ9)dGbn23=n!W#MS]buV)lEr;:\_E0<@).%DQ[=4_M"nm-g;2*?(td.65;!
%gDYQ,*I.Zl=e\[N#TifDDUTR"1k?RhOpQ1uJ)h]G1<]c!>dG-3:7Q&l=7`<R=ufOCQW+3m=Gk7n$)cPXhXH#rkFVNVh='l:/bB7&
%NW6i])('N3iKk(09u$G&h&*rs=`ho"'=-Alqb7&LI(\2*BSn*Ll!IcWaQoDm"2ND]F,9FmSoYTcn&;N=j8JT^qc*QX]rp6VlFa!S
%!ZLAY$5Q@/V<&];'GKWk<7@#m;7).?j27To)lI?kE,i)53,>nQf,U/`92dj>53Xri+dUjO$MFu2OE[N#?1C/J-U9g3pheDu<BDi#
%9),RMG7X5oQ$0jjC#SRUnRiFf]a[BVm%!UXi=EL)9anWR(:nJ_U&to_g=YofCG4='kBOa%KUYb`SRH`SIG25\D5gA#SG5,.<mT*s
%]?@`2q?_XInSd9"FI/mf%s.t#*]ELb=1"%"Bn"P@pto-)G8("V3V^XFs"1_eIk;\T_uI0-@r56"hu./bMshHhF'cJMHfOe1C&5-m
%o\*V)7lPn'.lZEq'n4%X$iX>VO9H.5n@rhX_hQEbi'Z.kJT'!+g.ch`:?+G.`e-iReSRRaY$W-p6W>E5@;5u1<gm+'L8pdcODd:k
%GOcJtcnK/HF9J_gJAQ(Y632$c%^!uoW8WA``Pu&>Z#)k_gWelB(j2aCp]'c]NeB>N#8,t)li#_55Lj?V;?u`q.I%.:`*S^@i!t7F
%:--Wh^IA*!H!b+3TIq)?(g%[u:aP<]CC7f(nE$IN;d%`9)&$qe\SrIc<K5No+:WeE<1l$5a&6=aZCkNNYK[9_2sd1"N]N`nmglk(
%LKHj;_<F=G!YGn$OK!oNB%'G(6sq&3Da4k5rhI/.3AoM/a$>W,O;c>hc[0$iRa&iTcg./]C4@!!9bI[t,j5kB20e!^:Jq?dSI"#<
%rha.,256<pPcDN<M0%'_RmDu7O$P<6NZn04*tg1:Cr)Vu2@@N_7UCA:3m(T$Y#91g3#a*A-e:<Ui=0Pb\Xg`3cg*Id.=qeeqR"WS
%br^,/C^b\<Wn$=;(dduT6c,XS+^lM66<au9a+gWm_dPLJ@o+jj"`eHsZ>++8MJ]oDPFbioJF:"?>C+h;HS*T#cM/^4aPeG%QU,iH
%ElInJCEK]dgUqu0q88h,Me]>,Z(an1L_Nc%B[N'%'bm,R-R^T#Koo9/;ITf5/FucuV2BtN;LC;N3Yd:)8]@E5;fS`MY$Y*8:l84E
%<6A/i:o[V'>h11tJ.0p9.M`^;MF5@:;UD(*X[o8kV$s1eV5dO0YjcZ1(f3mU2A?CR$`*j"#c.[#%&K\"%%%nL<WiM3M@\^e1b:%5
%'F0L'V$Nn#V/0,(</i@.XjKe7\qqN`FJ+/hA\)Ki/3t^PWL-\l8lMKg5RQ/JAQnkK//LnZ9$o+S.9dN8<LQ)d6-%8<-Xa)oe$a)I
%G,VoI$?d"RaY#r[fN#Nj'?u8;6ZAaRe/?<$7i]Ql$;cUTaXKTV>efE#S>oL6`)*FH3(*bH8]?:J3%k(Bg`i#H>Gb;L;T1snKMr:X
%F8[$TMaM;WJH7/1BE]>^>_#9Nlr/R8Jl:a-6D]QnTd)pk,.(J%JjL,PUhM6G6*Y[._'fA07GcR(5q;5".KY@B^ZD+fGc@uhrS"#r
%KD+>tBtPR>.mT$7*5W[EENW]ip]K[gcsiM<aLi\A(Qs&rbSd(7@lQl@9=RlVnd<2\.Y:Frm4/4P&A1=Oi>%k]n.On!Jl<5i\:-$L
%09AH>o*aOpH<%/s?mft'i$L@$$R>bm1!5)Xcud>k"$aR,"P5nj!L+@)"8PCiq$%*aj;_@=3s>;^JU]?`iW^A*Gt<46LB%S<qu].n
%E"h:SJqK;DK4([!JY<_"'jS\?GY#nE9#O:NN/IZp8`D!b^e'WS31QUognYYG-Cg\>7j2ceMOqmhOKU@`_K\_p?U?@i$?@)YIJ0"o
%EjTAars*8q!89A`'%[V`JF3dig4;rl&cD]C?]EDqdh.+t`mF]E]#P;DQ2n96VgEd'Se08]b&mkWo0Q4q/HKPB%Hq-L'Em6-JZcfP
%hBogXM=-:!\gNI<TVc/p("u`F`A6^;L]^c#!J'lt%O':cirGbgTlCQ-J8lW<&J#`;!^QWoc3].n&TRn>dO4%%^u])g_@*MRMeO!-
%cnWOZ"IUbGc4JqE5l5R#+Rt7*d=0[+J"ah@LQD'%-m+e#2mgYNGK?gr^0DG$R.F_*I1=J;)4u%3BBB&UGUVUEJnqrf<t^Q>mO3<(
%dt3YlE]],"*FrMN^F:=M"%rlES'J,XB(Z0(JrXW^X3e^LJh1%>i("])+lkp!OClV;!)P^Z-oNc4U/M6r2&@MCn-S.e7GnAMTR%Vl
%gAtJ0Tp5VnCVX7.d.7X<ab/^c!^d3XaT=q2.%uN*/lb/=WPGqO@&?sB3$,:O(IWYU>V9+#<>[V/JVEMZ7g89]ds`b[93DsBYq2/<
%X;#0@+;Hh5*)W@t>:NZM9O<[Nke(TAW'MTC/NS7W>"*h]]Tf?KZ\TQ4'k5=E]e_ON6=std"BC//>_PRV"nZLaa-kXV#g*AP)eU7[
%+DuW_`=(?_#nRe;.);2]7(!n$0?bJoE,lltddmLXDIQQ>_-'9nNe@[p,SXuA&5eib;2g)HPlXi;J5T#I%6=QI*Phr;,R@3\Tacj1
%&ZnY>b6HXjW(nHi.5XIQ/D0b2ac?KoQNB\oPVjk3/<WLORrjfo.(^1^bR2HOlt2A*T1bPhPAE'I<hfGa\KLW4IO[&939Xq:ZUGL=
%/kKH?Up15h)2V<;M6-bUi8g+oU)0LJ-uL'PpQ=UbK4'd"5m,[<9Ec!*6Ma"T!(@fKTh1_q$POp)oaM?e%u!i\!Y\HU*Mi`mmJs(N
%-(oZ"fRZeDNG9qnGSRN-8tc1u!#UJ*%gt@O!LuM%]h&73XMD3/?r0^V])[?j0/J1Bk[][HI\m+n<aa?K0^Ju$;%Di7(;.]ghPC5h
%;ZN49J.a/qPQL>7LH(k/][)*41uO,r,!("V@(Lo1_Jg^O^fd?E^irf>fbs0i[%G`p7f+(jB=+;YrdTh!NSL)b@ZSBS9&;H@(n[=]
%[p\Q%S\?M@M-jLVFUaN^$>MS"agl^=?,lY%B$24pioA#WokTr"B=W<.e]aPWjjBh<1n/RtT.-)D0W>>#V@J+0al-#W*rZR-PR*D)
%6'Dp/S0B=%;+0>2&<\%:B)mFS7?`q#_+@:dJiak]q2faBq-bQl2b%hXkifoh3fNQqb=@Yc6*;@_,X>+V<T7V%:5H!P"n%+SU^2Ao
%7o_g5<"pNH6'1166/"_g/BfH),U5o(9-Cr(&S=la9SX9/qYp\4b/@F+iXEpB#um!6R)_Uh.XD:#&hR&/TKmraLWIsj&iD)aJ4-E#
%I&IUMQAA@q'\%eR;o$6shkE\;9q@*+P:b-TKa>.]cHp#c^+Qr$YkouqMN?^dUS*K2Ug3#tfeS\3M,/8F8DE67>t3`fGN\6Zjr0@C
%(53#8";[,JKa3[,S!]lXo*r!6[lH7KL`m>^<1$UQ29A)0,5G[^/fApHY&59lkO+Y`Ydn_>LEUg[fEh)\L4T+sLV-2p81q1u5N_Nl
%(?;Qm^ZD9NGF;&;%uiuo-Dc5*7?KeY&E?;J&HkQ)L$F4FQW%T`V]hn&@[-.sZ"]DcaGc#%#dqeV1o/ccAn<-C1^gP:,Z]159F0)k
%q2q()[3JYO,m[I9[3X@T;OrVW2.Z5Le6Cn]bNQE+IV_<d(a(NCT]J"(c8HuAj"dOm!X[\&1ouf&XTh`ETjsbFOHM1.`t:oR&6$r]
%9Z`tm?;NEdan9EM2<t9#F%U%uo[-8rbu%*!K>F(PJPp>6E'-bEUXYi&fb/E0'dQYc)_7G]7nNi*#H9])F?Pr,V%TQqJ(s'*d!cU-
%-W@GoaPK_pO3kBN`XN#1PA%YF($#Y6F%)KF*baGm.6aDJ+eRd/0@XT'o*3UU`p''?2+VGT6HaI(bA)s6hVaX%1<TVcg/fTn3i%8!
%A2?)Id(^_<D4l<B/),&(?4`8^huJ]@BL/k#iTbVTNW\[(P2%*Gs.klTV#O<G2b@;AV7@KY63#I@rK#*B:B*TVc5;s5:9nN>s3%cF
%VELC?BZM]7]U-`FGKECba>hf!*%)u$RGSLBgH&"Mg'T-6*=cc\"s=2Y9,`0a\;(066&00V!i6]iW\$J>%0jBP[-@^\U"Ih&a=BN*
%"e[oP3<P@8!=C=hK)mP@kfNl>;i#I]`liI0SS/,iU;WlO;?=p*Ttd>7@rb=P31?>0TbCH7XjlJMbjdU,;hgjK\L@q^NT",mDZ[fZ
%I`^4Va.4WeN5^W=&,_d`+`$V_e"W*'TMdJtTX5l3!mUrV2.N;ib!XB(^`8)q$UK$J8ng=)-0CR5:b#8_E@JP*U&]6l8AEP$`,+ss
%)jYA?U-NcW8B02*;B8EI`T3J>PYfD`C.(ZgQq/SPdfaAA5lscJ4QBV<rUSI+Gfh"%\n)1(;S$_4.Mnu(7$?WHMJsc=[R#cj:Pt8J
%j"-d2lgR:Z3=1Ed^P$<?\s3,)#77eH19F*BALY!N4NgZ8N?Cr]-cfW/(8SuK8o0Rp>:ilI1nlZn+chK^.N'Ref.D$G,"Tr6>2\@_
%pftR'/m3;@P*;17/IH^a^sskJDfGG'%Q5e?bk::"@(nnBGq@SZI'-hO:jn$XOgta17K[]\0XiiZ5r3^AF%nI^NN%QSIEgS=+PiD0
%M`JA&gKT'8A%]tUg4CLgl,'\H]%TI<F8(%FOI+eqJbqXnes@EVZ![R=(_7FI'?fH5K_1ZPhT0@pU]$/F1YU/g5GS19pA\X0082VF
%ctL:GFri(]&q?,uA*EG<O\T3(X,:cVX?=ne01AOoD>\;H;bLHqWR:!,I<>.[S?Ju67[^pO_NIO$nhP/4d0bf:lRmgoP:4sp),28T
%_/SG[#;'!K$,r92B[)9Sa^S$qjLYB!iZo=\#l`6B?Z%U,mQos%D$DMFA7^:j!s7As4EG>B&EK7G=e7WT$UhE`>G5\iXO9[DUSIC&
%]W/+>/+Z$.#Zg1lgl:J$.s5*_9gFa+kXn"P>)tXfkR=BW!!bms\K2I\@nO_+MHCNC(KV;Sr?FpCCagZp@]YesJJQGD>Ui;K>"lU.
%lXb'>N*n_fEYC.^"mdiT?6eo[#`m/Z^%a;g>777MTE:$bJr2)<>(nX;Z,WL@$AYUZ>WG7''U@*u:e8,HMM`f`6:h3si))@.4q.iT
%M=m9*[RrkiPGLofZ.MZ"VJ_^;FdOFj[#t$J<j8TUI5&lG$Im?Vf9ds;(L(aQo.mVo$5?H$-uMiof2p(p0I&)$.rsV-Jm^2*\AHjR
%V^S2h7'EQ(>G/smDWBVgOg&*t;d;g*<>/8.P7g_[I5]Gl.3[56848H8UILGFj2n8uJJQeS'%_f410GJ!]t[a]m&)tF5`6<E:FN(#
%!\KGCo;gufgnL%[>p8Pe&gf\nWsgY(8r7/I;k\JFl-:nWEOL+$Zd*'R'EnZ0[*"T"=UML*]I]s5o>K_s8]s55)=1st\h#3^Zh.gp
%^s#]D72iKU1`NaH77&d\A3XI:1J_nKAo1!n2b!.H=Q5s'<s'*Rc0QE%:5Zo/6%Ng-Dnf,MU]N+p?N9](3%[bT?A8c1!R"3QD\Xt<
%%$U)\2OfB=$K*OGX\5$r+Dqf]@f!_V7.3"MSdK=r;PY-nNk%G9\sWD%iCWJhh;+eV+.[Fu'V=/f$M*h62D*8"do]4(:ML[`[)H-2
%T#l%poIqpgjNrqJjT'2<EbS[2%a3*)o5mB4Xi</?e0'T8#d0%5f<:;iYUno,Y^@M&7$=,9dX/MaEo@m$/.6,h8c=2UUEB)O$af]`
%D>ZII7Qa_/oUdW4Me)E0XpHMD;t@M/W>^5j>Yq#7g)ekr9EVcB[8fI&WoScBl`f/l<Db#3eaKmjo(uE-[oSg.C@$hfDkaEck&aON
%gXW,JHFe3?FP3spX!ASV]&`#rn)Yo]5PO][JJ$6,r07(14T1tWT6^=/^4*M5Nlc_J%c9=B`4c)cN.SU$GkapJ;k1XrZ3#)>q!sg`
%h[Y&._J@KqojBab^D:X=<@)]X&%9)"n4g'Q(S:H[:%Gp.ABpF\BOSVuk$pp]3r7DJnuW_MY?iB53qK7>^$0^YRkFNbi?S0Hb:nt3
%(T9qIFl?>eM\5a;F`.$@ao29ROoK!UKBia3PoN,f1T"dhX#68aT`hDO6k6`J#).=0Q9MPf5-aHGA8dBbD2m^q$>CUu2i4&@ir6ah
%!Vnb-G<)93\^r%o\h%Du3j_MrUhi\`j]Md*Q9f[?i0"c7=3K:I[#c^[\%9Z:3DSK4&oJl\2WAU"Z,EWaQT9mb9.[r7QIegKo.?`<
%-\T68,_f<pFVH#%1L*^QN9"EZPf75>lRFHCacXn"cl#M+Ekrq7,$lEsJ,%hkZN&q8+-23poWK5f$,;o+hln/[TGZ+".EV]Db4-9:
%MT[DGHq'B9C&DhL<AT/cobV53F<ir(bCo@#q)>03LYk_?h_OFu+tgcLkXlCrWJlbA>j>7M>-(3Q3G%HA*!mOmXAk'96&U*sWT<mo
%^E(G[7O4;\$5Qj-'Z)FmBUPF(#tZO6%)1heL_to:]7jHSL)W5Yc=4RhZ)sM.`KM\chmc&g48(VG0:i/K$GT5Zal,i:9rq(qg^Y'5
%I0(2C=lGr,&DLZRJd>FG=!sB?biE0^;6Z!,E+6&gQRdf9USF7!:97.29GUdQ!R2"q=4k41lEq:HIS0uM^Dc54<lpM92Jds2#Fd7M
%K5:gY>7kG\Yh%oZKIL%:eX.ps$Yt><hGJVDC/(q&Ipkj3\..D9qn_3kn(8O">'%aO"L6ZUjR.r-rD7Oe_;\P$oMnGAE7lb`$BQA#
%P#lqFX1[4F]%AmGe<L(SdP=n>:9i/gg+q9B7BXa*>[cb>$f&9>/O%&>&Cu]B?A)T/X;t^O$*-VL8l]Pe0irpPJd@%^&HY]q85*@.
%X2W*k)j-8pgZ;WPMJW[=emr6:Z?!0@@3l2e$XsZE/PU%c"ra)YM\0c6-FQ8V>FF/l;aVqbe4a[p`n]j\PTlTeKc?R_JhXq^;8Es"
%)!2F1+=:Vk)kf!Q49o*'g(b^g9c%]5;T)_ah=W"^-=X^&b&U#)bY&o?7QG2r?^5nO=<+<U49ZXX]YS2G?H*rJ-7)Aa=p#4g#Pgbr
%.n,(7a/\6=b9&0Ba&ek$;J6UDKiXjTM627rEMZQp8l7&aWK8/+/Ofi";G]+#$<36DRP#,Y*XsoWcBo;Z[%nlN(`fTcaWX,eOgNYp
%S\,hVk8^?9Pb^(GcF#(VQ*1>\'50*o?BD!_r-'<MmP&h]BkT68_KL=m`Pbrb^8"CQ."HnpBYCF^VIqG9/^-l:K$DRBqip4tbX,g/
%SWtr$N)jAD]JHocK7#ImO0\6rZUV"&jdAl6:MdLBVJXYH/S[kc-u]p\+<&Q;Z\]&4`E*+6'SC=;LN4o0Ceu^f6A>A@7a!Ddd3E\+
%jK,:6+"E4Gn6DnH=\s./-6[[KW>Y!`&L*A0HoZDnk*qiBYqg'*N/KT^nZ->_r7<lL9\A-4_Nm%m[]>7%=9C.p2m#[*\gAIY9X5f:
%$q#s%k'&YVQkWQMAK2HSVq#D.lE]Jt:Sl;;`MV'o8Zt[YbGNm%;<&&Zht3-_2mF&099D4!BIP6lEal#d$a^aeoc#PoQ:m6K]Ldk`
%E!nER#6W:S=@2*pm%+iJfnlY5\D7^Wg4Ao1h/l3EG">$dG^ODQQ:(5?6S,6I#2Ze-b9>h[/+FA-DQr/X)=2GhCaL%O!8C&Z["9;m
%["KjO-#jFeo\[$J5h-Q!R)sZKh!UR&1spJ=g*"J"XX:n4[%!djP@QHQg@7.05d4.SHia@.6i7\O/MNf8?qjr.YoAP4LOl3]'Dr"(
%3bEY5"6`'&`D^TZX[Kf.TiXMpM5%j/,EbR7mCGSA<!(B5_I$/!Z'C!WP_Q2/)hEc-;Ph-3YX*ND9t3_o(&jp-ra>&2iC+*%8S7IY
%H'X,58U-Xi?^'t=dD'c/M;W-c%jekc"ZCR0?8=O+Pc5\Ga@gn5Z+XDnUA.[h9dIeP,4DZ'g'UOuY"pab0rd`s\jEnMSe>jj-ZX:F
%:%+kemfFLbC"FCNn<>9'oq/mt:OJ/ra:83:."=sHbZ[]?nVaHF-E`c2SMQF09T?3A)NCC.ami<D0mC-"8rfR1@kgq=>T75hq(Y9X
%>,iG[*$A^jjWLS'"m_i"+[\]4qPhUh>!9*(*IdcRM61p3IOu1D[Dp-f2*'*R&7sB?_Fi3Ud*!DdWtm.U>+mfF.Rd)-B&LL+i2*6o
%^r]o+a[RnF<K+Ra+e)NNQ<49h^uIbHE$\fVO94BG&h]Vt!c=;e.pS+>'O#3(T$]nu@YqB8$*Nf.PN^pMcnXY"PD#tqbd%jVchJ)E
%iZkbKJp]<p7@&s1$62UR&-s;._Q>/jhF30gE&Eh#%5V[aS=mC?W\Y5=%jU555X-n,aadh$Pup\SK(^:GU!']^6X$0q"t;gSi>f@T
%L#\F-5."DtL-TiGHq:1ASDZ-_cr1a,mm<XQFErE``L'A68V2aVMk.Pg@#r$0Nup!A6BaD$=,&tqhT[8%"fNhp6::cdkV]am&SinQ
%>FUc=[36NsFKA*u]8ae8q-HBfBm2g&Z<`do`rQNGN$KJ)FsYIV/D_sIs%LND)g4g]I,hKFM.1J?War)`An#ks+s%Q]#MmK`QoS%2
%J&F:8A_psc2d,9;Q?e[*hIN$5=lrGEH';grA=5AZk"V.eP@`T]R5\:29pU'gA_p\72a8B9AskS\k"V.eo;e9<4Sr_WmL<;`nKYg0
%2=k8Uc"I<AS:_JciUD9cJkV]/'fi1JkMf%c375'g`:728R$@d-TH8@<_uX6\kl@sWF9@Z!'<IK8VjL#1J3a3@*PZ>MH5'I=Z<g_)
%?6WEAMtPIKQ\V2D&?LR$a+DD\%uE0dbeM1L20Ok.&j=26,]kL)pP%dtKI<2/-PC.Kk?!qo1FPnc+e`e--PJL<A0d+ha<q\$;PYQ0
%r=ss`L+@WN5bk\2&WAD]TnV[#7%t>dIQts;8"+^$'On_q,FVsr&nq?WN(4dY&gp5-0/sTJM/LX/4qVIjq*q)_^r6V*oTPea!/_+S
%]#61';O7*$G@g3gRT_>1]-WH>i.3&,N+?jHmQ*O].qs[]OXr+6Nsf-MT1p!TY"sH+I'+TU9,`.WjE7^@X5j]j_s]l,(X(a:6tR_B
%?B'ES=d5P=J![fZe`cbg?_WTi-<fb;1i"\7`MUYp7H6CId]Xd+/@sA?oTu(:(S-t5S&<l9mPU9m;WO9T0r2@?T0rh>TLF,f7(H&l
%$Q-Q4MI#37HqBQoUb.P;/f.U[S5.WmVX#F7^1/ncT,gul70-SF(8JP1E\/Q$0j<$sXXs?&CGGT`pqN(+gFW0Y?;g9E%)jopQXkLj
%gL:K?R:Mp97K+W:DI[NABQ:m1CfN&r!_h<^/bgUZM3bM==#$ro7LQSjE4+\#/^Cj-/WRN2U=c5p]K9'8+3PacAWTO[UOO\I1ign&
%+7k0`fh^1.emd4i04uD'bsA55qi]6A(sPF.AX(/SOb9/Z>2(:`Pm&Nok`MCr0Y;/daUQk*"W>HF7leXg(4"%LO)d9DVAYu]:e`p]
%!A%_%O*#ULZH0B$b/&84o'$Tqiopoki:I59e#`%4@$1I.5JP#Dc>Se>E!Z#Y_\4!uIWDm<dWKf9Tb(bpQ;aF8+J%OXX4I]@*4U#G
%#B%aW%Yg2o)eR.mkh!!aTB@?f@AfXYODporSOP$"l4?&/+j_BcL,&L7#:S"AZ_>APO-;tA-0*9qYXNHUe<:pd:4(pp9VVcG#[4n=
%\IXNE5[7'.^17`NBGS4DSAbsib1f1Bk-<*65`]gO*1CP,O;k,aQZLl+0h8P'XiUL8c:Di"OPe?-3gDq+d7eaZA[-(G8B-"<oa^U/
%c[FD;OmmO)pNJDkX@TUmXEZgi))#XC7s!bO\an.,H2cc8[mWkoD')3o;3tPGX:4[djdb#ofsCObCtTpM+#mX&?-:G7/b[iV6jpBc
%,\6QqQ]Ye)'1rj?/>am'_jt&*`UMJ$q9Z*%j\\D4f*fRl;UkQF<=m:<+H0\C`42'Da_N'"OXq+_%=oM&?^')0n5;e^(D0pliC#G-
%_Y"N#^l"q1'%0qi.In$W0+hDG_=RPhR)rZkPW7'U@\jnnO`_E/eJ4j[/E3]^m!,rpf-96*0Tt!r,d#4N9-gA_I?Gh:lBlgmOqcZh
%_b"<Q4%;k`%!=BZ;j.'Ed?;dB3Q>hQX<nhRRn[8h`Xsu@GIYtdP-2e!kuC@4d8e^TE_7CS&50upV-L6J'`=](NapI[]bXG.NCQZV
%Y+_kPg\q+X47%>G"kQ#,\1Opn5\I>296"e'*uHOebAcs.i@8$@@5,?Tp],*PJY2G%ZjH7EC/OWL"e*FLMWO+M*Ou?TbJ@J@iJ1nn
%VLu>m4Gh6j%9Q)q4298FHi("-Y[RQoM)+E^2,CgS-g+$%IUdh+o/Gi&21KOnn9r&94k.VmDgST3msD/f"8J=lnTA<&0)d@BWfr'Y
%Z#?/K'#P0AJ5B@(F;gFB!F$e/Q7>[c6mmmplA]F[Q2)jrRRi71';c+Y5#e1[7196C.iKpYI"]KMMbkYQd1dfEd89*92m?+CLn#VE
%0)mF^IZP7*Ln(fg,6oOjjGqm7)A^X:'3SgRhUlN(=CU\8=a#0=KQm`/UqqYl)YZ_cUh#ql1f91:<g[OB-$-ODq58n$8g2sjrIk'I
%N7]cUCa48a!Q5K;GU\u&Mg%j!k8VL3Q=D'A32U'mCb'c?cWgU30HsKhqe^<_1H1f`rt_0+a`O]*:N?k%KLqtC.JQ(FMBCpc6:mSm
%p>I=D:m?6&?nu.W'O0Q@(:]$%,F*gF?#Fsjgmladk"+#fnOF3-$G9*Ro#ce\6IDC3pc4d*'.ZtL;NR1h3A6dF7Q=Y+K10f](9@B&
%Rcn5:cliHq%(Mca\j_-KSBD\9?V9*jN"<0;\^k4;E^nM('=5):o41A_Z;VR-!sc_,Bh++i:CJ-gQg]f/N3@Djr4HE=8,U#6p-Y5,
%/`Ag_Ih,RKYrk?93KGkW79JJ@G=4'W*?5J#A/#)@2hK7?4if8bMjdJ,8L9H2oKAYh)Bo'@"ZXph=\Y!maZ2JhMGWEWJIs:7>V-5G
%!i?SEK,##&A;*F73ad$>.-JP>e"Qp6?OXl&+T*UDrj]`c&bZO*5*?O$M>?Bbi@,O$8g6D4k+Np,V=7B-1cQ<1T`G*Cid4'ora%t,
%-+Gfq%p7q$>JDc&V7(W@IN>XW1d4i<$+P$RU=7uf2;3[PqeU+D<\`Ysf<;mOdQLT=2\07[WA^1I+4/t4n3+5j^Y\DH]]djnqHe'h
%#)uC4li!>oCEp=\:TN0'Rqpkgctf-[#C_._[gEiX]q-%D;`enSlTN!W272.kD,>/&S+t=fB@j&N97S72Q?*QHU!`R:[*j0%3TRTn
%rPmOd?q``5USo+'5ZD!ZCN+_Zl@\[Bd-u@f!iE2M>\J<,]jl1G8<%p&Gd,VtJ4VOM5?#AeF1ss8-NseUbRT<Oa]H58.!C@43cqXZ
%):r.#U/U&WYM+t%56Ykcg8jI'R5^]s)"p^Z9tt!*ViM=7C?i#+NR&$+l(I\HrihfFabu%_!_8^i97,=FWsu`1IN"`A/'eR"G3<hk
%(t?Ps,mgqBeN7M&;o'6K4Yt*G=3ToZSToRtg@N&gJb%5[Jlqu9b[qgtl6HY41J.U[)UjeZ5'\43Qpijcj(L*?Amh`DiS%^QfW4h@
%aEPrL[58Gk!bccHN:!8@7&TAF]KrH^!gKqSN9R1gBluN9`ZQ;4r2!_]Z80)q&'FlcDBgt!jq+%O1ZaS>Pflb2b`r"6#3iMXJS*ee
%d:r5/@kJ@\=W;E2(h.+$c'L/O_B#&tEg\MGflEK4Qe?DoB`&]KbEbd)cJmJs7K:!W4?WB'SKCoW34Gbj!Lk\^&F$=.7C79+`$AF%
%'p+b0c/CXBIRQu%rh*Tk^Ge:A:F^u^Y!->Ii/'DZpD[GN3.BH@>Am7k5P6iqYWbE$Qj/:%/?h<*cW3*4T6p"V3Bcd,K*g&sRlkMQ
%[(]&7/L6T?;&.)e^07Gfl)jtF+)eVV)"Z'c)W)[@Q]]R3J^Nr_[CtNYr)uMAT-F</5O=qe2?0oCV8KZ2opJs+8d`@A2MY#1=8AcK
%C&@9Sdl%!CbQ(<I?`DNB&%kQO(I#-t"pYuNn<lI0s%>'ps-o_LW29Z,hG%B6'bl/K#6%gf`dXi5*pf]oE39,QDB*[ph;N[t67P-b
%oF&lkA0A:3OJt;@3^d,8@idWq$F+P):=kW+""VV'ZdQWCc2eQ/_3f"dnj6+SK0J0HU_+adM]kCK?5d.X3-hhbf_6:o%B2c1MI*J@
%3,eVF2"U=2(64;d"CK0tHPth4jb3'u]e^a#EZqi]oGlq,cGs;Z7@*&!AbdU'UL(&RT2MT9/G=JkIjsAEo:P$+$J4Fs^R5.XCu*+j
%YM2nF.2I3hAhCnW,9eV_eip\q=]m1]=<+[6$?5]bUZnUH@9>q(EjsN`Sp-WoZP8"*%aC*9`Q#%^o=@OekL(pPad?/L]RJOC\,uK1
%W><@q43pM2Dcn'WonV/Bb`]aX3",Ee/rWS[=`[C)Bb\R@U%K,8be8ao,',]tTRap<-Q<bq5eCibJf+ofEVV1AhPJJKT5FFO.LnE;
%#p`S>FJ_=(`=\XiJ=1c3=\'-D.\1qR[bj4>Rslr[I6[SLXPc02&WF:`I%ubH=PAuYrGL)bq(9?Ef_)f`.<8T51m]E9[Le`7*aQQR
%DWIi:q)TO(qO0m_',B]!,L3u]9&W]Q*#\F)2m]##O"90ui8$su@_VYBWk"LDl:>?!0+N-#!+tXV\2:6ns+N$tk)J(i;eC`S2O_m4
%)*?(\C(oX'^[*Sh6]KO(8Q`Z/JRYJVV4M:C)HLX6WU@.FBr/WsW]%3J8>0sGdV.C+ftlT(Is=1VTG<9PJ_*ODQrqU9JWtar97R1!
%ImGb^"YWo+<^=)Tm1]u_X4;s,iIhnu#\6ip=b5,paV7MO=hWZ/1qol>/#YKZW1&^Sn"j,K;tHHch+jCr&5q&H=r(GVd7T*uX+./T
%=(#OH2(-R8R0s,!G*Og[dK$U%mY`V0AY/h+WA&,UC&KMmU8.g%rgbbmh"b)&$AWIn;Gj`P&*I3qUeiWZ,SqaAO.6/SPcGriY>QuF
%)IV]6G\4K7=Y@jeLn(N:Mk^1UE`#_S`4;43="+q3%5<_"bZXRCPZ2]YpXF2JE`(6b1\VgCSE-Cq6Bl'oF)"V3kU!aY/E_&Y2pY-^
%\X(LYipF7\3"tg`HSN\b>cIZ0$er^5g:u\C%ss*J;1>A3pasW`5?D\hl"l]SN3E0m?aDN%Q=:+T^6\;sN3=f9?`WhW8uAb&lInA,
%2'7r;j(]H5],XnqPdO1fbIC`qeZK6\P9WE71PftqgQ83JK)\dM0I*@9PEDDu;2QO<a=&:.3#V*BrpcKT:%.98+'plbS#m!]S=(QG
%Oj2lOWh`%^m]<)(c5'#,83O`<)7qLbgUq*0TVuR4=b,=4Y2G<`C/3U3PalL*^If"8hgk1bG6;aDY#&GKUL!Ui)t!19fLDaAl[+8)
%.X[KGc3gpmOt>AX,mgkna-XOD<POH=^.\dsC@CpQDlV483iMNneUcK`PJj('S@Q,A1AA[1n:4/b?06T)GtPrAGBR$Q[(;elkb`^E
%'^+1'$sOZ4mL('L.uELo81p"@2g-q$%k(3Y<goFp,R"V:@S.4LN#>gU.:=!ZaqTCmT5PRp#a(#_b)f82`cEdH0.0F/8iC"P4USl/
%@rU;q#AH$"s0Rkm`'D6eOZ$G.Q`]nLMtla@fLmrWs$e-TikL<pPJr$Xq![<e[]:5E-#SPO?qo<FaZ6\pD\hrh@_Q!h2`p,2c98jD
%b]f*G5?Z3S$oD,22iEcXJ5L6TSds5>,-iopT,OH7B)sG$S/g0ZV[_c`43dDV4>AAMIeq<$kJqZURuOcG!E<1%i?#0O+H/N=a4&(B
%jY5e)$'EptZYNL\V.&g,<:R>'7B<>N9CjJ?1(W'.HH<81q6jAO6cK8E``^X^gDce\q&><:]lDWVptk3krP:tLYA\N/?@-K^.W_0*
%Q0TudT[*IJRK"i0TD\d(HBJ/=WfnVFir-(.)@jb-EYh"t;0,c?Au,LJDo/]BSf4TrN86>P#$HdEaP(9qRo3j1lOK79$]4RY`+@He
%qDAgb]rRDs&)-/Gp-nleB)DK-`Y#ZM:D\,^<*llX7qMs5$J?VLHO2XhkTcMU-$-_0NgKctj+Y*JR,`mI@EAJ33F4J]9BLK@*&!`?
%-$-^MK]Amh_(W&aOoERU'TgPrlGt,-GS]"cFOc],?HSOt3QAAL-K]:gmCXb^AXcE<#n6F>fgH_qk'aRmoN@gX0,:\E.3?aR@,GaY
%F\=B^:s:hcQtPBFmDLh'_D0f%Bg.41--`O%(Qdkbb/26>C^6j;TQ"/SGl&cu2VWX/gO3d:BNj%P5!8T)SKCqmkacORU=<dr[OQbZ
%Fb1;HTOl="B1P-6%Z7?c32r,lbmMM>^bCdi7UZ"(hT:67\Q@td[-nNe)L?iq,tn4P?8bHFh]j!<M`/ASbjO"<#3Kc7raP)!E@*!<
%ckaGa;g%3IF::>,dq'!m'k\i_<$Mi358s2oR<?1!XFLVZkGth,nX=3iR$okcm0o97F?lX!DeH$)Aq#]_O0R>d$nLpZbd@N=>QI&Y
%)Ak4o`nXb/R3,p9,]2\aQrc2;q(XWh`e*t?crM34WKLQLhGVYcZP8%6g@K%]YPFpA8<[u;Ssqbp61Zl5WV2+RH"I.H$=D?#fU6H(
%R<s+?B()2^YdF_soKC_O&p!):!S-TX%N9uR3%o0f&V0P7)U26c7;C-U3$k2+5G]$smoOl8\"V]^V6Qk,obWk[?`B$>Y/o`fWR1=F
%f4h(L&?7WM85^H&1$GF\,W`8aibE@sFB/&E9#J]UD1duobI.lV92K3S#5q!"MgmSMSICuQm>L<F]K3ZsUpBOQh<N:o#Pj8lH_h^Y
%WcGK[^/BNg3!ircE&\oJ-@:l&:MD.gc;VI*J<2()/Ufrn0MO-'Zu?'JFG5,4.IqI60/eT&:;#6%gpjUF>OF^abGA]oR5L=6F."nP
%KIN<HpXcLW'V[:fk2lc!baMa`C[MP,LKuW]0#^!dR6<K9p0<J(bKRN@SBK-e-lA@4Q^MnDm2tq7R<,@C=WDMN9rCoSlZm4.H1#O[
%2>%;YF6S4rm((*EkH<NQ$s.74L6N(jkFF'!0Q==G-*mJ(Zi)VbI3n$I-$L\Q..N3hH'Z\?cYS[t)eX7+$jUr.o_M/.X'KQ&fVM?p
%X#1)Gf2K62qLbEb1gXp'DcV+Lo(_O)TqdkA/.*7p&b-X"MLKE7R(7E]VT#`4R*Ld"oP#Dmd[t.UR6u:4%dA9!Dc]?+:43?1_@V4n
%;bcGGn5F-W_gsC^g2pkQ)FH@\`2oX/ELponGa"a_^G\[SaoKF'R,ck0UiKT/;HX?hg9ZA\7:KMOfK8b@ITitMePjVdH'8H4Sml*?
%s#!ut<5Go6k,bGJM!-=)VduXV:<@FkYEU);WU>_qVfID,peJEao'5-!#YC7$c?D']DMEnlAIbhJ(lds`CC:)n9V'q?lib=/ronU[
%IOYeMoT;.7nO."CTqRN2OsrikUD.9#;5P"$n&QZMiIt<iY$-GJV6m!kf?9]?RBnugU2r&lN]\=aBi^Ud6Kh^6MsEl@0]j=/E>oKY
%@*n'UL,>Xc@YU$kI>hV6V;bLueSR2Kqd*d6V6u+GdH`Xok:JpKGo<#hS4A="$-2j<;W_7EVL`14L#XK(XLT./klj[+)`-/,\$Buc
%4il;bKCc,8r#MZE3:lZAHa/YLE<Z++\QYng:YdX7&]K6C>hYoh9U+p#47A]Pj[!r:p,,qX*j4W>?BW#+=/J>X?dhi>W43+\IdVp@
%'6q)Q+m\AOA_(ZL]4RtM4,MPNRn[->mHBE[L!022Qu=0P9;)d=r?`Ct=(.GS^ZT0s#rm;3dK8</;Z?f:1@ZmDZN.7n9;lWI:I42i
%`sFf<>!"`W)0YVm%k`WR$Um-+Q4Y_XnYg.3:X9a?)%t@tP<a%^rEcnZS"]jlhI_#jSYV\0L%%iP\J4QA!r-nApLC#mN4DN&fWH5G
%,TF9d8=$`+9(&^SfolihArUEfeRrL5R3m]NM1\HmO*Y-EJ"#LFKfR*I9.r8lH`tKOoX'<K44tnX4iK3uI:TJkhLA.C.l<``L%D>J
%R&*paSJ98^e:UC8JomopXX_AVG!.enM6<7kl1d]F]aq6l2E#@KHI4rm[,jC$YJ'/J4bqkJD[ta`4Z^[f3`N&%:AeA%2sd1"G.k>.
%k4`nC]fPe*g<CVL>On6-`YfHR]]r@ldsR65F59,G=)E89#KsY?mfISmg4@!=ba9G[T>NiE;gON3"]KqVqN$t-hclH'/+a%$\DqcT
%kj<Z-o:o$pOQ`"=S'>BBdImcnm[`6OG(-+/p&a`7&LXfSms\+1!V-(r],i#S[8]3])XSNF;WUH(cog6/<g+Ue*-elL.?>4WI\S7)
%Wme*])hW/'2inIA^#!/P44A:/rm&VA91`F;j%El3k.O5#`g+dt<;4?;07D>MmA"PI+*CNFs20$_r`TZ@DAhf0A]&F"ri5IW5@`G.
%p4Fj1%1Bo)(`5JP%%9@mqXDAa?4R=VF2=_R(+CrlS\]kalMu4\l0]3M\c^jllT#i"F45m'JW-ioi*pelfF";HK*1"H66#;JYrNNa
%&'$7=`e3U/Pe?#.Q>5TI]W)mMlbXIm0l:4:H-3arj]M"0n!Jj1B^eGlF^)1mD[Z&NOC7hV-iSDrhnDDlc-6-:>J%EVT9NUZ3nuna
%?4)2J3"j="Ee$,B;Ko'h$>6j0###b*DqXUUm<X8c*P$NI.+\+hrK5hChVeBKY9u?bKDVD90t2eU)&&@7,@KTo7_d^MI^5Tna(_oU
%9q1Z38&1f'%X`L%OSr$hoNi5*'Gh4Klj2^l8Z:9p8#DC(A;m<"6;18IVNW^c.Sd>`RqZSk_cFd$IPN1=KI2:kH$W+1"P:"d$W106
%<"6TEY3m-s&2YL0U^`(X:s$*Zg\E@AO?CR5Pe46.K\X:sqeX53.LN-RJ4uQIs,TC)Me^<J/`;N-,n8-[M&@Lm[.skOb%d'0ia3X-
%/:=qs\ggg^`@bUM(@bn&X\PHdTkT!n&%XTTCV\=K72<bm3UJUi_%9[Obsq"31mNooIo@m%);J=L@?XmIBF?J0:rtt'q_&5E5K$H^
%WdY>)C`l.G]lD,b2um%q;8%4+PJ?aiNL"-=#BX*epb8n?`HnlQ1270J724);l!cA&Ld>)FDA7YtU"R.eq<k`dlLigSL7R;B0AqQB
%VT&.;*7:$_M;KpDL7"r1k`>#.F#2F)o;aJOf>kWg_1,lq5YkH=eNngff+#c0`[R)gP.dm-RYphrbr,PLhKlpnU46cWrafU,02_d4
%;u+J;%C%_UVDuCTk2b4s"X=8`@hVkX\+AqDqKM;L9AnVZ>)0lS\GOHKq`E1)26(.E$k':`HECP`Ji1Zkj[L+*C)4F!$DU>Sf!6W,
%b3A<J!;(j+1)TK,f60An'D+<fDr;]Z!:0BrHgFVPQeZ;^Gp"N>NTp;gj/Q/o;,3Z$"l2Xp^XM+fP=OrRQKndZDfrc]9DeW\F&c(H
%n(@A]26iKpcnBpJhJ"kHk=;7!m:!'Fkr/GV&3\$4hMo8DFnjfqjgU)[Goc?JA-C*T=jIW,;.eg1Rg2DX->K^5l*^Ir+5bioqupu0
%9V%;is.5j?;^m$X%+uA,L2JEWbXF&7H@#-]6hCE%)br_h9QF^-/(5;ED!$h>o$$aE\Yceqp5;>o`NurE`e^p@YLC`&,``<gl/nf:
%!32JSBO+)M'FNA^ZX&Wl7pW=7oJ\Q;?ZiPrYrp>([Tl`g9oP%a3Z-]J7<^:!UW9f\\ZSM)\ZJ^LYgQ7hV(WZIqu'[^f:%86auXn+
%l2?[G=Q0ZLi!UnaD[1hp4O?6c>1WP`>-t-pIW(=2+o_eXo22:?+8WNrY=f0r)3<'foIi2l*7q&)\o&@bM8!0F;KW/VFdf'T"q>D*
%:i)$"k;Cet'PG^Yq>OfrmWIL?EL/ZWnU>hH&Gu^uD$)#bkB;X*6%^o`]MknlNVqMcnkd1'\>`"r?lL*mQf@cKa>4UlHVeO7RYAZ-
%p9nIsTluu1\oRs;2m%:pO5'[b2'2$Upp4GE^)3*fDg1Tgc2@T)U,:!'2t.[EZoBST.u1u`f+ellh!b'rbIq&IcZU'V;Y#]RBbh%c
%gG!Hdnj9(Vd4qdPWb%hBh%c>`/>IpslL;nDD^L^X[.omKAsE$;K6K,/c2LcMmc8*oSFLM/gqTG'C7B9PrHs.]*an^ig%7:@[(=N/
%oGQtL3;@@&H#3%Ui]*l'%+DZPPMu?D.`"X0ZuR7*+A(<En-Ak%h^u>=,\dF<g-Ct4D>cNfd"#`/"MJTO3djj^'>M&7l5IJYs"R&Y
%*Ccl2QW@Ng?d>qF2>tA,B7T?@>c-[W*tFqIMF@M#I9NLFGl']Fj62KgfCj"LIkg:cnCGdb/(oJCIpi[/fGqJ.a2E6mj7pa>=5k9Q
%d0X4:rP^'?WkrWprbS-IRb6-iP?1DrY)[i2+2Dop2JdqL/H[ealc0OS"iOpK)-Qi\kBQ7/Y$Z)U>;-?]:34M>2os9t?DtE-M*lbH
%lr!oJ^kZpRJS;hUlPF$8(UPit1JE&Jpf2Z;3EWcbD`.-AhD/toh4<S_b9LH^n$`,6hn<?GA*Vc=W/N[4mPPRJVB>cIn3bao[&:)M
%KmM!=mD>KAE]*MX<;i#:qs+6R1tm*9nFRa6Te>73O<Pp]'S+?Vs!1M?rh)qiJU6K=h,#qIF,a.`O_1J'NX1ta$L?TuZN[El*sdpH
%eqX,hV_n_Gn#rJLHJ_)4&k+S&@<tWG2sBCCqSolAG(6Y1.JHVfbQ3/G!%74o)mu`a`XPqm>FHJ3<uMJ?\_fA.:ITn%e[aVq@-Hbo
%=#$TSpnL\.N&q(h$6QH3(Z;D5\t.Fm9:ZFIe6VI@(I.'c0&=ZcRUSsEC?d_OX:K@R<T#/D$dVCW!1LofIlc6J29r)f1ddfOI;!M_
%$K@@fF.FMd2WdB-!+@f&rFl!/O#a_"]//knGNMqsqbL,KS5bt1=f/0f@L_Y3S+CrYP7@dBC3]/A:<iG5)qNLIbo'kgbFO="RT^N6
%_qSo&E1)HurWWBCnhLN]Eu/[IbWE]CFJ1MW:9N@8GFI`q4$fLK=?m93'IJ39+*RV^H1&K6&,]boJ)mVogg,Ld.Zm6pL4_+#@ELr9
%#=]b'9r^ab*4fGecZt.8NI%`\+tjQf,?W(0f)+muNr4A2\OsOin4jnH`o(Jh1;):;=5Ang4r\f\IVupL%>JnV4mPC[=kB^89MWds
%?c5%Wmrep*H=!r*QcG9.Pe)jed"k)1>)0#d&\8deF+rSG'+D643o=hXMf)T5U"6I48Y`JL*I1MudN(KL,fZ_B[D.(e_sgr_%eHLL
%3UrOCIWsH2LT_$RU=f,:q>okhY9j%*hEL4Ha599V,2\Y5>03<>IaqW.d02e^B`&,!jUCu0L=Qj^/b2Gn`c(7VO)%d:!/3oJVbMP5
%=(#(l]AMqK4'B58FFoPAq`R%J*>@D'!1k5Fr0;a9+buL_)$,cI<Q9+aaM$8?qmcacGX>D'Wp6tsN>s(1-T\l8>'VDIn#gq5fWG^R
%9ekV1TiWq$E-KHTLgK^&O0'Kk>XUC9qo6+X*-t/0\K1^^hb9R.,,l+DKTDQN;0CjEDa*gud-mN#c"j&oY"odqQ&D:nFO0DmQQpY7
%qaY=&j/[fZ&*162XC!2l9-@n3"?V-F"\rddjjDItF6u_Y9t<`_YaFnDa<k\;]Ks^A:RDi+OCsV(Q]PHES6QQDOpffOI-/7\7OQ/'
%S]F]]<IZ4@'YJU[MiijJK0=p(cuLg8oG"RtOf-XG>q5`,'*gi.Nn'^,>st]#m0Vf2>'Z1X`aONYU-lq8?@'iJ@jqV!)O_#4o,q#U
%++3IGjA-\HQA=6Jg>'4'KY1W`4dDm^kHrVN_lQS4Gf!JRM+uS"IcINs%2'qJ>d`/Mp@@AeIWj5*H9WVH*6lcu>#Jq5gLu/XOCu!t
%^uG%"537?ejIB&+]J6tjTHcp,S^MBhAB9S4/Q_<MRX+$dmWRn>rf2pheuQ.8E*.+-P>J.\g3HUpcR2]3g%B^Z#a_"4"85!q%AXu&
%Uj%>iK-=tp$&SYF&?+1Hj_LDFk51p:2@8!>C;?lGRU5Aj;WV4Jhru:eHW)<uCRtT?#o51UJsBGt,f;Gq`tq)rRpJ%'T!mYQ$2s1]
%[4_#XFFcuQN!*+B+dPOR'C#Yh%PXqV]GrkK8j[Br$YY(W<-EPHm;*T[T[>sj9WQd/E\XHA,rPM:lh)V7.FgOH<<h*29Sb-4LBO3C
%ZHPC.<0-MqCM`s8f=U7eHCgjSf^ffBjdrBK*pIq_MhhEqm/*HiOYSqRP#'hbI(e5#ST`^#.DFQ_UHSm6YWi:[qK\/<W#,cOGKEmV
%>kO_,^,I6=8M*K5HBq//6Uf;<,^UYJ[).\oAY7a)=q5(&KT:Y[R_=$N+(Gjsd`bTP@6F2Z'=q=^jb9g:C]0dEB#C(._0I.F''BNG
%,i_X`cj;1AM'I8MCJGH&1-]df2=HR-)$rb`JbT:a<mR?7ba!N_rUn1O0mp8IO^R2`Q7-5_VuHHg`\BNG=Gr\$'A5=E?1$m.(%m-W
%,,f^O6;Bfm+etiM)rfC])i()oW>-dP4]\W<XSnZBVc9YHmS=g#W&/0E-drX3Z$qe03h[2V\uF,X(TNC'q-S5e&hEX1-NS%01>ck>
%k'S@Aotd.`$Y2$iD#7kP$fNp[%)tY]8u8DB9\TsOSW!coZHp4qht-`/Qr]QY/;[fg8_P&$b7Pgo,55q4-<Wl9UXQ>>;I$.iIgY6(
%FR-hdG'!#d.5]:/pon%na;h.Ef5>dZRitaJ.ROCE0B)0DX8HBipVoDu1Y`oLs89BKph"IEj)XS"2U2q##r0]_KM#oa1tnYD7lZ^[
%02iE>F-9Hmp:$H`,C.&oO5JaeH`)<Ec4s6(S>35LFSVXAY7MGf,As&_O+T3jg<lk!&6+M`2kqB[mmC!6Pd*uFjEL,TnWuuA=sTe5
%k_<bG@RaJ%J'mJ3p"$jELn3$<SpCD.1PmB]?4U.GYO?]!G_C0e'^k_[@TLuPdh/s5]teb-`SkI#PARO\A.4da!AUtJH>V>,b8.P)
%SCMG`pHB!s64i/'qsMoGTPi43`.7e$[oB,NdHhAD_Vkc[DRV9>R-uVZ`j]+'03>\+&<4q0GJII,;>2Mu9Q#pIMKfNrW&%DUG*ihg
%M@\$A4)fpK>_HWMhRiYnAb40aHQ1hreS"a7]sZj#mn)hmrN(G-=nTf"d_/PrbP,pZYF\dr>O,LsSik^a*j>$[]XPN')qO@j7GDtQ
%W.o:b;>TCXjg.tKp=@7Hr;EbBeS]l;s'0mNYM%X^\^;(uSdgQi:LEO+D&WC^WU]ITXdm_p3u`Is:Al3Gcn8DgXP<39%*DpA'ohs'
%X+aSeV[l]g3+$rAh&9>;`pG_(YK_E4i&0Upjk347CU\0Te:.Ae_oKVk.K=_l>NL1sT=-X2Wh6`Nqt\f8H1fIe](DeI$Ep/nWdZtb
%)jX8a]s3L?XleC2e)L1rFDeip,9ud@DRlY4I,!A&I.%M[#WgcpI6RP`JT#bIQ+-)62i;Crf@u"s[9IM!M76f>#d86_0!3VQ2=op-
%l.e8TfIYh*n#d@3XF==*.c#GO/c!<]O'Y&_FhU_RGo-7XYu3U<3G5NrPm<o:CY\ophY@#M?>SJDHuH-rno7da3P>4u!Ee44G]p7-
%CTNNIT=,*og:c([_qg:WG3e2+L2B0=TB_,:D-L;V=BC,%CZT4-f._7=4l:^`/+rR)l%')'XR88W>$LZX9maXo@!K/%B</DQH0\19
%eMV?g96pDeFmG/ql?lpkHsQcVY+=AE7.!0QhZ8f[=ncjn[!]+7=>/Dg<0)nQbLRS%d+@q27K%=D\,=%r]N`(So"Km_Z1,bGC5&\'
%CQt$PgBRUYGuWV\h_s@kT!S9ie]J]ZReBM2"q5s]X?:f.=k1ZUcQ;Y3hE9TKW.06cR:\8=0snDk1rX7'<q0>>Khl+ne>7p*=N`Ye
%RX(Z15,R9kqu+Qip"oOK.iahhY*;^(4TAIP]R.,Gf#atZmf&cdY6oWQidU^qYjlSrgSa^#GYQS1GBD%5oY"7S?TD.g?5JU1KtV6s
%l^Qp4j/_i\j0WslXBIZuYJM,?qI81aohP9KkO;^AH!tXSrpslM\c/+YNYlP$!f-o1DZ8b?j4E-H#1=a>n[:?9"uco[cN_9ai*q<h
%NJ*[X\%N`TWC*>O]b7KXWP#Fl3Rb]Y4t\A9O'=[(_<.*/C)M!Orp!+\j*m$7=*/ECaVC#Ud-'qEIn8UQd)\TID!+CKpmFa!ZanN?
%pekBYI@`)?Rn)qTjkHCd=\kb:@LWiQ^UeNr]3ID+%PB4]48EWIY<W?]3lGhE.s480/YK8t>la<DEp;r'd^M/MY7:p5HgOOT*ql3a
%?Ul$Lq4t=)HK$8GMgODI0>VE28%\F/?oF)$EcL9u78eW7W`8H/48T_JVkPWo'4Z5#I0TT!jo+=2[;<S/<ZXF"JnpN9ciC6&Bsghs
%m@q"spR6>&?@DZrQ/5\nn>1KHpiTDO'q=UBS\ieMgY:)po9Gu"DIp6I6EAsKZTf-6:=&CFA"W0)Xd,Guc8q<8VtZcdd,3,/@u6K&
%Dk@As%W?Ukkt&!qSNV@Yr;K@b`&N6FG]fq8O4LpI3&pc]FM9Zb2Mo&"EWKM\<p2YE2N&AEh*uPYM7Ot;qY(6h4aC-p[RdK(<DJ:6
%V2*sbKT[^+(D1t-@%T^irPOa)cBjfUmJ\R(n(KA"W",:=$AVu[Q2"Xon7?D,BdjQm^:XZ!Y]I:P^)nC4%YmPDGaBm):P11"X^5lC
%/t4Va:`m@)I(WNqg\,^WQL\k]@7tm[e>g;KoqM"^XV]X!BC?nQnEoTf\E7YMf@7,N4b9f!X*X]ck=]G6n`3dH[d<FgL\Toh%BL`(
%>.4k3*Zr2,Y@Uag=75Y2"<GEaE^TJf<]T#keG\<^B,C4rmgeXsp5W=-:=*bnUspZ5CUn]2Y4:'K/p[sj*Zq5Oe+'p8D">u)p)#V.
%*_VPY)shE.X]LSBT+;*N2!Os3T=;a(DSD>>JIUl@HS7c;T*sW9ibP9pPrugJSW)2pKWid@4;$TW?01`D4;(!r)%fn&r5k%Tcj*o@
%g50grUmW!MJUJ2+o"1$VL`800A'e]eDS3`h,Jt8UbNO2u%=1asGVO/O0Z8c<:h/V*E?taMT]T`$%U'ikG_j*gBHu4OM-:e4+!*l-
%MX@[X^4!r`-ChC*e?\&N-<Ya6N$OSFP_kGE*QY0On+t2i"tNr%\>LM[NVZi`S:kUmm"Z*+H9<_V&i.nBE.HW7&P_<?Q`WF@NBffq
%(p*Hq7WlTFKqm8GgXWEQrXmc`Vj]/$gd2sUkLiW'bO3"8lAb[d'PiSUZL.u-@-ol91ZaOs2n*+aPo?9U[jneDDg.UcPB74SYWq""
%O`ceO2e;?L[2-/pW2o$d[H5G&-f!TcrYQ!ULcqWjg3S0caXs%o&)NYF5Q=cK5q3rQKnFPoDsQn6mf\p1k#P-7^1N'mMtIlYo6>?D
%9=5GJqr$W-#;B+aG:U)OUBa5'<EkY\9=9"b<qbu`Sq\^2.8\?FDE'OZ48\7.8_0H6=b-I.#-cj`G#"IZ2U]BF"!1\44P2gl=MTrj
%!X60Jq>PSsQP>_n.8[cn]VMc:KK9qml5B`E%-r_'r:qPD@%:iCpQX"AX#h,&D0l)\8/cA*<+/^,cL;s'>?G-+5F.oXXaBPljce]I
%XUk/a0CO9,OK,BEH_T4#6RA3OK`-t5kP=]B=5+*Q%Lipg4?`q&p/Cj2F6BL+pZac34ch,1dBG"YC^rA!O"BUG5R1)B:$_-Jf`pr7
%co`04WkVVaEcK,)3d\DomZ/96>9,ijhE5f6PmubB[,%9-2U(;Hc>9'd%\$ZQnG(Zq[<D%a:YU2<_r^%Id=!+Vlb]%K*73PLga\kE
%]Whr05!B`1n0nkJkE-,d06UF4:t\&j!^^$[]A[i$6@3r%]Fj)7Z<hH,'qD::&PLh-<];NNo0FmMp%,*Y\#P_e&BRk_j0fq^?`UXX
%HuSH+cElNRrN1Kbq-E:in*9DuS\iPdLTf)N(H:2uebLnCmOIqLn75nZl/nI2qKmZEp1cmbZ+'bt=2SeTbcG^THKVJjp"_Qfkm\TS
%j,G^*!1&jJ\$R_E^=Or#/K2O$U9;5qhh]LoLX--Jj7uktj2h"]D\SSH<a"8Dh0eq'H@L4j!7pfI%%u-s)oU8m[<fK5iuDLX[l.#G
%\$t5,>e.Iq^2hj+C$:!lFI.7FLo]S#>5;=irYLT/UNgjTnq^9T-oo^Z3\o9f_Hde2jKk7Daa30KS4pq#:QUOO>3qcF)Z>CZmYA1\
%TN"n)Q"!Ibn-2GN^:XK`>`c4n4t/X5;O)CT\a]a3_",,96/hW$[Edq*iU[lYEkUS;$5?aV$0M.qV-J=mM[?;hcAb>>jtL3"[Pn`A
%FoTWjT+BK$r<L;Rr]l0,&)3n<^h_Ra?bCDC<K9<$q#K58]<V%2pj";"@HR[b!=uVVhgrU_[o!@#<DFUJDaZH%inkj!`9/=lk6r(R
%qos$Q0IkCO<I7ZJpm'0P-c_mbC`r1,?*;[XP`GuXaaFJsn;Y?X"9*cJf%0!D=*MjBXi?-jq>+sBnFHSX=lJ:PV2BA9kK,*`GbN]8
%Z3%oHbej\Im12;Q;$/hO._r)D&!OTn*8S;V=?XB@pKdS/L90$LDQf@u/M/W<aqJdr;D6>`>QABG2`FKM+.ajmeGuk#d''P+[n^L[
%L\'%Z/q2Z'I=!XR?G-HiI!3CGlr;@\/=K*)[E-%.2jE\?:H!J;J]K.PmdA]Ue+L_oQb/pVXVRquG>IZT!>h_JY/"g25'9&:S5ehI
%IJZHM@kUko_uIAs6%6<9(M=\Hb%g+Q$>e-i$\r?ee!&A@r]R@W2./<e\9+b^Z=Wd#WAfm?[nfUL9!9>W&;8(fH8e$<9)\,WApWd4
%Uc.e@PWXoo)r)lui[5'(O9\+#DHRLNhk"_ORlb5\+S1HfI-X8to^GMOe@9eY"T11O$LL@<SKpUt\O#$*ldWN6mcah]Yd[qa^9pi)
%b%`s*gZHpbDp9:HLYaN5TB\)PVs]lVQ1t:9DJVl"YJ#9QTF6-r=6Q1Ch8_g>U.h4KdEdk^pRtfP[j>"!o[)$MYf+4'</q<oHU.Gg
%EV]6<+,)Q3)SEg\DcKGa:M85+f%ImggCMj%K)=K#OBeW$s6J8%UM[3G=WU,i!PWsIk19AJs(omCp5[7[RIHZ&[X=_0$ZKh[4>!X.
%s,4=kq4tRU>'XXCH&D1Tg\ZtS_//AO2(O)sn\52Hq0I8Np$'k#CAa4eCfnt)eCV.[?[TPK1jA`XaLYMkQ[%^@T\FAg%7:`H(<FD7
%'\mIf3;5Xe&]<uTnq]Ea)j[+Fme=o*-e6B%o'JNB!$gBL/%5-mRA3=Eng91!Mta#4D5^+CoSbl)_]:lgT-![@*`Pm=&h._m5CIft
%Vg@D!<q"W&62@n:b9u5M$ZblU)1t:pX/4:cH:UNB^-Rap7e\K5]rJR!IVgL%H#[/>o&u)EHA?8jcY`(BqgQo[7WiFWrWWhYO2rp0
%QMo(SBLiP565qWb'C#7XQ6!<@nHP5S-XR7.C/G4Or:.bWk+h>rR4*c4"Q/JTUk)MAX7*/\YDc)i>^QG_=b`C7)QH53rERm5&r"i[
%l;"rh1Y_Ea[JY'^Ghjn&LV$QRLNiWL:>p;/b\LVYT0))e=9><k3EtBHd6Y2^h7\r.A0]aQk@P\7"Fb]/!9AOW/h#H6l:XCE01r)7
%Y%O'0Sp%l*b,ZO^oIP_k:YoqG.JtSnNg5CGhER2.#fP)f@aj2F9pPtoLftX`YjW*bFW@KdSSn-&=CkjYmaGaDfPG`G`9_jXdj.e>
%;E7T4n&bDhDpi)R$;JjeR)U]dp*bWIcH`)q](`<Z'W?pud-ZY%U"A)%e8AH^^s]d@X&baCVf<1,gXCcq18d'+>BfOfFoTu!<MTc"
%?l/T^,u527YF2%sCqQaKm+kls1&S[BWSXCUTZ?6)iRQJ+d];=a_;!j`D)SH<Z@X-9m;P/g+t\9p]r8GJ8AM;hlG%O17Z"2[TmF6@
%Eqp_Z0J=J(DQRht?!#OU*]G0C^bDnQQMpNY;K/6"#8g!=X"HP>HX0NV[JCjAqV;oPIBY9;qU)bfWL(Ps+4pE=lPp\1PO=ha+c-*2
%J*B*"-*X.\S.>L(S.Tu5QQJao">ON**;"9!;r'f;`Xf-#XYW69_r4I@3Z;45):M-LQ*:WUoL8p/ATP>"\@MibF*>;=Gn&_GV)Gu3
%>]A9b2c3S^@Rp^oWU1L]MgF3*rT_jIa*q9>=uu[[^PO;ic)o6WqWIG@kF4D_\9%R&eC1GSh9+<gVcTORg+QMAD=q*BR/Zsj&AtF%
%_ElXu'4K#>gTCJGgRI<fcZHu%>K(ImG83[LqsWpIj'`n_G)*P!&'JU_F`VVHpp"6jqKBUTB%$Wre]hig,A"Zk!]D@W'Ba(XDKG1%
%?$Wqkh^h\]!qbPPaZceM2GmKChYt/'H:6BNp"Ig)k2"oJ2V6HR-Z@nWD8Y-;MP:'2<I+-1A6Ag$Bm>XU*;@O!>&1;_))N6%KIaF;
%,FahE#A\6cp0TBdg*^P3JBpZQr2d:s.S=t*O`k)a?Mf!RA,,I%Ydg%;n1Mbg2he#.p/*esm`!c/*<<hH-K=1+OoFnUA6)dr(R3/\
%?-/4$j&Nb$GuVN8GYm."IJ:BVE)sHQ]t4`,L8[#WPK&TrQlrR.<C"SSed?cMT46UKllD+>(?s;kRij6Z%iaApc;uiB+&ou2WE.eL
%U[n6Jq((AdC[Vo$J$E>IIJCsQbtdrlfZ'u8K8iX&AhBLkh<!aQh;3Uk63_elNVsK3J_fTS_!9\C.r4UDZ_HtZ?^"<ZnTjf/E)c8_
%\%Y$"*^9c8H3p[V9f;daTU#BbO`!qF0-6ED2;[/Pcn/peb^Y^?X`84A02(J4osO@6Zh,TA"t83KO12,^c\i:Yc2RUjN\gkN&%WMF
%L^)S3B'&*P@YS\So'5tJ9K]G@Vcu,ZhRhit+\Q!?l;@T*HH#dPFg]SFHt0qfAa,D57.IP[m)H";G#1#Er-;e!n*,D2rq=kK5iYqV
%mKa*=q8P2o*Q4oV/]/Mkb'neTrRRlG=\GW=]MdEgEImse<e6QsqN]d0VpNqo]A;60X3-4Pmb&PdUnM^&dANW:>W=dJ%Bu2/o<q3]
%Mrro^`FdoSP6mR>8EU':IV%3*Am,KIM3rV!?`kH:E+.BrUZiji2If:X5@jkF;U/t:/`k9=2VT/=H(uC]!>r.X:-<gOCUA8uhSgFZ
%ksmN$36_.'gWK\[R;!r5*g-'ti5hS-QJh1TRZ1_&`8pY`:VE.(BN.+3pJ:cKAQbp]I\/22`;qq*2kcWrT20dicVh::9,d%doCE)4
%eJn9RkJPkBgM8Vn/LqJFn[7XPdbZ=7T:upBeb9BM,C*#*A/n%*@OS6'/l!&j*"Gd@rh.tZ%h<Q)dL6,g+q[&'QApQ"NU&D>M;,@1
%_W<V,]C2<dgQ=ptj(UpJ7$>-!;-oPJW>C)fEec$+3((8DDrSpb83[UF2.];@Ic&HP*p!UhIZCU@bJ?=#Y1NX-O)r(,l[.NO[(LPl
%\`,A--[6l=OiVfr]GY<WMk,Lk3P[^m)#ip/k9:B8ljRsk-9U!rkBu>0n.t?pC\/#GiFoUOF#f(#YNFc^5m(s(.6$Hu6T%*[TFEWg
%>gm3/rPUjZ]P\P\$eo!d5HLDcLUZ#Lg&`C5N4kXo%n:LD^$_DF*GY4f_tF7OJ"If-#p^QllSZ7P(17=\mI^^&r0,_As$qqaB7&Dj
%g(u4'#-0"IoR_`b0sXi*/2mUle*[!1=I_Z%_&(\"7a@QD(%ER&+\iG;;0AK_jOnG&!.j.8B$>nVpT$kjL)c.6m/p5QF]q%s5<?K9
%ij9HB@g!+qrat_q[.HFo-*J.,UFqKh4lP)M::jFd#Cub@I\'#O_#8E0"$Tqp-D`#jSK$&BD;<C1E74RMs3a"M9j@]:l3D.qE1tkK
%S9TZ,n#,'$mpe2"OHOa?acJuGjTqMX'u@.gFh&YVpf3;m]+3<E3,M>omZ`0]Y0"0n*N[X?jXr8idKEib?"?W7KDTIVOhAYr3L62a
%m%n>g*!!pb5=QD;R5,jEgaZ]bd3e<t0St4RjZer28>HWMCN(r9_qS.V+DE8>VU1R?0&'"&&]bG9:>m(F&#I'd$uV)oUXEj5Z(jhW
%i8Gulq!P_8!"(G+G.*BXhO!Wl<6`P4!C8^ZYO7q=kq#puV_7.Ug12,>S1!^qr+`hPVD>3#%(2LWXW0_$=2?M#f[41kr.[u*H2HXu
%[@oS4-Z;#Vl*th3VrbK.Ft'V0Q@]>Yl$-qc*bf/"Y+]UFHJYjnRX%DEe_HU.l?UE)oj!D\F\S',2-&2Pl)p:Q>h<GO<8Gsc&f="H
%?IJDQUY30r5&97S"+!:8nPDTQkW"T^QW.c2T=+:%@T.>i(8Ag?Fn2PHl#>0lo+!qKk&nqqn;7>@'K9YQ!48N"m#ks/oVeHKY7qfc
%\-d.1F9a9^QYlGtPuh81J4jcd;5ePT8]RTZ9)'r:F<#a0d1q%0cU0jN>r(@\HEV3ioEIDGW%.*f1oNGNl\o9*%Y842QHFa)2:\B$
%J<":O>/N3t0iFI6CM[)e)UWL^e@_ooFN(I9MiB'dQs`^YGo_^)/t/s*:d*'3Dnro6-h*;aC'M<26G!LR^mqkc_d]fGD$usn@)c/0
%EjgU=FeDkV-d4:8R`e4R&7%")H2ol;G?jD<%[*OKhEa"6:V1/(JDk5sDD9VDDR"2f9G9qJUbfP`-X]i(.<J:TTSK[S.ZQO];0-#d
%8N0n4qW?cLRWM+u*1`&p9SlMCBH$@LoE$"=_rXrV(l;K!ZGVKgNhbR02']<jQ:9ur$&MY5(2CW\%Q]^]VZ[at:"+:L3&/Bl>sKKs
%Nr7CK]O\lm)sm&K3p@=G^^Z:NXDS.*o-",7&`Jf_D&>"Xf%=!<3<0F>.41f0#?ZY9QT0lN,u`u[BUeKskKdm6<k8_rD-M)g`ll=k
%ot6!C6!"KF@$kZg(+V6A-4HUY(h!O'Wa^?]'<YFib`SX)_:2I-%"-L/@#?h4@6-Z6'k&jtQ&$@2MJBt3/O2YS+mK+k=(';c2;tRq
%W"-#0\\N>=,[?Nl8$#"c&3!=Q^":gl`]9\NNl'u_.)ptA#__?-**?4I%>%Wg1mJN,%^0<f)Sk&H5('Mbj9/tj.OJ"0d'-*f>'O/>
%bq@\<ap/g(7s"H*7l*$&BPW:iE62*cK?]g]@WRjPE43^AC[-S5E7K)I"ro?0\>1;@ipZtK(llVu_DN)%?CWU$jpd^eDYK(,7h`B:
%h#p-!+aV05eZ]?=F9IU7WiH`3)*4@BL[]&(9;@&hTa/0;(iTtS=JB'9BS6M$STAhjEZB6kF(@>,7pWrk@6PYn;Araa;8SIAa<fdB
%A9roCZuf\sC$?3u.H#`YW[K<%dm=+f/%28f@00?S"e1/nb#$9d1aGp816\9+LVglJ1d7J=%@j96Ga3-m?sC]A8M1#^.3pYK)1gPS
%SF7,N^a0@0VQk.!2BG4V='ZjCU-%iWh%_oE_aqFM'gW[>>TBKF,3`js.]4p/-K$uONFNkR-PPFC,f"piCc8^+bY'PhP)7'cU>"%g
%=(t/DJInc7h,P=#F'u:jU4*OgZXOLTTWG@J+Ag`NJO\T(\Z_Df5$GP:&Oocn]eSQ#r/Z[bW2SY`&eXCIV[jU>_08ol<%4*GRV3Pa
%Mbl:Y4]>eXLk.8u.uC"Zc)Jb*Z31D"DL`aG0b+D$W,o]@&iXb1)M9P3"u62\<B%E7T`WImN.Uk,%%BVb,E!Rp;8>jbIt=YV8D'Zu
%3ZLX1!uU]Tef-qa\nWaG2:OpUfJB0_BR#K"`#tI1<.Il>?_eL:#_`AU$SS`h^Q-E4aqW&1)69GDK7s?b=,:I%Y$Ib.OBi3,DLu5"
%3q6unYb:rRV*.41gZ9/%7H_$jLk,U6r1-h4rInPd3ZrB!-W"9/m43!.@UMkN-P031^8@'"nPD'k2N`'3]&445"8N1J(7jXRg12.q
%$3HaS,-+!H$`Hi%S2etU=6E`q/ep2g2L9n48@GN@;B'HR5'.95M=F_*8-g.l:j\$h=^9o)2oZso5iN0FNVWoqSkNt1BS'?F]`Dg[
%Gr$%Fjd<WWWba;0`F=.%%$$0S%"0rP78H^ed(Z>)>`H..(qpd74"ZrT5VV7/R2q``CfFnA\RJBtab$$!#+"d<cn?tVB5hR>0p]Sj
%J8,Ei>;S6I<0:m%cl3d^Osb&K=iAfY"8+^5R3']mLD_Ku.,qc?81'?2a@?dWL73FaCfED#GHc"oAd_U>ED2^A`'I,S_0N=[Y(tXZ
%,8?;@*%[YMPUO0Hpf5QU.gSD"E*PT$TX1Yonlg!>BOa(J>?#5Q#=6QiETf^M1CR;]iF6L8OD0lnG'-((bD_ZsP:ZkDR"Cj8`>*T/
%C*OO<OFFFK2X-Hl_>"WFbg76r"a/$#.\"V'/<adiCnrUdN"kI[mhhoM[\-LHZ2'K]e0#>ZQqlNVmX[XO(tGZtPM.Eq8_:Du4L<^3
%`;l;g;F#Yr!QIoM"ugSF0m;.Q'qY*8FMY!9U;9j?HuiO\!!d4iJYf$D5V,89Q&$2l'1^T@\cGmKK%??;1EBuld"*A.-mk:58:#AL
%@<5k/?6Q6Zq&gP=-u;W+2Jb,NKacqX*eRt^d%U&"LS;<ghpN?K6jlEg\2\ss?"-]^4Vlc>P*<`q1]\/T.a9eTZ4nWP6,(_Q<")ln
%,NIDl#XV:4BORSDJ-2VsgfOP]0n^+G9U/[))iE-MLGMWC7!!5[N^'\[R_mIJ+eEc:<OYrqOE)3=P(uXs<fGMOPV30gFLcH___L5L
%VWL.ej$j?cL+l3Hr$=b<8\!_%RC^9A&Xf;lnZJN:NlZ*j"W8`!G&A"O<4],O)33h<_:MB@6W[EKCK6BKGr:jl%F>^3d2<L+QP-)@
%M'AI%bM^s5_;lDb(A)9(:hE7B.N9clcR_[V3u\>@%[>oZoL'KE=7RrniHT0iqSmY_S+B6B-$+M<O?]eWrX%<mUp[urd'Rr5AipRq
%#)0kug-#34a/N.e\u"/?a6P31_pJZqs&gYiA/p`=Ak`@[_;35g^C&f'*+^ZQ5kj2NTb3ur4/'VB4bb,h0#J`mf.j1u:&`!Fl\EA7
%=AhicnJsM*@q/VO.XH!>_28-@oC.9RRJuL@*g1K>c<PBA2UrpGKq$^pa*/A>LC#*qbG]*EN4(^Ba2!'Br=V#Y_d:[Fgbog2%\!;h
%&u_biN7I/hq6Na9A[#tZ$B2DQZ,aY0%!8kSmkGrW@WFCiWgbTC#]XP_QD7lLf@DOiPmK2J+cA9=V8&[o.$s0O`J)qI!]%%[U'H_K
%4IBha+-.%0+QP8G?oj6F7iRuN?U/k_j7Q%^#W=0T/gCtOi;F+l"k72,3B]jRG6?&TV8QgAeS'RKq[41%WbYdaeGu$c;,9;F7gBYK
%@"Sbr1,bZ-H4WE_Ch_C(<0MGaf&Do8S%@]dU;ns=Ra-"S%)\I45[d;5/KG"HD,2!WN=-6GB[E5(g>KmZK<8c8L6c/L!"&aH7'?_L
%e^67j,QJEMG*ORJj)CB48c^\4,:Ai)ifkL:b-,LCD)]KE/1?8Wr*%mY@TG+)6lYU$6q%Q$IK>moCi,ueM*2'E;J]!!/NR2m1[8iU
%qDBe4[%)L?L9A)H4-)FT>,&PA@5]YF;?8.3B,CB+>YSd)-;[iQ1=.JLX+2VB+9U%Zj^ns<*XquaJO)b)!d6X5GEPkKllm7RF:9Li
%j2)r#%W3c[io(@[QUMm&ILW)gnt`MR(La+S:g=dd.l<n=k4moO7%Lm,J_%W,2p"A3_[U;%@VGB]F"WSh%p-$jVEqq;/MP;nm.npN
%]e5!PD1u1WkXTWl)EMUjPLhV]-@8WL1nDhm*Ytuba#<Om3p>sBoE9PFV][]`<@s4l%^_8P,:AUC;*52f\P+<T%+emR<1F536j\Ru
%A,oORg?"&-BIPj!Q(ehbKLZc0N>24g8AJ\UQGXmMVBW6H_oP#1E>=H</VLaP:`SWk-$U.31:Ue6@5puF*X,Y_KjQ$Z(d7-kF5,8B
%gVRVW7OiN*T1H</9<QP[+$<*?6d[BAA=s9g1dgm%0O$e0_Vg_+FC-a^T/@<;H4104nnb=8ec>"qNs93s;HR0_<$%Sc-p37eb!UNs
%dp:fL5[MFh0iSBkKM[Z79<>'p-H3W?VEQsjVH[QH,srKPKgmJfY1UT!U#<-m5WCSPFNH:\MKg(*A:dCj"R85lG_nrSd7]-66bMKi
%MC%3gJ(?Fs5(47O3q8AM3ILaHS=&arR'6"00kfu?lSKjdT=Ho6Z#%Of_r_*m+(@QeP2Hl%2a_1r6GPUE8uN^UW";Q4`/k*6oq;50
%S^hPghV8AIO6?&O*)ua?\>M&CB"M>qmFci^jO84,(@.k,eFeisl&0AunsJ7VOfEH5!MGB;?q"QbSKh&Xf9$Mqa';6Eia$Ab>WuE0
%WrQn--X706QP%?IC/'7B,f"/Tq<jpu%Tu4P:H?hX##&u$)!$l;k\us^]/4[?=(#^Q)8X2294O1D8fq`"2rSTCGLo6k;Q\f4f8kDc
%]fW0[d_N9BR;#:N5eJCm,XGh&ksJ^SPtRuj/O@j0_2s`%om-n7i6&q7N)RaK"f3>-d!Q7@ShS)]+rrl_[G[uW'aCs)IL%<j@=K[T
%\;YgA9`]?m1rfLh^?`jKb($Rb_qp?JNm+1DA.^S=#\AM510"?2QoF.f\:-E)J6M`VV=8.X,m38nN"4-uUWAc7\V*:X"TEFFEP(TP
%4/@($bSt3iqEIk3q6pe8rSdTnf=E4VV\`P'+5[Th?WWNkj+5EIM",RmgZFq*'^N1(p:c292/JqrL7f[pkTp\m%Cg_e@5#HX9`.fu
%M[2'Ko?jeo.PesA>f0mZE@^7$2!dV2Jc[>W/E%_(>2tHoANk)*p-cgLYZm]5=T!-I=eBA0$k9,$DAr5s"'`UXULLEn.:r/g.e\1H
%CCfj2=r,MjbV6jh/IV<!\#3CFQD,Qh:R!E'$(HM&ULXttSmh+0,s*bKg*4nE3<L`Tr'P.#:*bV?Ea0ZX=c19m(<KM82+#Dc#-;E^
%Y%3BIZ)3bK"X_1F2j>kJWa]C4PUo9k5?l5B&@+fTU1=Qb=V2AU--MA6V6Z9G-a2%\:R1:S!n.?A-s<XC2SrB=HS+iZOc,?b`QC9h
%)bLkR\jq1OA?c@WWP9lb]\n=4GZ1o5aUBVrS!N/.YBV\,m.KRXl>dB9Aa<_Tm^\L_d!C_==ik-oH(n-@(eREV5>e^'FmM)P/;CG3
%h+s:%FkQt#]I@!2Uc_h0Y%7>s-;Rkp=Ua]2T'KM<#))p\*K/gO<qd7RMp5j)f+T`oQO-aIC)2`(B7uSi>.(>p^M2@.&<?lM<jItr
%^&2-U?;`G@O``4(7d.fI*D;4;4Qm$?h*0gX5LHaG\s?3bkh$7838.:O>7nu=-1aOF@e=[[pCeiW!DtGT5#JU&nr^I3=Ur_>O-6VI
%0A-i/A2tp6b7c1[;.k8Ca^2:PM<dYXb?'lnnO1K.1dnU5/>lk:?WbEZW!O[D7*/of.A'GBr#t+eTk!VpM\&NWF=`GP.bsWh@j03b
%ci?SV?>m2+O24a8$d"@Wfi&pg8rnD!Nr>koU9agJJ,ZYOL]0F76r4_DWic7<jm.Er=8h(7"![a=$=#7'FNMU5%H_@(mGD-YA2UL[
%1]I/s*&'LH[)_A(q:>?4qu$,:d9HO\J,2CW0'[rboY3ipi]R6&k!D#TTau]T^I6DU^)_I]o]`QX./uAV^$C1@e$TPh"N=FX&;:(&
%Gmn8uSA[XA4dSK#YL3MBqOO\=[G;)prp,mu&&st8%9i%DcQsc^Y"sQGRHNRC>Xs2=\_KO'm/Qq,%Ich%qu,&UiQ$HEce$bFJ+9:0
%s6fKns,YQ%qLA@.s6K^\WdfBD0*cWjIn0IRoa_!Hg<KTpp>G+\(%7V0PDN(AhYQ<BqLnI64lm@.q6tk:);)Furoa;IYPtWi<@?]h
%Z;]l6i^Ad$&,6*PVsVu`ptu,;djC;1CY4-Wd<\!ao5n"ii&(DK#h(m#)@DY,P_q.`g7F8KPtRqbD>_0T2e"1h8K)-QO]>K`dMBcn
%)r.MeBr=()Tji\T+G:dIBFH<iKH*TS0cGcL)'QS@Q#j&='<E"[c3^(.<8n"N'u493B--;5&*5?REEP.SB/rQlpq"pmKaRYR&AQp,
%Do+Pk-'0fMBdGkq*Wc(s+k^TI_CHABG%14PnF,1o>un[80#^D9D1uUFZ%X8k<Q`ps9:&uY),!&1.;`V.nJ[TilS;CXXY_\?+@L2=
%>";+D\h?!rO6oTHKeh\)Y?rU3DT["8[4qLdWY$()b*P`?OBa"uRl7Wr\a3_WTGVE<-?^OdIcY4o/k8YN2n[B&Jp]@1rFZDf,-&r8
%a-.TSJ[Fo##VUU_?d528fWLqPN!Yu-!(DK6EkT5?`H7^AO&(K;ZG\N,b$K[Jl\5j5geNGc+<krrDKK"gdX/(9@I=Z?6:(*<6^K-+
%aJG+)K\Gu.SOgKQ-"nfn4JM'B0s3SC9=k#`bE]e]<ad.-.)N@1n1L_'JL_*YHT<nm%h]7)>Dq*.0J":W;nX0Jle:ZcL5H&'bKFkb
%:hJ";a2h(\XNdKiNh)9t[AOD<G83jQU.`]Ugn'GM7%CZ/r\[R>XjU_\A#Q.0io+'=Tc^Lc-\Xje;b3>nf1t]gCc<Xt?rIW>`p\1E
%T7f@0MOn'mjB:\fmH3^b^p_:B-6J]g^?IDl&?*ft#'"gQUV]He3S##Lf@C]1![=r(f>i8c`u\bHX0O/AeQ7ASh-/mu3\+GC-_T^Z
%'eChYY5Fhpk[4?d"jJ>3-'fY2J+I2Tj=C-<%l+7PNM5YfaQQ4JKp2S4#8g%!@gasr7Kk9]k^[?d1Y-<T)hmCE`sP@Xk8SgIs5b2E
%.UsVmL=$?I&a*CY'gfa?6h3HW&HrB3ZT]clRfL6%RK--MPmr9h1c;`AFmN5L6>8_VeFb$;4&bZTs2_9$"IER'OA^1i.F,@0?PJ;k
%\2Ns259QJaiK0B>pM$H2X2pJ\>e>StEkU#a&\FQ^8A[FG@Wi5=G\\/\Yq3iK"/LUt3I,#AOVBdGWES,j33]%TS-/XApQKcMYWNU-
%VA^'MIKh\Tj___T+ZrDN!7GHXI_q2`9T3rKYJ4e0#`[$@K\TN-=smsSJYk+-oXi8`0JkGD>`4?(&f)I^/=1\4kWnd"5OC393fO4C
%933/Qb/HRh*oBl%8cI$cGFZ"g@4Z@`AHXS*@YP/6?'E\/JA;H<H*m$^*"2u4MBjiGLH_slVf4VFQ`r%RXC8mO2m_.,!F,.oM5p2C
%ANgSW8"kV1Vc?"085XKb6GXcsV1!RA?At9`P<>p98kH91e_@fLIMo4>CauMH`"Ib1(B=\$]-*<6H-NA^`Kp;iI?2%e2!,>/&YMIU
%:oo%h@VJZ4os+9,L@So[6PP[']3Q&ME6HK@2@O%l>]f6Dh@W:^KHpoba2<dhQ)(#N,0HMMG1bE-)C9K#$]6"$7DW\V3kchoQM3(/
%[Va",>P;Q?3l=@$1r&it@1kq2ZX/hO-AI-(mVi[Ji.WpQ4F0XU,BaAdZ)]W_X"m#O7Ucb?@lO`Ql_m2%6,`)oAs5l8?FInRSq'Au
%6$Z4*TehnD(=UhHp/9:5k6f7A!a%n7_'q[HHc6l7^ds$$kDH#I-<j@+![tE,Ka&ihb,7<?ik$/t+gJ*trGW1Dlq<bPlEkjYgi1H`
%/A,n<2"':$`+iPHRTNLeA0Qr1i7bEl;Gr@U;eY!UP(]$`,soG?V;[V+glh5W`*dUs!g=F>CbV['Q%i,kKqY;b>,O!A\rfR>PPF(Z
%aBZK7kZSb;[n#trWRqnS?9@BdVfWsOC9R8S!K35Z!K_Gp=r2d'GqF&,U\Us!CZ95;D_b>)K#bk]UR3>"n4kO9Vi1j0phmtn+juD(
%g8!dLf+piU.dB%:C7jSNUi$FX$:E'II0q7j=fX*l.q=\igVs&tWWbY]-ENP8>N<>"O2A2u+0NSWG%[L&bb2\I&=P&Y)O\SWc5;j8
%l<k@ghZ'I<j!lf*Yqq8)iGR-#--R%1:8jf2eIKm4NOre`j:k#c7WI[f7P/.0MScOP_kG5jLEW&%(n,b6%$dX\a#2"Qg]R$q<-ss7
%G?p>cL'hAA-oK7q@3R59aS9V;g1__j]D0?[mBV)(E?V"W57P7u#<_dn-(f8B`8P;K?6!n'+tGd>OVp?JAVn&X-joHabfX?$H0hXV
%Ap1^[Hn7CqjMLT.<1V$2?N\V[lMhcsa+tlB?FWO/,mZ@?9=OS;K(n419O;4@bQ-GO'lRd<9<bKtIsfjjUNhH;0cUX@gaL*bf=p8$
%@GMLS!A&-m*"?<ei10$RD[E3'i!G!9$n'tV&S=A<9[b(q?D-BeGf$4GRmJDmGR"`+mG^t)c5A[>]&-E8JPY7]_.Wj_7RL/,H\]Rf
%%:s9=jS!B!\9KWC8VfoC3QN>ZM2el&<;FPp3D$!cPq"!/&!s.dVa*1NRMGQm&]s&<NMeQ'na,pf3&CknV)XVP'Z/kS'pgB`0#PHh
%YnV%C[P<i-JlP*#;f?[4TnW<SSrlK/!,?9g02;>h^A.-1K4.s<pgIl<(a>dj6OI5"]SPM^*\k/9YhYmt>IObp>-b@7<sN(+Eb($4
%JbW.m:h:7K[ct2qKk(d?_R?\D5"WkN@YG#4e7dCq8)+eM(0rQIZ.m:<:mJkG8I)0En7^PIRY`5'Lu-3#C=5q4Pt;[S8A^G=6d8@d
%5_o_V!mi^/2U@%2"ZlKJKlL7S_;Gj1k#Z",'V"1i93nL9ZrD[J%JH5VXeKrUo#!2?+u93E)c29V/e(Xh/E;!1)*=+Y,\H!"AQbV'
%*n1J"o,9Vqh"=d7RDK_.\K-9\V<DOCP$JjdV`PjX],U2o/P!@[pCD1)q!OQ]*ngS0ZK2_UecSg>);C+TJ4ZXEUb=.?rL8BfRH=Ue
%nI1q\lB2H_mSKEi=o&im=ELY+BA*;Vg1[Drk:m0Nfb<486h2rtiB]Q;Ko9p[XXPOrZ[-sK_cODJ_N;otM,Y=r]d<`>EgCN$I^+*\
%@MRs^>TQf'k!o7uo5;Y]=!ihG>UV.e7UhZJ`,WcPL@t`iIRTm40<:<D;AO*hhk9diD]5Er@:E+h#6s?G'`/dk`7<kiaXB:gWc*/c
%ibIC(VAk=7VP,_4s6-f'm\n7J0i*0@\F8-^=n.6uqr/&JHhlUqa$J3oAH\R*AC]pKN^Z$FM+l,NRDMj6l4`(XY0Fe2[t%o9BG#J$
%cE/;d6q.1R#nLcm*j@i)QgIjs"]@F?qs;GM';PXL(31q8S/DD=ANg4t5V>,a2;-jF$<In/0o0O/"'G+DL7)(&Zm?O!TrN/MQN8^u
%g^+ZCo^_>l!<@`=Mfl9aB+^$m;X:,(YVaR<iH@Qj/@jk@#JW,U4g<6*T1b2AJr1E[>RZU"X_OOGI&Z/ga^38N/tE?e@>o=J>.Nl@
%\jRBM$9nMTP[r`m;5epMHi\X3h!n:OLEo#imu4_\g?Z[^Y0/n7%F7qP5Fk:JpBf;:*LSc7lrNbp*njMn[:SIC*q4<'WGL];!W37^
%%-Zde%E&?H2%W+A17WmOGp''Ng9n^7>p!kW1ufL!P5&4rA3gr90*.<Z"2\3F[2QIolkRZ[,HOaV"#ko+nCQV#+:/#Ir!6g]'6mat
%p@mjQP]T<l*a;E_Z^h3aEk"=7cd_W?@07,g;#Ud)!=FU'KP!O3(5gHUb$aVK_N<AtG(kp$NEtg^il4SU+^tLH5C!WU%N&pE1cPKs
%g">qYruf(d#3_(WJ-\)cI1T"9#[T+n.VC,VEZu)KK)g!u9JoRLXiO"37+16Xl!.]`o'IV<.4hqnn7>kMeqf\i$sXSlq?34*q[kX'
%L$r(S<CRG^6j/,F4:71eEp2.]35@3g!;3,46Q-EtZ.f8[B'p"rIY<E",F!Bpq7?(_&GX1=qY`)I"t5c=Q\+>pf*rS7_m3e2!!G^Z
%/RoRkC:!G_,5T<G7UbA#dEBcVfunYhh)ZEJT;`MOTG#nc'*#VY[#WeOD"LNq?U/B!XlBNl*]=8%,d):0I_bTEq&G,0!5*"?Js5gX
%GgRs42X%s$UOp;2F[d]D#$]-@.7h?P1%f6pqBPl4aP#@KaZe$S9i_/GYfn[`Cnd!\IcM@J\)&tuCco!W4_0l+a@3gK">?NkdjS)r
%;\(2j513E4i<,eVLgI8.e36g>QYHc_;M.,`=F&Bk?7>_@S/&XT0L=>_YSap"o?q/7aB#0.Q6>\LBul8Wf`Li(WdtuDTq09i<.Pe>
%X_Ud)pXHLqVCsV!LeM>Hr)G1V6ki',L;fof#%AmC/`hf)/1`:tY2FqTM/hr>Y8Yn[99C7MH-(8CiV9<PO89j<p^5pqiu9*PJ?g#b
%>JP,G-7E;XcV$2.J\Ld^?N/LLq>.";T?kqQ'S4'@6&Ir=-&#&Y.Q!6_"T9V+hT[cuE$I-V&+,)3*S`\fDTNfq:JZfWdGA#$o4^Y_
%2RnNMRUOMEJU&,egmH%\(]5*YJhtITONsAg8CCR^Neg'?0gSbPpXoQF>fRU[eW"69"N<-=$B5<$0U;=!g0g`C5pebqXekcC6ceqM
%I4RV_b%(6#YAB6-";6)q"<K:Udf]+C'B.ZcI0la&s))Ce?r^f*[d"0pO=i6q>H+UeQ]$OQ;+UpZeP%Pq4*'/NcnBm<Y(Q(;YdHBX
%ITo*u<jh$=-D@F_-M&'Jd2.0fL#9Wer#LSs^Oq?C/r&C0.]t_!r*unqLuRLg+Q?ScGVI#XaC2T/i61ef!aX"$#5(oh75<uR^h)a]
%g*&Ur%G^Xgj$4GSpnO$]MHTUf:L1;]=.CQ8B^k#UN[fS'Z'$IDLo/,!6/)B&C]S*$)'79K'g$OGT+63q-uQ/'"[!,YkJ9Uo@n9ZM
%IYpJ,lY@a3P8/4>PTIDs(!8,59LIDgU!=5&/"_X?kaDTJ+Ta?*Al;e^.bRD:=hGC!`i!$!]qCkph2Bmk"+gB<[T23!,=PTb=AKPa
%25^YhkXAR8+B@TC-4O7P6\-[Ia4BDnTT4KoI6W5BNdFgCqt"9h]OY9>-=c'd%6t[.iFE%hJa@gL(?rWIr(aLh2\>0;qX$ktOuE+s
%#Va\_7H]Zl!$WZ4?o-GBJMBFrO0rkb`_-4%l?+A4<YFpFm&#3u!\1)t`_1P+O=kLiW#`+QQ>-OfHV!`D"o-_<aK[?I#QP@<NJB9#
%VPb"#E)[@%<QLo],(hu&P4Bq_8>Q3bpNasBS%p`UE3K@'ihZ(R11=P#hI9opLm24M&3u#Qn:AIP^N4ss#A_t4KaO:q\/#"`jFAY_
%C=W(S67!3U$Ut#]&Q`'R-Mq@Z^3lXCcPHr&>RUS,o3F->@@,rjJg1;ZRSfboZ%7k,:XBS/+OPN59il0STT'&S0nu2$U3[(ES)N!Q
%]Wm'r+MpQa'"CI<O[,]T@.Yg"nj`6Wk`bSTL\8*X_'-6I9n\X3k5fN6ZB5DWAgY;9nZIoW0M.%n<43';jXhl/?@]l*4A8_&-0@5!
%>[_Y+&kK<.>m?MZL1KAF]QtZF6V!+GOX7hmD2;%E=,YMm$pU:f=83@Z^>Gc[Pof?KH#P;;AjK74dt2""F\T`BaQ(iu(>S_S5O*:q
%palbA?\S[Hen+Md`V^Ht\6aFNcDp;fJ60Z'&u^5)3=1,TmPi%s/nmWC(7\B]Tr^_crJ<j,\%3Q$\neh`ZR=6"M`r(^UMqH\+Td`6
%:?%2)E8Yrs\M>^<J8n?6Xd!l1D[WnL)psD^9Bq$2/+1;iVB.UVPpES5im6e\WBnrfScDe]fH?7k?'Nb/4Fu!)"UGk'&j.0]DM;.$
%PG=%](RTt]j@=h_k7\6tOJsV>&>V>oJe4@6L^i"cm`Gdp:36\H]o[CRU?W#>6:ERRpm%RDM2\;]H%nA\Zp%r0PdK7M28UuEm[V_N
%j][A]PhjnQ<)1n+dWpj@*6UG68rRDrHC99<Z[;^CeLo"M(fDSnO`f,[0oCdKi.GWI6KqREeQp^b?Y+rA\!#<LE%0?ddIp06NhA$!
%o#I,NTAi/X,WXAOm0_5"g/TBj"ct0d$&2Io180e<m2u+/<[<2D%)Vs&`6V#Z.G!d.]Zc7$5@?]@LU-,;kprEf!4Mo5':s%YmR!uU
%Bb?82;i=GkmhfUc7Wr&*Ibes:.;@WMk6Gp]TUd:\#aYRVMaoJp/nA"LEKBcGb2QmT0mTj.8HL7TKi2$jg^,p3VH_tVDjBr-4[Sm*
%Y86'OBa69na&\'PHV'&(Q<>/Og_E*#lX2fOJ\)b>OrZ/Y(:ZR2]eF1P2$23oXA\n'&YqO]_J^Ro!X"#",dn/JJ\iqS<fhT\ls/@Q
%BS7CaZ?T$&,0;q$ndju#nV>6a'.R/!emK+9_+Se3Y:kjHYo/*J2V=U+^F9qFk(&9C^rosibF)$.8+F`cbq&Ri/if;e:1t]&P0[[1
%XNh08a?-_mTgs9M8n$ll*7]4MPHT\W7@J#oBl]j6@.[ng\uVt'_s<3uO@PrVL\b\(45!_>roX,ZDql4O./s<ak4\*1Ds'/B^,_2^
%X(RQWCe7XB==P\R]89p7WUP)pOhqXn&g1eI81_T2]&^[M9X-[/L3F<;158mRNl<g.#"iR;=K%Od'7Lh3*#\ZsV,pBL[)4k?]*=;"
%S$rPg`hT:Q)p-=]^%@3IoV)IBQ>`'F&&_lN_\*GhgYN1.h%R*(+o?;n/;d*<Ue&X%n[26'W]OgD+]38p.0eB6+lg4fS;&gph:F8*
%/+hO`7"Q.d2X`.sVIE)@FF<XBSZ2o_K>eur++S=n]qYX_-2s)QhEXWbeeV%e=]i8<`"q3S[".;dA]0\o(s'1?2=n4dLK9*/@/Lk1
%3XJHY!N_j5rDBpkqh&+*`7#]3g6.ls4_77/Y_N7feKW$F)md$e#%F+:irdq/8:,DJQ$p,\pAr(/bC94p#N4cd>*(tT'6$mVJfe?r
%.LhoI8Z4_6Q`m:_*\%1]4crLGl]3>.I,.OpLn+_(/I,JU6*u[aB#&'?l3]f)54VnHHjVm!'oa$g5r)oQTMPrm$8uB$:u#X-?a#59
%HZ-'#,3LbI,!j@Shg9>anBM1jJ/nd9c*Fo3<D<MHO:*@UU7F[V<D`m,@;)_#IYf!L-stWKg1?UJ,V>K^L?G!U1.Pr>5YTd^cp7V:
%lQpR'Yf@24M57OeW?$^!!5L^e9?'e.`&&-7cgqC2NTpXZZO=4.KL/+q4gT=Kj<BG:CO8!##%g4"%bYD>r333"Z4o)J&,d-*Q'XtR
%3X/`8J\01S%J"(:N<BZjpm'<-QA_idFW6K9OWiS;@1[9ETpjT0P[q-Q0etS4Cb2YANc5\ROj%2F&ac'nN%$-i$29>:*)kgDM7k&D
%Fr!]0qb"&NO*6q#Un14*$C@bbMUXqj(`Z30#oOh?Z*=`6J/,A)h-o+rOk5N4P*1O,P6jHI!Et&$!$Hnr(&04cTf2_Lr8Ge)'-9I%
%&R#1];)!i,kpQf$!NUu7O%hls8cap%Hh^n0BVf,<c57Mr3d-_r&:jMeG+)jBC]MC*R:H%(P\pke[D8JNW"#j]n$J[#kotP53`!EH
%-ruTAQ'!#MSe=n#Z^.!JY0!OV"#9.,QBJ@J!XNc#i$m%o&[;S,##2G$E'J#Z_.b`iLN@L3"<f#0Uo/`=NDS3p]&-[j=FbfbOg7t'
%.AEgAW1]V)8%b/TN:>7)Q,e2=6ED"Tr?>/bC_#Z4$mgX4.W`GK)k`J=DGm'D;oCjqUUa3VeRfZ02QI;J=eoL]8o"`f0/-%eTo!MU
%^e+XA#a=2."P\79+Xa,EE`XtRHPot2?&'+r,Rd\@l@8tTV1ps0G4Qll2a8kr*WfW*5?=71OI?<6o@"2uYd$;.1,Y\C!U8'`)T9AE
%K9alqSf!J+XpgYO&__:rNP.W;;6JsXiuJ@gPT#2:&5C<F3qrLFQB[6;NB]TKLWN&Mp$qj+^,>of5!MStnX:iaiD<&rV[>]JK*EWW
%.K`t^?G*le0m#"?.LUZUaPHZOX!'Z.+'liOU8E/pS/@5c(#OF[J`sVhhI#1;jR,o_-7eM'@f3^Z$ILKf9s/T2($]D&@SDr]?]&P+
%>(r:u8bgR'>o)hFTB^`Z&k8l9'Q;TD$AI$SOJAbU.r5HWrBml*K=?C]O@/YD!"]5:N/=89!l;`o_X-Q.$o.c^JlmmtKJ.dTh5.'K
%0M5I&UWO"/_@[[Y)hp9rhjbDfmAe;!W;XJIhD^LalQSDELEU)[Y(]o),"X/81dicBYTS=klHDcC-@f]j,B5k((WC#A,hEu`+G$or
%XNJ[7?sM![T>sMG_0!pni+WU^e=r+6EkA'SRo$77pX19lL%)`hX$d)eM@//b=#,8+AYkO4aX"GKBk0CL[10,>)Ni+Z&@2J2<C<eS
%M&<'IA+?R<Y[F3D=(Y_b98YHgSBiJD"Bdljo!)<lQ]9u+)P:P[XIBkY&>_/2-u.8jak9%0$XqNjDfnc!PHos3"(ZNX'UuI07Y:34
%(OEbs@ht_G=b%31SY,4h*XWhq[2N.:Q+@((]p=0#M;,r[/PQ^pRg[6-H<dN3$:Y25-OI5!QW7+H+i[+rJ9PY[c.=:kgd4a?!i-Xu
%L/<:f^2FE6rURa=!JJ-M)l1XC$k(:k\N.%`5hR(Ikm@k0SLk!j-sK38Wfk1,,%8TO%WH0beY(7)OfGFecU*Gg;]*ZgZ*^V'A9i$K
%#\RS<8:3*8U>`ESbF8$IAsJ;DLUnF7B1k[g.XtCqF3F)UoaSaO'L`JgO)N7f(Ki77$8J'[JJLA?Kuko[CA1!1),eslNXT2Z7M1Yd
%:/;PG2`Du!MQ\hY:;?R#UaCR6'*@.DW6&\$*ioh[@sh;\"&"BO;1u`8kM:fk@"`g)p2hR\K']hb8OOo+h_!GSYTOT<,7k>\'flq&
%>psRgX;Vc'5H>otT\SWe,S]Bt<%$-8577buQ\6%Q9mA+i$?m,n?*mNQVO+b+9>MZK/j;dQ+;SE#erFQp8EM$p71HMU3qg+a4tYUM
%cVJQ[A/$/M%@f!#&l<Be(s*rL5jKNhLhfR*pqZ/uPd-MC]=:-5,Joqg+fGJ.Io[#_^qH*oh&d%?q?8hpOHLFmm3dJN#V5dMd/\1<
%W!Km`kJ0HR7b4tH*B_KGNV9dNouXRm)CJQkYam:5"6(>Tggo1@fNYu>EshON8=GWnNRU31@`FNtfg;^JF/;fQ]*Mic+Ub+2XUSX-
%fI@:e:]pTS8HBBF8Nb(cJfBoYKYuJ75jD&Y!n`.RYmg8Uo*?s!j>A5B@TY0VOk+"^0soe\oEd:FTcKYNO[DDj&DP((V+OF[&.fUZ
%@lhmEQDTqd4@$\5LDX#E6ZS2JMHP^2nL@[;DE!:n"5'<k&0nuP,RQ%.Me@r'(#<h^Ft?LMKsEhl9>c?iG?YeQm[L$u]7u1]Ac(su
%<ICCEp`2*M>*k`oAB2(peSK:=r_Pt@lXY)9E_%`I(b4gY>=`/<n.\E60p+te.Op3N861a''t&"FdM"hZ+(ll;GLoBF)ePl_r#!<9
%3!e4!V[,/rVa(R-Z]td3B[?3^<flUofJG!N=FS0-'@W<&/(,'"C)BEsf4&ahkub%7D6U9OSQ%I=ra@3ZX1pKG+5c!c>kL.q5?oiD
%.CJibPN&NJc(Vq3:YDa&;Rm/`XB:S$8gL#t]P8-iAB."br41]4A$&`D9#NIEAdUXt;@#]&\qs9NP@tK4d2%I-bXt7.C8c-9a"_)/
%0kh#g#YGdOEek;T*4*Vk/;,ZjOF>E-9h!/0Boln\F7Ml3l:nJd,g#cfY*:2;pAdWM@V"gCf(Mu3OmRfHgY.5u+AN8l$N6'^EEFUB
%?`7SY<W7f#.B&WsG.9s^MmnmQb!_ff,H4.'%kje1Hu/\\Yqaj/eTWUdWQ@`&jUN[Q:.q^J()D:d1"nl08sr0\J4LUB<?85X./#f>
%Yf[B;kKo*;KhiU/7Q-r@.-e'9A2>EL[6l;h\!Xt^gLH]o,pgb*:7@+-51lZNG[fdJf\%?oEe(.?c<_utr[L"@P(<rjYb;!bob;Mp
%d\2b`0TTt6&"R11-Ojq!@fHeg,E];fb`7mrbh5W6HeV'-mmpeO(!bV;K=Ylg^;Q2nn[q"ahl*t6VpR"WWL7"4>8E/,?^TEcYS-k/
%L7m[\2uHKq`E5uJ2-i74&jUn!ADa6R@;U3]@a(<PGcW2:nQN.pE>%7WBrZm9A.:Mpm3I#t&P&9$a@1H"(28(qne$A%Ip=^4A43ln
%W]FFW7daZc%f(=@H59FDs*XQ^J+.U_FD&_>81rA_q3XH0eFjA6G`,ao<0/C&,4!=Yp!)PWSHIB,kGEk`?4C%16QlMV^,THSEY^B]
%]O@$^knJ;!".OlKKrkKEbqVP`.GC6f]$RKp3d&ls2"Rn4d[>KI"J+mYM:"e5."WcD3jQ.iHn)B$l[>CMJj?-!h,`TL"&n'!gln`A
%F/7=%c.Qr:]j0b3f;HL&S/U(a[aQ+n_E1W8e"E%M$uZ7,oqu\ar?KK?;*Iq)ToTq6I>A@J[oHL3UJ%RQIDOaFq"0\X=oT+A-]&Z^
%n53<QX$&l^$!,3*'Q(A\ng/Jn?`1!CdR1&Z>pU.(fWufLP8UM2>DlP2.dCO<*l4sq<_ljg%\Ab%NpZmRY\h.\eg1Qf<"?qiO;*K8
%n7BqOOPlRFs"&?m8hVZJ(?#T0OU)PN6&KefI+jnd-<;(71Opu$Wf"2EYtq"\Ie&QU;WGQ-OM^3-.d7sQ":o*W<H8BS#^X9[H[]Q_
%9M;T2M_^]((bKcMU[X0"Zg<i^70VY#,Te'U/p`?7ZH1ToA74CGU\:UW'CQX74%!m)S]R)91_t?b`*Ja8"&JW_'YbiKP(O(JXrkS*
%">2:!NC6R,EkLrKlE?Gk#T;"m<nF[A'&Tl\n/&4&)@<U1oen-dZcfU*I;j5toH`%1+'339/YCMQ;.L&kC3We`l*KoQ@Fl-bOPHac
%7o*99FP/)dhHk[$&)C(^qNl],'[\"?J6J=eUKg04Y;ESD"PZ=YDM?&s!8CEeJ<3?_M.WK9k7H"k-E7ger[tZ"SGN_CJ-gjt(dFhB
%:22!H'I]Ve0.,RP=[:,F'K%7BX@@nf6abAY[g:`"(F1G25!0j]==u!l!LSFC^!$XfLp$??\UO@qYJQ:4BZ%2/b#5D(;W==DZIu3p
%)/]Ok(nM(k^ISKdkT(dr?h>4h@mfagRN0;d%]Be,7fcYUlmQ-r0h<a&4sV"2]AOA?*;ki!$%^(#n8>u]#$\<%k`J<kJftch3Ul\Y
%MnV!rn#dpFRX>!X^J.ine,sMG3Q4.eUZY3Wn+Dq<PmQ?eZ4UB%7C2R,b2@4b6+"`Cd`pQ@*b%BHGdh!%Cb[2Z[@7K^Mi;1$/O>rT
%BOSQ<`@Q`1*+3.4>KQ'Hd#9X1Q/0h9KH7U/Q<&6gWoD<G^Up!aSf3sLqf,5fj_FG9h>#Y;6HllZ.kq*]V'Ep7qlMLTQ%e#B^0Et&
%dn'/IrOY`Rl)Y-*L0Di1eNes'FR*o8Fi8i?QS>W2o8,WN=9C]8!cbG'W=aN[cSYDM&<N^J9"kW`SJAuAfm\-&M7Can*<[\(4S:8Q
%`HO-0T`S>MfTDECY<0+59ER!I;lV4k^u?0P@)aJ!:p!>V:sVu;+s4T7J=g"f2t-'D0j;LF8+(@CRo%fH.Khf<,Z)Cda`n<\=sYt.
%1W:MWf#.'FTuoI'rU+EDp*XVDl/MXe:S"4A`2?F-5oGP;/:_\C4jB2UT]17H=l[ViTS5\n;0>pUqfe,d4l3m@LFVM7Ur)q!0)j-a
%H['mf,JfK=qA6JE;(shRL/2s4'&n[1*pJ)4nRT*-D'ZM!Bl.=`XB#.*b?-*jALbD7EILrdC@?dP#(,l-<VZ(f&N$.FVaGb><FZIm
%.`c10CS8Q='>5_^5k/i,[NDN+?PJis%EA"k[g`r/qn/ItMp3r[IZKp&3B/FP)!^[j."^qmB&Xm#hY4Y:l+Qr_-aqJ\Ros1/V/EVW
%LlG1Z6J/<.V)".0U?;1p"9S2?Aae8Gl5RRi&6J*-\I4XUBTYP[>*MLX,1H3s,%D$O/^0OII46(Fc:M]LXDqlV8XG<?Lgqufk*:*t
%Zd-R]\ULJ3o'O]ObX"U)N^FGKM5Yc]6J.(+a]cD*C3#BH4(<F6o#JB:rU+9DY;Pe_Rn8o)%Ag"d`?9S$=c^\c[7jZmX-*dZO^RbW
%E@@7/$G&n4!=3*6,AC$],(TI;,R&)uD`!6XiQ*!=J=>l6RN0Tn(9hZ8)Hg&W$E5!T6.NSd1l"^Hm7*;FIX401%lM>?]9u^@'uo[S
%RFD`N>ChudHtKm"7Jo<i&gJ:^8>/0&^$U%<dX,i)T@cfpK+k0`L$Wl7.EVc38#[A6ff5miq=)/<s$pi36)$$HYV"U3<cTX`D*Upm
%`2\od[YNMA9)qRrp.j_tUb3!Ken`?L>omH\XlS=n@\]&F;&,&GXHO0gm%]kn2:i?r7),Y]e,kpkElW/O?3*rW4R+?"09CR#,\\=e
%.S3UUP-9VU]tENP\']P^^n9=Mr"sg(1+IShD5G9\#dLE2D"'-<.WL*V46X:dIVr3eHp\@Db"c)Zf*g;=N)"6QY\CQ81t`(GCF0o]
%FFB5`)cU'Mcscqrm*sg</Lt;DIk,j\l]0f5L,Fp7Y#$.BBD\A\q"H\0_mVC;jtW42]K[I8R?+nS0Rjmo[Ki?slKR5bn(dUGCFPO6
%I[li*-[*sp"AIQ"rNrunPSDoY#WFH5T_[eMG7s(SLu=.D0l^p,j@J\[7r][WSMXll%%;Y#N,K;ro3-;A"&3Zi`N?8pl="a2]Nl(B
%OKUQ:+'sLhnIYD2k7LgAIC_5l2_:hMIt2J*-WWN0$:SQ\[WAim)C6IMkU'&]_Qku<ele0J9@X!FDu5:&<#3@,^XSS`P4bc*YP-!b
%M9'pDe4qQML*Kh%;f`F+<JEYR[`$4icMG@Jkp(rajd77ND6bHlaHn7G-:`DFPsl`)K)][JBJW/aLH?aSE8?Nb(3L%;2:ZR&9iV/J
%RHtjse%8]]gIfc"F&i[EY@1RgLI95?:ha6\(o,Z10tAcgLr[+drU*\fORPDT1I&.0Eb*>)b6U8S#_XCo2&%)]a`b**6F^!&aR7o/
%&I;YT3CYFEdZS$=PaSDO)I]6S'W,&8%6=,5@4PAP/PL8pR\C;#U!QcPn&LSB>l0U2Aels/%lp'MC:<$U90]]ZhqUjR/4NAnEZg7>
%FOT2o.hQ!faS-&-.(R'`+`\RMa*Y:D_tF9G0u&L1lMX29M,.Ai'iEm%b*\lPIDYasd>++^0%O;bbN#A'=Ip[32?C]+dr5_UjFc/E
%c,tbmCqQ2"n2b13A>Q>H,_%3Z$S*-lJ6c-sph!8WFRYI\Xnm5oInR)AT$R'=e,.s:s37)K;2h<jk2F>))>6fe]7ZX8MQu8c63:RU
%,!.iH>^CDEmqsGYQtsC;?auBZEnbCVoHAmk_Fl.7:.cU]#qZs/=7Hc6.#3&G_LQ=,%&lS5ZZWT[4;<?8Ars.RfOm`@8="#;c^-@N
%'KG#\PpaGqM4Os=)Fr>2W'jAo[nA$a$W#s^h6$;_CO`e@CJp\GCK*`OSssHNCL6B@g+:hdY!]FuQbd!MVZkn:"t@JO,Q).,0YeCO
%^"!)k,9Rah_B.-*WCBcr2k6SBP*9ltC_s\=M1Kn.Ao!gDBZWdP/mj:+"dYVfBIK4fDr`hB(^Xlqe(tO,4gOQRVJKuA9#1qFE4RjY
%2^<jZpNNDXCRC[A^/$-_'#n>UQ?C0jTELgh/4%crO^Mij9A:2L7T'Zts0JS\ZZs+I&U@/'D!:#8T-:FA40XutUIo1L9TR&RCc!:C
%'#IM2X+Crli$jrTV[,e:"s;L\;ggJ$"ZPL*aYP;RJ`s9]U19mL8):.9GS)Mt;UL?dR\j.F0/mQ("?"oK=ZNO_e1Ts0WZWpK0Fj:@
%nC%.9'M6#g6?7E8K-^YR-@3ME>a'25lc:517%j;a\B`nm2#u`Fch5QX:V%%oO0<+2d064@-^t.:"noRe@2LGF=Nu1h&4oo]FAI<Q
%])q-&\Y[\4EAm2kFW"U2e55.P$hdVT\;?$/_SO-3W<B*@J3j^Y+It[\[`IcSP.JOj0\-aH7Ogeb5i=b,YG_5/"9\_ppGCQC;!<35
%ddPpK;P/!TI5dQ49b%n=Llc<f3*YuZWb[U3jta7`(u/`;@H,iP\j#lmp0RIL6B[2Mk>\^s"T0r[B%2'CO!G`MAid!9OE!-cO@&!,
%<'kGU%.+k[I7'olECnk+enK%KF\bF,:rg?eHEjT[LM7(^VlA>TbPGB_0rd-a'V@7'F0G$/AesetC>^J@Um$N5;]*GfA;CB7+0M$j
%/A"+"G(D(4*')B)\a0T#7Z@F!ZZRQ#ZjH,)$rRg!UJX0R\m^HV+\ia2)8?ormM%,+-7F\cjF*X+KNc#c.(2!lr@/jd7EOlKI]+%]
%[`t?emuR&F5.9*=/W)c*3ggXs&69bR(]Y_j@XL8dU5sM:qdpc74dtl<@K?]!UB=ADGd:J'LuVJH.7KX5>;KBLZ;IKS!W]ODCr.Tp
%!d(u+0V;ALe?:F:k@6(o1to%9M(muWjNu6nX9s:*koUqJHar)mg*Mf9<9;A\/:KJ0%lH_g]9cX\V*-q^lm9^0+]r^=*bD^?UW&#>
%+`Ch#9+Qr'Sh9Zq^2N/mhI?o*Ikq*<`$UR.qp<s'_d&^#r3pMJlQULiB?BVj^Y,,2mZZ8"*7bu92EXBI,Vj:I8"a"]9"[`<m*+h%
%qrQpR17jFc*9NC"cjJIEHG=N8a>N*jp^CRGfWC*VHSsUi29!;=T,cW-DR&dq:B_2h>thNi+352t^tnn0+lVA]iQ&S)I5<&@*dd)u
%p(J>GKZTc/*/gA^e/8*X#%h8$QL4M?Atd*Pi>c=N_\-QPG`\655;ZJV"Q]mUZ/kJ+D!3/1R`M>AJpr<IJ-tYbA`Z;35t>$:'Q#>A
%J^B9K14ouGIZDulf!0HSh[_S8^UKmV@)LP]]grF-Zs<COKT</[8Q@<j:?BF2a7T#t0q;S*oSr@gqolmK;KX^dTq2SAF]F5BI"!@t
%Z;OjMEtAdI%KnQtbigFj/#n#DM.&EHn/KoJ%$e%AIRG5H>>Ej5B7s2_9miq7PUR8@jg<Z5qj;.N`L^RF#m$O<`XVYJ^,+FQ29*D?
%Q!AZsYC807.8!:-eOh+Dno#]qR<AfW,G$Tkl?F9jn)!c_FBkgDf>];2.>9f2&bcK0EO.+MCkT#PM^'du-[6b'(^[ZaVfp"k?_6,/
%!kqBU<_m*;drZSDegrRT^]\Q!*[W>8l%I6AD<3Ao!E&&8lMf@3Bu@ugo'+G)hos*RF7I#UQX"J8"V/9jr9"da'o&<]d9MulF[k%f
%BKlZ]:%S4+pU5#%j6G@5&uN9;g,Ap.9'dkt7+ct_IB;SBEYocc+Vj*=YiG:8C6%RH*Z&uF<Rm,+:sf7WWR/,Ui#<n7XqHdAd3ai,
%KaCSTUgVh90:2A&&V*Q[m9"S2Wo98]Q'g"&0;eVI6LMPQs39pVH70Y%l\&afeYF(ScZWbb9*]rZM:"#SQ7/CJn)!f`P[#='=.2i>
%ZDGHq&"?;=Q6J;D$3ndRGn\DW[@E'L-3_lL!=SD/elWC6?<X!U_F.nOD,RM"=LR4)7<hJM3N()DF]5-"/4J-tqD0plRN5^bc)ic$
%'AH\V^W]d)ncrLFp<B\o4.$!%<k(di7J?6kF3&%BbnLdhVj)Vpa5$C6)bRV)hRi0E8\&m?nsAK_%JD&O><N;LM"M37#1ncoYQ;(o
%Zm@8=G0RFmDIa\UCE<,lf6h<?@n:b=G\jtm%@j^4*p$U4RB<WY^]M_lH766A-na7DRVKF)`%*,).`*/YB)?1Hm[_Q$c-8)aqDR[Y
%LJ(]\\9*`o;F.MI8nBd"6qgNF2NlVaEf37I]C0sQ'=*g;s&)g$EI1d0NEHec,XRd;_G7okBkM3F.Zc/XdY2:_A)0fqa2ponVFO%)
%J7*Y+gZAWC1?9[+)/%JG"OR^1:CsfFZm-g\_J:`CC!Vq5S5H='acB)^Xg(+HRI#-Adnd(EYK68U@S62V"?ZrQPSO3`4*p%*ckk!'
%C>0G;TWh:ZA[6HUN\)(gKV"b9@ii)p3^oS;e.2mN9HuoLm:JBLVd%B6J(/1!KHu`+F_#2fVa+QMU';*\RG8cieOi,`^]<_lq7]]b
%F;[9Mr-3CJ*ohEAO,Oo\cQ6<s[%N^e8uLmo8C5_].CFn_SSS[cH"#YH'F2$16)82KWEA);X<ZDT'T(YG5NeIl;hq*1TDg/^6_4$q
%:sorg#N\17+^#/aqHI'A,M*<tK+\WdodZH[GW"A;6MA#s;YV9N#:WCng+As0*S8aM&`4GM)n@<Mfa/ps_)2KZ_/Zn(Wq3cm,KcAa
%%gSek7)Q8q&fJ?>RpE<'\IB#-95RaKZ%Na8C$$^hZqmXsaO3UeP8^p6fTNrOlD)T3[D`&qPVN#ehO3aMf(/Lfj2Y_e.WC"]P=55B
%eZD-\JPfTWlp+pkl-u:G*Rf_O!f'S$l=!Z-.=r6&,lf?aan1r@q\>/lVAmP7ZB>E.X8$'IrQa+\>6^0?M"P2TL\j@%1L<(9m)FI@
%!;9iRP*c<DMKe4ZL8ihFA^UL]G%X[/j$?%1aD4B:Ut$5G(u8_*8jje-JlTECnH[Hr/ZbC["q/NOjcUsX0k/adNZXR-h$aF^4E_o-
%4.=*BLtV]oo^)I+m?2,3Bm7@cMg8<k(sMPJWKmBrGGb4+W:I7Zf)4LZpD_4\m_s!4PL\Dp26'[j38C=hIf,*aR3UBh!aH%OZ-.r_
%jY50LqgR.%HESfC^U_8u$,tIcF]UeVd1WT%PHbr;V*>J2:):U9@a:)mqVjU!nF'A:%:U\P8o-Oe?](<^Mq6C=Sg]/R+fE"Ib38mO
%Ltn+Ep;1c1JL3-Q%i]):=C(,rKuW=d2f[TcR-oa0ibt:CVu&1n*5IJW5@s"0MsLl@*!67-%cid4^`nH&LP7OC`dE3h2m<DQdtBrj
%SZ5os^*`+B^?UAneZH.ujcGiQ2iWRCe.*-ZViXG.dr%)_:I.OjXlq<R<sjI7;o=-ik,*U7:MO:_a8j9TbCLWXDO4H<Bh9^^9.4Vp
%c&E!L/@&dekbHo>0P9P5F(_p'C5@7a2f8<?5+u$G-<Da^mmjMtq*(&KR-bZ&U'fHAG<pEpn)!eu^ubGeJbO(1Yad`o4iHgOM2JL$
%%)WJip7RUX"5>/.V"W.4K"^P*M6^C@kltg#Q+M?pd2U)eMqRTMA=+8"FIU[7ln^t')AUVOSV_H-+J"hA_B*pHc@MA%BS>WU@se:r
%5iH4cT'_;:@c,p8Agmq=1HV,YNG!9.eef_^F;=.O[-l]4#XLq+UW:"@I3WY*5&9@0[SntH(bm"'4k47/QN21?'81O)rY6f]JRcG"
%Y)/q.\IDDBj'EK68XKlLZj+ujcN\p;r\]?daj[.fe4-sG@!1$s$?KW9XFO0Q0&Zuge?q(Q>UN0'?VgA_D:.gO3X%[&02<`MPLGi_
%-$e!AA/^RD#^JkPXIr,k.JE>0DZC%!B+4dX:)`)k_6gG%#i_FC@&cn=T>=egS3N`dbnbo<Xd3b/qZ3ef>5L\HRqBa1c7j*[a2DCF
%Iu1"9!A@h<'5.i7NZ[PH8AVdALMAtikq/qgA-,/k&r_&<WCgOBog92Ymn0E?*5=I>3(C%!Mc*A[*Jn/4?!:ae^bE7'cU%n#hS&@s
%2Ugd\jn^KEV@r8&OGAa-=GcN(>O>.Q4ZC.uFZ,$Op0;9,f`Ict"IPWMN*m^&k;)8bQ)IWU1Gb'qSe(UU4-K=23IGq]3FpXS?cq!S
%AKsr)l\G9o2pjS!SF.=Se%:tHgY40&V:]T@9I<V_W4VNO+B@.1M/(e?VRD6@Yb#[.B6Sb+21UlRJ"a]s?qq6]3'bUlXh+%YgZWW<
%2YEM0qB2N%J($lc35F@U@kpP*RCO;u+T<"Dp#8V14iVG]%G/&V_Mt?=>fWu!^1#e:EIo7eb;g7VhKPU5$?7^)*se1Y8$HjXX1>rq
%)L2#9IoF/mnNp^6e-NpmTGhD`g11q39Hqnd'FZi8`q@5_"]#BVd)WcmIDbnfQaN30V7C\?WMaN;XlXGiM8g%uM!4Otfq5B:S?-38
%M.ppJ7u'\hRtOahCnFh(L^*L11nmmQDoeTh(E%-D'h=BeUJbm-1O'JA/er8^_@O/7&`j'ENj<O^!#9;O@*VWK-2`Dnl-=,&YeK#.
%r86:)H+1k.luoh$F)]U495g>tMF1u-7ZPk8&2'>m?JkGcP:<DP\Mq9B2tbXRB^=F-pbk[2mDP2nW&t.,.oLY]+AiJV/I1:^F$Je@
%BRiNjB=76ig^n2!COin3We%HW9EB&J""ZhfO]!GjUC0%#)7_eARpLe10(ML8\_NV<)^a%GfD[jp.?\0iU+]3.`D/D3\S1oF,+Ugh
%.\Y17NDMCZEK>>4qZ^X4D49'0X9iMaMe/"6(rs\<,2ZcYG6S*A.B.B\=_9o%(5M_!9.6=Y,?)d+!2UB6F<_p%%73p$$YB(h4N#l.
%fB?ToW(?4b+OeL!<do/u)/)kaSh!iRXM,*D+?>kUH8X/1hu`@Rq/7X*s"I%9Yg8'8XhG8G>BAi9U<Q5N@AE;&h+WXD5Y=AIan_q!
%.:nmRS+.Bi+qT]^KC!33j4>tJYjec0B&OYNIc.JJQ]I3$d@t&7,A2(SpfVRGI1a#2*c<RIN"NXN'RE<CfZbrANM"MgNM,iR,ekRA
%_`f9gdB^a,%$jUAJU*u+P:^f:2+s>)>D%W/M#rtM:%G#dP'K\u+q"Z]R5Q9Ypn=F*%jeH<Ve/K;N2B&)J*/W7PqecGSMi[d'WM9+
%F_rbRgQAC>?+s69`=dpX=Ph9d6S-J8B)@<cQh#T$%Liu.>_@'G32T6X)RY98.ZD?T?rLpT"s"k=Dq1Js6s[h20Nb*`3mAhLk"K.e
%-a"6Pe><N-lcij)hmF&$pWCp8b;KfRSMWq.ZuaFAQ>=`i/3?G.=/J!H6$_;a6c(GC9_PTMip?!O\Oec5Wi<"&'nLm66%0<DB+H`=
%Vo;e;"ohJFE@\I2jei0=K!V@%@JNSpZCU$p)@<)RBGsr1RsWhe)`:?amKWb+^]kWrDaeb^.fj6FFU2Z)Ju(q[]W.r$0XJN_ko8$W
%?EYILYTQusF`h1EegJL1.O;N"e&,+'b&u0GG?60]agZCPPfu/tFtM8?GF`^S]L^H$,SV;!o+hK0/UHLZ>DXp)P<sp[gs?.7/V=cG
%.%/)h$Ugg&XS?bjm=19a`H_-&C<W<pp8s_1AWsMD:;abFadZ;]-QS=e,YXJ/@'L(Vh^?.?CDQ>Nj1ls$Y]?ZnpZ?mPgGa/bmo'<Q
%`TT2EG*a5<_.N=38tY,#a^G8Q0<ph9@%0<!T?V=>iIt(Ha+mpbSA0YR4AjAqE5N(G]^CdGFrt>4)3(#&eB?:%)KkO8o*MJ(N$>np
%42c0eFU";jaObM3:`]IN>\+5f"?gse:%"PSjLj;qoMOdDUMLGAj3i:ReS$'nr:8n(qn<YFHCkuN.CR(Vd$OrG&%9<E6Ws.(]\Y(U
%+u)97YEZnE,B>NW%+Fh5\AIg#@!Y]!91kfDcO[Qj96AJCEjaC(PJ'U\'0b1^`q3_-XoBrYf3oUD%0mt1W>DeZa:ortd60!dbkFKL
%ORI3E.H3g<_Ghb]\*94KD!`3r-EVRtaZC,8:Q13?Pk_W+]D$_(\,.dNi2<U:,VEf%T++ej;Wm5'L'44aVN"\`B3ieSW[f+J2p&iq
%ap].^F;pEHMWn.mc6bhQ\8g%nR_+>']-fhE,4?^W"#,lnissIelW@g^WrFrj6&fYME4WcNmt[?@higl0kYl^7rC4eN>(uG3KZT+c
%Vj,JE;T?kW`jk(6dr7Kin/&Q^,J!\8KBO\@;Wt>PJ$3rRHGn:<h>^Jt]@i4.)SkCn=%hk2o'P'A._Z+JBj7T/0ocu@EOnEeA1Q/n
%[\.NGgsC8_/O,bhK:6R,2&Tj4E]:OkUGSLF@He8i>*DF1Ak"JslcFUS3VpG6A/*ZS*6[+[VEM_XVBGdh-Gb;!3V*[<jJ5')l,UEF
%I4N)0/pm)cMGgIkaA>I,NJf8bFj#>]e@XKQ-e=rR[OX,hAr&#adZ"96l1iM",JCK*I10+k#J7X'%n"uR>U^dSH*<*`4r%@a[cf2\
%+W(5M],HV[%IqOlY(K'_L0Y7KhcH$?:i$!@P0#ktVu/_OVWG8A9)qpq8Zi<:%V[j`I+UYe,/noAHf$b;]VolNQ&-3B-7qX-_4?+/
%[Z.1GSJt$8,;b^Rc,@(@;h6p,kqoiA/YqK1EpeZ#2!r(k_Q\3i>NPRmkZsoaneS2S%3kJjfZoI,J@%q=k^4qZ,/c9"*0hV,#c2%5
%<Iap][Vo]$hnAsFhG1q2@\msK>uJ%I)n[+):;mtk@qW63=E=4V_H2fmmeVYYN\^A&/'XsVL`W\1I&!HCI@M@6<=qBZ-IWl*4/.;R
%;uR=c(Sf88mGu\D23FSd/F0l,%S]lJ#!EV,VFh>f4/aS+==!?+Y$7Oj6RDHF'i&:Hj="^Gal>499f&NAmnEHb1]6(ps38f!]ZbPY
%=86o=F-3,,$$`WKG02oqhL*>C90WPe05gW@%=VIKQgsiD$cCL-NIFY7aK`e@nB7$(Nfb:3qd[_>,!5@%)j-e@fU3qhj!nlqMU)R0
%FO^@A:PTZXm>ssVqoh,G8*`+S1R!b;reS5roP4&`&$)`=4iur;@MGWnr/2oNX1>rQJ%p@#^TiuCZr!EUCAUDg:=,"hHZnUXlicEH
%C[<@V]LN^a4Ef54]=sQe^$_A>,rO-YFs+m+-mYHi<W2J5g7#)`(,Kaa(!@YY58ANU0O;$s];K+1dKo#696+*okhF>MmO^D_q*r.g
%6qR]AJg&:9)ab4?I6n0M!X.4p7D&iq.etP<(jIpi\+70"?2SUJ,noNoFuG+U8h+#&V:86f!qoTW?(1Tr!f6[Up?Uu+o]iStA9V7[
%]Dk3n^ol&mLH1`+]<`DF._e;P_[iY*!##E#Y;(VG_4oE;M:(+YLf>JDC>:X,:&X"`RJO$#Ja+jqV&'B9>RhL,bYXUUi&'46NaALX
%(j)<@a/ai@r5W\-gLl^u,Jj9F`W$Yf]DtH$3C<.qi]8np-]h0<\ZT^'aj'X!eoeO`'>@YWhaRM#L`Z(i.WiZEdseZG&.TjMf0iP+
%+^0aEnVTW,=LCVu6c!=\dUe\)ZZ#?7X'-sOE:'c.'08MmmT7m9fE,C'.jQ;f1q8uQ<HW=!Ru/1kp5,o'NXolR&7KK\J1__!24gi>
%:d:*X\s-L>d@[M<#Y1@27DQ%ej;n%M=fR!J0,pu+R#VkPD%Y1/I0nK>8^k#jh#TO?5E)W_Sko&iMg*iY@RVqfCe$*i]Ca7+Ci1EQ
%Ym-j7U#+$iO-$+q@H?t3?pJi"gC;9XGcFcuEO9RZ*pUHS5U&m'i.?rZEe-lB\nCNmPNRkd0nQlN6U4S#EQ6OQHp]dWA]JjK1h<.i
%N[1n\/mlls@uGP6$QICd0Q1/W]qH=;W`hFW/&c_hWo$L4b#qKHp0/6C8hT%./tn=!]^.JO%Pr2[h!:t_Q2>?]X<+K4q-;8OZUM<[
%RJF*-n].RHG;>#1Kkih:mG$Qrf5poCg0O%VeJXLQ3pg$B>/6$BOOO:M:<aL2dpjnJ@g^8p]UU42]cH"=R2ccT#e(LF<bEq?f#:(5
%@?a)H<-+QRP"7WWe<qhMGn$UlK:elbh3tgc%2qI00a%g0V`pMQ1G.3q^7O_a>/"2T@CI-;,RWi&G6!VC2M2>*HfC9!p*o9s>(hR0
%fNoZghY)p;n#rnN"X^\1RNSgmA6naL,N"4OdZfP<-@g7n^Ce&15et1f<ZP$,RhL^lHPk3h$aFK;1)?tZUGpCUcYa(@UDj!h5o_7P
%W7s1H-^C23*7NGXN;X4%0e"(a7%1fCm!V(L5H/\4r7442e(OLGiG>gbD6=uL)2IIS6383u8#al1I(X[T2^4L$\o&=VT_Tl_8Y[t7
%F_1if&TBmKkY*Hi9Nia`gMBM+RRG;PC^1n;TnTSprs/uBIc[H,=Tqd%q3tcYW*g)@QV#ng*WS9CEhW,#ZpW3Ue\s&pCA[-mj+j_d
%I1UGDeU>d,qBm$FQJYZD^kcki+t5jc>trH_[CofG%ZfuCR*_BsC_Mm(DYdC3pK&0tQ2o>W_W@^62S1O*'/o9f8D%J1A2`Y1_fJ(K
%B[u>)/(dU2H)?35S*nFNmR"B6J0DViWO*l#2H?oLU5F#m<>2sGouLRu,[$/Y:Q1Ag3A'[kJZ)U-#Ku_,r^jN/j[@qO_U2(`e9p!@
%KX(GF/V+0l+Cpd!1:-GD'lt02oC;6choOsZl;HHHUVRI\*Tel)W@TZ--5fq+!W%Vnabe!"6SXuEGu]fH&#oXH%IY2Q381Y([i/*J
%L(\=m&ErH-@M^/@JX]3+"2!b6Bl%c&f$]Ql^70NNF7aD$@c!O?T2_jqDJR+00Y?lCj:13OkLh"j/n$"P8l(P^ae@'_3kp)lgUFK!
%^UdSb"?+`MmWn($;K-rg-W8d_n*u4Qbors8278uUKfu$FZLOcH@?-l#jFTE\b"RN`irm?hFR:>b?Om.I3(tLk`6q3?m#3M9068a?
%l9;4\W-mm\D#^;_>pQe<&:ugLBU\8RV?"<G.MD[r7ea1+6`G8E!^,>Qm2NL^YHHJGFcRGO,</d6eV2OoJhoKh3mF3Cq;TZmdtoBC
%bQgVhn-iHi6Dn>ur/u5SMMdYV*O;KXG#i6L_C/t6/Wkr]P>_sJ*gG&I[h=I1PR]l<\L,TK=qcYKc=HsNEo!I[P+5q,EHs>TC[eL$
%K@h@(nEtGnBFe0\Z*56p0NGcsmi2)X?X9oU]hnNnj=lQil9T?h:9koU0nl)Jh>^6JeY7aSI(BZMr=hoF&81GN[=k_\>SA+aH[,r[
%P+c,LX"P+kL!U/G,U3;\np-YRP*(qPjpD02D\'B7dm'g<=,lIOB9Me'YintQqet6i.In]9EqLR@j5f0`I-gCdGC@C"roM,1.7,`@
%&[4(*L?@7I-WE0*+u(+Hn)b%\gYJSH/Eda"+khTt<%ZOQ9.F=;V$PPZTH6LVDFKSIj?k'b)I\[H^'V7`qkH3$2g&/Ll)dEBLakMf
%c/H)Kk3bq;:TDtt#9qj?p#k/lL(;EDmFXA&16oS5#@$7=88\-HpSMjTF+823DS,"DS)@c49E?k`+bETk@'cWmQo70dF00-sDf!bb
%[;^rbFBi3ON)AZbZ&%A4H1mqW_14,jMO<jU?u>E4\SGG<=@H=6gX'B)bFjLbXA'LlA[TaQg&=S)\qS?9Fs5SEQWDU$jAV@K"]LR!
%=sA"O=km\X?Jb127.)]]dk+&r'U^CY&_^_F2jLanUd\R=m2ipdb\l@CVg"7ao.k;&T9G7!R+N!"mrjJ4)d2Uo!:X'r8lYpd[PR0%
%D^imSRk96Rp'Q^49aJC6rlEd'1YG!p<*(1#%i=SaI91EQmZssL>gotK#F8+08,si;*q5b$h"a$\<bV03nM*ZKmbI7)n!f@/Ee<kC
%kGEKRaqW^i5tekn#^?q<bV5n[ZCqtZ'7gbP2u5M=:%oq<ie=#\n;S6u-=?dT]/,utTS+i1*/\_dZL7=IV>PG%.5hB"C:Z;CIZlFA
%46e3%;N-;,C9.RakORSn5V;5o>ujPX4T4`mfW8[&i`Fq+jZic60Q#97li7N^3*,f_l-#.p,#;5Pq^/Ke6!1cn*(seh[=Ut-?HC#B
%pYFSG\j*5^3(S4Z3\rH;l:rR&+<Ddrh2rEDHoS:$<T>+\Kp-h<fkS@2V`RDQ`(H"9jq_p*DnHe7iM^3VQpgD7KJ<-sm:nF=&Jm"0
%ZlXPY'rBD?J.#c-XtD#?5A2$sV0,rh_2h6qX++9sU.#+:M:BeUbEp,:TC73s2\K!\E[uXP_oWugLS0N*n0lT!A>cXKQ.DMGKAo6&
%hgnAOJ&d=47!SP!(4k4Ih=6Jg\bie#5@/brqp3p_%JbUZWk3KL'!ToZ<s+>c*V]Y,$ui@u@oN;6a-5BWoc;q7j(gA%KDLYMP'_?V
%V9?OF+%=6s8GLS%D[;l>UF!Zk69h;mk7;sd8eOhO,`%Lec5]mjN.br2Ja``e1qB+##Yit/V;b7"UjBVQ<`%ur,,gg<?7NI<#%]Wk
%]5`ks4AG3G0qhi97NJ4E#M0;`\eX?#&h_c<e1(KQoqhPbf`4?<bgX2)@#/ANT]R[bU65t>FnI&;U=!o';R,PC7=(_\\$iPZ1SYUL
%V&I"ZJBMcE0'>SudXR*s(D`2V!>3A<DNkr?e61Bj)PAN@.)lQqW2gqfX=b4.5P.5Y#^[-+W>\Idq+UhMHX#ohSOho>@JrVNU/2Sa
%7KkVH7B%pD_W;V->$Ud?jU"5a<tst8#M&$5#\q4"%f"2,nMVqcPMkGmmYS$1X\W+%A?g,p(V#6g\A'Z>(u$b^m],1oQ#2#[q,Ben
%J1#H8dH4>6R>UudMGUJ:@h&i[or)%sig89b.-t)*;:d2a!TJNTgIa)7@3HW[n?l7r/^)O*$lS_a%?^&]f/Aa3YC;@7Fja`@5kFIZ
%8:.MBN]$Ts6!q-F.jS),%Vdn,$cj\sPj/QTpe=OAk]Hp0,e>2V:Y"+@CmKG\3UFrV0JK:0!;3_34k97H;OEZ_F6QY);?<9(2#]Qe
%1VueYAHV*_7^Yl6?J;6EEM\<+U95]DLJK=9+)r_iT3X@`iJq)9j;;p%^lXOkc0ib[Q[)o1k$&N#;N]QKXC27BV*ZW-:<]_@:nFQ$
%$mJ+Db9_+D&R-4UHR-fPZ@P#WJINWG`K4M<F"3;K=b:!SRn&Nocfib"CViR)o@'6tooD&W3sn?(4HkbZG3KY"37O9YScsTXLg9lX
%$J6N]1=tqDGQ,t"05OP-':s!Jii%VZ[B%nESLY2Rfh(_iU91-J,lC3V#Re#t5\J!GF5Y(SE))b;<WPLT7\L$m4K`dM6:ANF:f:7+
%g-T!X2)>r?4\C7Wm[7^sRS""n$Y/+;,Y)$R2X0Nd'M%&9]Oa\!<SG&7CLG%8l&B\S4GCA>3iL5l4PX>(4@[e>-3=^W2eITsk#C"V
%2j#k]+QrqpYQ>aq%1?Yrk8il/I9]D"-<,DiGp`Q/M)i1C&DD*a<cu5'Xk"*?eV^QFpNMUgGONUS#j,nA-LK""+j'N>>51aGif?d3
%0LAeBER+dN!U*720^2/KLL.U4bgl@CGLI<JO_AMtor&RfMVL'd;W4[9TVQ%%%r$*BE7K4XJcW#6b$aHRKGVino0fS`NXt,\#t>u,
%O8(%o"JN@qZ$9Q*WWl!2NYU\B!!Aju!!3#<h:[5.,XA$iHBEDR"P:"gB@2ro*Pu2O\kGW*#$?.uMMhF^,4H?PKGM;$Np&dRCXcdf
%_I[lAN3!A%9(4%X:fnCKj)XJK<Q/Nj*@,Y&o61AY"[gPJ7j<\@0p`d`h)^kNIA+5NoN4*IJ]#OmWdhscO\#[U?=N*C1qpT`hn-am
%W7gF'T[=sK8DJ?Y[n>86bLS9:+D!rS,s8.6$SYTDlN)c+AcOp:N:dV,@o=!*M:MhQ,^%l(lG5T9W,JN[-0'oEjjPnmW!"m=fS<gU
%SkR[l$m%_:OM3l<8HgcaX/WgamsG($`YZ=K$7n%f-+SC`9!1aeV+h>0StV;b",R+R5%Cdm)5dbC:K?^(&0t/Q?4U,FJVnKW*D>X/
%]]^.30*+_q#\sKQph9LXmU3h.JFJ&#1^!-b.s'l,VH194j]"\jA/fWY\UJ&)SZl03%p)Z'*W)B,[FLS5m@!<"XW0&mbS+,J/=V3p
%S9gB!ojW>6pA5lZ98&eJKIrm4;bdXZ(Og$:)Yd61m*MVGECfgY;L;7,!)3_>JL*6H$Bk.#>6'T3#nc5Yc;tRB(5_dZrZRI?7q:U@
%D[tHi6*tn1EBAb6[^dsJ):VSEcuOS*7"UMSc1ATR4546#U&X@:l^0WikO5M%#ChRsP$,Ic[7gXIYJ=`]N?u],#^LDAVS5b6#D-XG
%&Ji,A_?hldg##W\[jkORDjWX$kUM&!,EYRB_IHO03PSj4.o^@_ruhar)sL%ZYJD;q/V,]k1'm"9lcTu8d2MYAGQ^8LFCsNR0p(pO
%R6LBrjN+23H'D'#`i]r_*"(*Y4>Bj-eL`SZkM[*!^?LZZ/E,2'P5C>,;H!&WCSn[&P]9g$,L4NpKeW_UojPFq"N8nj3+hGl@QdqU
%YM[#g=j.#62"SgR,T"Cifm`."_OA4Z?c4iTY8C33_+<Vp_B"ufh&,2-NE50nnm:#@MiMXUi^M`JWR9bD_3iY)'TE@81J>19<95E,
%AFALG-c(@a\Z8<YZ_M#t5"4rLL*:u6g>gm]%KkjX;;oT73$V^-JQ0G3d#W_/g$:WS1OIZ?h50ZT#;5.._['f+gI=ULk5Yksd@Y[\
%7FD18g;.:pC7RQ^4KpmtpE_T-91<q>F]*b:d@pW5).N,RfZKIB-F7P8pcskl\8sh(hN_F)%VMag0tUi7h)mB5A:093l!0Cb*:4#5
%iHuMee:fW#<jSj)+\,*<V!g!"[hdk0Mff"O%H5>'9/JpQRm>*l')LDu9'X\oIH[$mn,F,:iW&C5mTGGtD,_K!de6\9oKm90;mY*+
%>TnXg6Gu>J;SC8?R%-@`K^Ui!LG\q(7L<[ic-V1b.X0C9"Z80u/:;P*Z;],g5n'h76TB%sPR=:]KiH*mVUXPNB]iRnpL3))fGia'
%4XO\\MKNbT%/mPH`Mg$SGT#Ea'\KEooDtolgWegj0F^l`pfSA<%h#?Z%?(lXg19Bf,1DW=%1[Ni=.lIb^@bSm.Wm!QS$\mDN74lp
%^@YV)*1&"+^G(Oe57D=orPB&1iT'K#g:,Hr';Nk-d2&T2JPTY?/@/\;m9:;<FgF`pi%frt?8^oc3/Nk:$;W(BVF%='i_KD&43p'7
%fXVUI8%-2"iM8i&dEjDc:AV'"`H+D>:?KYX\QZnl#FZ/J1FF.;-dIEgfb"KtQQ**!3[h8PfT`;n(1J+1[kD9p9e8(_@X^.Rrnn/9
%Rd8'L'9&ksSoPW]`tsN.=LT-nn05%UFn4?V5Mf:HR=aC=C/:]$4T)Q^gl!VNi3V=mSfl`1(/6?Z.'gJ5QL:goIKZM04PPGkL_L@f
%.I^Q?kR?;6jP@E[68qm2ZTaDE@JJMJg3H(Bk[q-ZG%:U+qQl\,G5;PM"U.Db7/%tni*IpMU],9Jo/O()3kG43+4?'r1#reOg^-NH
%_[gbb(lMJXMb=@!ntjOt`3O68+eQF_;>#<!LF(F&YAAVQLAdh?1F*?mp"M!YU@YFTQtmXR7pp^ZftW(?"M/Z2Q$XUs<1X1'RGfCp
%X0ARZqq[g-a%;:EEdMJYnQFI!Rd2&=rD6],GDhNa/-C1sB9&nDj$msTlmpn@&lX>\c2^/qScj=3j4Ir36n=pP%LTMr4E^J0'<Z]U
%fl:UDNHC&Q,GIk0,df3/9Oc7bEG[LjCQt\Tr:M$K^<EJ/;2+gG/qNBP\ra7:42A@sS,.^`5QX4%&jkI8#RXVIC-AgJ3MaI=5U)4<
%08Ib@3Z(-SR&kXEA2TrZ+?lr>P`idbC8t+K^)km`IuHVaQ7Y7;[f'1ukT-N)op&9NiUrjm3E8@EUQ)`p^V#Ip`-JR\YuTEqN?YTE
%Y;!!r34-00+gEACXQW/3](FXW"piUaOjTC*,)[Pe$9mGdODR?>(4gaN@Ms-:[4k&uUDZCq"tpI^&OQsDRUHX+3hd]jM[n1rg*1OR
%),Fgg#t'StZUNAAW6XTcj>Z#?I+B7+(B=Kfloa*Ik6iY+3$a\-T-B3TR1Bmf5/(QJ#Zf[s++%iD;>RXg5)gp_L(F<E)lfoRPi]d1
%87%<,oCR?cpM,.cG+@YjR5<tZD39[i$BrHCO2osrZ_P;Z-+9a;G^O6KQat0Ij/`nF=CPS!83&R8&u?N3@EdYprRb9u+$fZ:)PABM
%#Qb8k[)4Z/HqBt)k,^,GV$]$Z]324-ln(222\3$'[fJiH4NHV;eaX<3f!B.k[b=S->?#V_>+qYSc1k#W8\fD0SF@3J.bf^OrA4aM
%fs^dgG3k<8>rc4]rqUk&Ts+BKO,Xsk^YpY(Qp*pnq:-G%p;W&JPTV?7k%QsL,&P2'.7_fSZ=g4X+6?+!0iB9m[("_Xc*2qfT3+e0
%fjRFI2>Gr\:,q<&e9[8Zb]-gH%:L#0)&boTd$S#qbB`e5hcqW:_jBTj`.;b5G@;_<iiBa4P$,e]<t@TU8iE7NW#1Zt\K)+VWh!p2
%FAD!h^N6"eN3'*J^oS'%g,XH(ik\'8gT7*)`CgEJqQ:q++TKmqAi3c!ObKBsWJ5n=K45OmFH@O#aZj<9+t'N95$B`(Hj$]W:loQ>
%BTdCa=;_LU^g)jUEKReAH0Q#l49P[i%`t9Z&1e-*C%6?Ua!&,(NQN)hYbET$4B.S`99*6d2l*\BAM--Sa@n?cm;'#TGa0T<+r<-F
%Do^qN)(@+`_N:udm&o"ds)YQfIcB66ecoo`/4KK7Ft3tl-,ct(=,Lie!nMb$U@tf?7^GbAD.SfO8gDU/J>!<_*k'ekF[rR$s#G+_
%B*q!^%EnSMA:T_V%qhl0*f"e2'_LrV<$T!&5`oSQ\:tW\!JQZr":-sZNJ-W@]^23UmAheA22kgDm'=;MlN96N+Q/EOE"j%VU=IU'
%;rCgfp*qXPL%#uB;Rgdq4uheO5KS=$NVk9`r&6^f.Ub_Zll&L^mWB.h_P$:+4q<.@]s/foKqtA9j5iB^'Y4s'DRmS2KP3!c^4LL=
%1]`K:d#c1l%JhBZ=%k!;<NUNim'joZj8unR")/(=LP!!mh`F7<J_$+#\,>m_##Q5#]>-VNWLmrN:f.u#Gd[<rqoFi!dMKlOXA[0E
%p,/QP&N18^&OS!d#:+)XB^iJ6T]9SH9dRm[c^$%h#qe_i+@!d`Jd3FI)cFX5.A"QO-!4/7&26;m-]%'h6T*cLP*RUk?)Ei=DGL^t
%=-NU@SCW_gl,1oOY9"Fb22#Pp&ZN%*;2"jhTZ,:CB.Y.s5e*M4:/dj.r,<@$cXr'u!4`r]`$`bMQ2=#75/In6?-BirG&67f?UXl5
%aQ"eKYYk..$>@)>m0=#koY_D<c*A]c<s(M#$JZIJL2b8k$K%<EM*UKV$[]uFUh<sj"Wq4_Q)o4*..&RR(6P72UEnIP[<_T.C`*WF
%\+:bDkRY=b-%6KG+Tn>a:;_tEf9?0k[EO3!JWnce:&QVm=D4O?lb'-jGF82/7Up54XqS=E@XlEHQ1f5_EXa2Wa!%p%ccU?_Xd!Y.
%d,EtTgL1+O"KAIBB$?+d8A5Sg?lTgCB"/`(S[j3RmmO]XT5lni9c[dBQQn#?XL=bdXn,7[.etHVG1de5J`:9'$!IA3.:-01GCo"c
%=VY?WJC_sZ'u9MLY1jrT6*cg4+nm^:Ob6BRXob\C9j@9l-.]X4!!,s=J)$UMIlk0P/eUE!En4-0h,hrHiqP5":LLSj(f;bfp**V:
%`@N_%XGVn26%r$a,2-9'jO"A`8"l0R0Wt8j'53/Bh2*33gT<^`S[9a5nH+cX!gHUKeMKH,G6a/m<T;h>&VLt"JP:$_X4qM^C,U,C
%_i</3rDSJWUId,2C"P1#K6d0!O5SJYBn>["QkA8EM-87b7Q_\Af*/:ep9;C83sA$FN>n<-gu6De2cF5Uoo.^Im.ek:5?N4epS^l[
%>R$.Bp&fAD><j`2Fe$QGM7@DV7%-3gHWoj@K+p41/!]apaZh'2;C2?OO0jA@.baR6[o*Kh)?eI'TJ2@Y,%3u]lr/A\rjP]-"!E`a
%W0AifE-1qnpc+;Jk0m;7OuYM['pM[?c*ONn9R!MbaWJQci":WQ^r*BsmM`)S5`083qY5)n5P?%*0kE>OFh6FN0c(9!Cj,$Kb)1re
%-\ARK>Ut+U']b$7.+,#b[JN@o]>#/;(uW69c1hn>+"'D'$BJ$_@E"rCkeZh^[:7hYeAt5;!:P.:".hSH31I8^*bpL;>Ghh@ZDZ;4
%P_/Oggc/hEjq)9:n#XunIg9UAg,R':Q-D.?Q!1BH_+cTs^)KsKplWCq&-hQba>kZYd1GY3k\ujg+#^UB_W6[\\;!a4!YlKf(?(8^
%0a?Mk;"C$Wm8d.nh;;hIMDS54SCZKZ0YB"]Yr?e5O_/>?l6$Zu?i^76X5ns?fuNUWSRqZecf"RbCH'l^q'22:3iV*6)2'$EL1jlQ
%;RmANhT`S:$7e0ibs5\Y#:0m7KZZ)'amtK0BsMCq+HfBq]E<@s'JOL@;qn>-%#YgmN.(P6_]!",'<>h!eE"X+RI/%`KKg!^,KE!#
%]FDufp^50!1kh+f%@2uG,t(m"UT\-WWD,`-p07F=(1a[1$8Se1V'=IjUe*n]=2F)W9!f]+3jiGQO[+^X@2P^-c+?A\OcDH%&!2Cp
%\TO`'BT*f0k$A;_iDl##cN8ek]qrFRfAu1j^KR?B4pW`bI9Lsf!D'>h1#gPF&#2:QKhCi;d7>8(])<9G-h.igP1Rc]a=cgHB&1VO
%lVIsH?!<J\QL'\p:^)uSKqp7nCPoo\.5@<o/%TU819..,"dpjW.(U`]es@<;FZkAM,mm&&qnZKFW931CI;COp6c!qEn8!`.bdkjC
%SK&-Bb0D4T)&XYH>Frisfgb;6Y'%X:)sh)VF964AcVP`](t,k39_)1pS/R$p;oJqJ#1@oWZAKkXnFL.b7\VE3rM\+oeG$2$B6=,B
%%D.4W1Is;52[)Y&B3>[Uct7b1VAPUc,K^WF)lqe6Ui@o66)U+_8MU>fY]K@9N"NS:IAeOp;JFC[KcS*n`0shup.-3VP)\5mJ0E%k
%D:)/ji($pT8/c.6[Str8i"r4,+R20q,csU)$DMLg-b(2p4c6%[!!BQ9j\"mu;_$G7:\&b9PI-A*Ls5Q24m&c!p0<fubkC9`MNq[#
%#L#+ES:hZh3Yi*1!qXE[aNlXD^.<%"eY<B186ibkm8VOAT\bjg3.1Q7Z0iVXPl01/*@#/"(t,S:%1bR#<R!B5],0<,!FIL#'lag4
%P"KEOjmB13,K,u.(fNV%QsI^C:\D!/:ci>]P)7P5)"B,2,<kGI8=p,*P,(Pp!Lt/0E'\BN'Dkq0Q^[O2L\*uc\QAl;aMh2mlT(ih
%0n-9J'g=Z!Km]&n;nX+59Vm9G6us45dLf"UK$1YG:Nf*n+c?"-Lk&b(1?Y7A1R)IJVsH(4r&dGL&H<;0ji8.EB-ja+f,(IP'gS)0
%iLple&@sTFm'<D=?2h'L3'mLBIqOA?omh!XYfLSb(0QQ#U5KeAn>8'&VY&#n\:IEj2l)]]&*9I/Ze^-U17iB\T$MQ^m#Lr[i+B.S
%*T@?fFV-!r\<m_D2r\$q4<tk/<h2ZES8402d-cXl@8Teajcn;b_LEhg\Lt(*2ZgRoH4H#[_3[`Xr->#1!Z@U]$'u&/mm7j30dZH\
%:bPYL]$+sA/MRt?j!GH!pms4_H5R1R1Gn+FFG<t[=,pS@Zp/5Ra((Nedm9BVeDcH"3c:(CA&[-GeE`!!iZ$VMLdhk<[827L?thXR
%OJm6\@r#?8fK7qBSP\/m;E'`qCEe:+O=@3@i!!;S7l;Z?D.RG*.$8:rV7`Y5R[R2Z,Y)92F#'9Qg7k+[OT-oRr.E'[D%j7:du527
%C!=@e<WPni_Cac(9J;tj)\luO_nup`[]f)"Oi705PW;4H#:*9.H8QR.C^aQR@q?sT%u.VE#j<M+VOT+Q:Yl"oo46OPXg6:ANj<[j
%,Q2?B3eaQ+8U5<fjKONj'YWAg9^mWkXsFYpV]fk'hq:a4Mi0F!kLgZ6qQ26_j6F0e\/KF4K=4jT9"iA^2l^>3?"mnTN2UQ$+3qEC
%95d-qkElK'U8[1EQF<-tW*4A-RsN[%Tu"Y&'r-SORJn.L'9[6$>uWs-+rN%n;GWQ5/Jo0ZP4aN5He?#?Wtjs&29bpI?/`ke*64W4
%.Yhbr!m[*-aH*QeLVoA$pMf]>4b,MG*Ao=bl,R%Ek[,+mg%t+$Op:khD6l<]9^Aus>M(l54RARUD*K_cH)`Q?/Gk6/^2P/XrrUF#
%#WdAb=,B?#X]ebSVS5pKj<=lIL`Ap_G97pY+,Ferrd0Be2<]3OEi;Paa,1j/#IYAeSfR-EZCRU*NFIUL>[5<UY\X]a'&k=Vb-0d>
%&/#eW/k*10q!=Ri,e[?1L8MK1n\-:N!jOi:)t1?19%I/@)dtNeaW]Fj")8SI9e-d'MVZ/4;HOD^GGOag1;HU!q&)eP.qu<@+8'-7
%jGsH!*?&EQ$J\cV<ec`EPVY-;%:DtTqB0)*ILN9B&As'1+D@753!Cj?a-)l9n?UkQ?k=b)g9JQ`3Y=`0_h^CJE?D\(U6f^lZkdd/
%ll/\UT`esr3s7p.j$5koFR2/sIFE)kZM/s%+>C"'79kU(:X?t*RSqVB@MXVrY$mA)9YksWNZu/M:;o:U`6]7sjNukYlf:lN*&S5J
%6$#/68;f@-_+7"I-Of$OdtZ.X`5dq@UoGC-d14EuJcuQ#cr<el1.OtS,K^Mae,PT4Z9puFoDhTjFr9:!,+7D;Q5dhfGJ<rTY4Zp4
%p.jW@7=P!A?&VX$?a-#;JGP&.fFAO=Cj0*O(fVm*iIW\RPlm+I=RPkPq;=s,rTs7Vr:0AHoA:OkE]g9g*+@$piXe-%BZ>stON$GF
%QB^sF/J6I"dB9.SnMpd4DRXP41GQ<I)qInZ,R3Lf8@#2TDC4j:f:$3D"d4=&ZXYak&=#!p:IS>3C+dLTpZgg`inK<Q%2FSrl>Fc^
%7+>_To@/-hB<EY1[Ih38DANH"[aA]Rr%5r1Fk3V!L]%MEX4XFqjPpf8;\1!!5cPd7ejm3uVWH/Z>3?Q;]?N$rksk.[23'F@DtkM:
%N-V:0_Oip^&2JPd<.[D)GhUcUrSZU^3O.DCc0a&'8KRR/frs%"VL,?t7k:"Bm!nUZ+Y@b[jh3\3'd8CYmVNT9iQo,EQ]cUT<(J\(
%+bL<+hZ?_%=FFTqPnR-b._+Hem.>Bs0A`,aLTdRZ;0B@bo4ltl?nLi3qqZ;^GND`8l(Vi:c#oQU>6HT.QtX@!-RX#.Xrjb5bt#[4
%(872EGO[:<&['n!e@:hmD7au@<d5]Rm$etU4@UjHdu3I>n8dZ)bXo"UHSb]aio['Mr$Mo'/8MQ/]8n8ESt%cA8hST2Z8qPsG!)[1
%H<N8'5EB4q@Drk58(aD>.T>NWWPp1Cg/coWnW6ui#b:2J(KEGuVu![_eUt@fGB%iuU#8hQ,^3^iR'n'4D)<<Y:hY^)g>*r#b=Nek
%5BiIgmA0lQ[$oERTc_,?aX[oJs5iYVI4.^J)X1@Z'Wq'D,EdX(9t^,O)Q[uZh>*dTk)^Gm?D"0%L[ss'S*m?/q9\Bgo9Hr`,KqSM
%?b$DQ>UCKlJGBes8M=:*G])t:StpZ^Jde'-7S=r8kl.8BALP[#nHAP*pU(U[cO0[ALUMAI&-Gn:13'8dLcU(,WWfA-bpr$p%PhVg
%Pe8g0?Z^ICQ(ob<i'NG0HtJXFWUd>5dj=8\epqAYK:WYAj`5,7OpQ\:(/oi0L\1HpT/p4/lf:"r%2?cX&(/*AOAjA&MJXN0=U[=[
%dM2/*cI8eO3G])=5BW;X.;02*O/kc*VG^_/MHja`plTF<ZPbB=TRCjQLBt]C(gqlmGq_(4T.8J*.1666'eOkl]$>!@6ejWoq,#:n
%6XTh%aL]gi.sP?_2XCn?`?N;%ClVY9($"<K6AtE>"QWm%OfL"m,2L!;W:m+uOdb@:WXcV.rMMRrQ[h-Rl7$MM!;ErqH07Hr0'1eo
%D8m(q[';U2\uj>in6QWHcXfKa''oeB[^]@cj_ZUu3foq6E9JUi6iF6YFcmL\LLpPXo'Ol[/frb6^nmttk7n;S@X*aAa*uU5<QY<G
%-tOl3OGO'(eVlI_#>.We`m9t/J[<dkmK"ILC?>6g_MF25aa<o/%am7tj*IY<aGCI5RcDO:!Yp_u[&qa%:l1m]F`EOkXdp<%]kC2^
%7ClPgbU?T&&R[a)']RT_cQlb8WLhmPX1=1GS'^r6r?QH5=HiLhS$o^4+M4tX\ot4.&pq=I')>T,)jtD=O2'P.+2$!*[$)dfBg9uH
%=#sr%'_rYZG:A\rJ(#++>-0d5!kmffA5QF<ht=mkSZ>r49)@;7,TXfDA&qk6>13%6??IR:m%)CuB3]rDS1IenYO%7`l%`,^?Qs".
%%rYEENU34$q,"3iK#eg/f;AKM?Q"%`=,`G1Vi5Af9_A?#MI8F4rk%/q!?F0qd0YB/::.SP7#BGkPo5H]fi/7kXH94hU5Ou$%:RM;
%b%m:kKQq)&2[%f@.jXJI,6G;?S:Z7GS_@:R)6Qc(I_9mH+/oFsgSEkCE"WVP87&Lr8l,UGK[GD,#m@6Vp+a4)2-0l3.J^X7!d1\s
%9M2%;.>4UoAmTR\oqO0l@a0ZJJ%42NYNPNn\?_%hZ=-$nq)OAe^#,6u>J0"b>@TeE3&]382t,(7]$_jHM;Zu<Wf_?M9O94_DTq-M
%2g,m3;:n_'Q4l&/$DJ`7<`ddg1^/QBG3bC@2,go"UX\s(+Z5R,O/$J$qbf%)+3GghB@n/l8I=]EPPsq&J+m^K]*`UAP72rEVA)0/
%PK5K&?Z97h2R6a!H8C@hB:uGO^sJDlP?_Rp&Gdi*F!i?,FMTfR<*7CLdF#[DZn6o_Vd,W%"T_>.j;_T1cN9c<Jd5b9:e!9%imM82
%1AWjPV`r>Yc:_g>_@.)DEG@poBIb`o"c-OQ)fIHS]BVju$FK]Hf\r$2#&ITtnje2K*fT]cX0gQs_nfuE$8HR*c=)T>oI$1!F_Ed[
%4kWnqUHJ?S4gOKj8Cu,m4V,"Yon#s/.mdp56OR25']L2o%*`Q=i#J0iD0%u/'ob9%F[cXqoiq/0D^c3`:MCFHXuq;um@#Wmngf'a
%-SL!K;Qj-dj$/6uOO9-iYpFl,P1+,E]g[7CM^Ttj'Xd:ne-U"7kPuoRn]FH].@%i6VY\!lgWek($K0Rj_P7U.)T6QbFuf^bafV7E
%G60BK.N)9o`5*q0T)o-uM&jC1$D,W+SrWeSYUuTOa)iC2@^^7j'e(3K5i^J^o[+aiLqle5#*`UG</#<LWZ<5q0N^6eRd@q0:(.2I
%r>i?A(C)W>e?Nm*UR<SG5D,gEIB%nd*F4uUdM<7g=C7DbGOpjQgSb_TBI^pn[J!GdOO>`$p6jX]pO=pPO'U$q;AK>EE@X_$Y*'^N
%E=^GXl'N&Nq;?a"l,JO<I$(&gm7"HQNiMObqq9`@,gSQ%,Z*VOWdF63c'2\b,7:&4"\[L(@G)93,.5/J&P]-^*R+bcq_2)lW(X5&
%V_,?g/%-nE7.>pO<@p<0$!4]An^U6[r0\Bbi!eCq?fM7=TMJK$p,EAsD2-Mf.,$u3:dP2CUJR,`G@`oq_^MVSOh-?J1ZQ,fm>aea
%q7EkgbYhSScqu$T;$a/P&;p@())\g2Ub:MD:;jF>Mb<):_d9[QFU-,fc-s23@gp6YUN`$hA&$!<<f95gX"=Id?8O[gPYU%_S!4aZ
%F)Q7>D/.,8IAhfX\ALt4)-<'<Tlg@\i1ic>LnU]X"S4uo^JD(0-/$F0ee<?@"a1EO@SB1n\[#cr&MD<O?G[jg"k.>-i`_Bt#K!D(
%lV'5QjX1`h%n#NZ.sQ6q#\jfLnE@1F:Y1.6AdBVE)m2@Lcn^TIa,j((*(Z4m@HjU8_%i$r?d!9;[*@Z(_suLO]hZ>I.>0[^m-(Fi
%I@"eJ](G8Q&nk-Ch9?ZB(eUs'K$4n5,coDQmUoJ6H2&*76A<;B_eo["^L+i[Cgl4UhsNO(FPC:*l2P8]h-)@6Z?*9p_tai9@M%2B
%RW4C5n:S:\7]'^KlsmCW7^T2M#Pm^a+*=;qpV6J#/gKN$>ZmIt]2f:_:hRaRF3_:U(mf/g@pLW^9C*4^Uph:5LK<3lI%@dHnN(5&
%[n)FmG6<IiamH@TYD,nR<>IZF'=-CE3>cVZ>C9D:ot6DC-Cl3XYH1kZnQ#GO6:6n(DB+d'4G(!G$TYdn92^3o8H21*]oEB?TaIN9
%rXjBOC_`,eXqC10)U'G7P]&Mujg+(H9he(=;6::ANO#.JXF4dE=h[\t)!)EpM"`Uf8uH<aJu^/ge)uM8.(uYl"*[fQ6Q$Ot`e[(.
%[US:t`-XtD)hFD]`2JEc6=Dq!3"^29d63]\4Wo-;Qb=To31*Nl5$9C4H"aWA"1.;oG#OI!^73-VMR#ke-ZZOkHdJ%3!fCD#)U1As
%65=CK_qjqCCiSd6BtDDHUC^/K'U[8#708?I,mmWm+NZ-S_rBImG+t`W]N/#D1UeF"n1_^r"BQM--`(dfN1`op]6n]9pE\^@_k.ZR
%(GL+Z]$-!gR`uS.n3a$aPfT.X;m-+7D)&2'UY0OrV`V=V4lmZnO;a.qTqK,l2#/OaMEhTI::;4_J*kh"Mn;G(qPUQJWde-I[I'uS
%.%m:R]Btf(C4+;*pgs;M[H[g,!Rb@-iM;ZIA0%*MWJIs!I:%Rn*AgN,PX)\\A'H^8JqmQ!B01tO^$sh!c&O+gW)ZL2-72N7I?l9H
%7T:-iVR,H^aLo.@!9GQ(XFuLa5:"aS`6D5N(e:C]iQa/$_Zuc9N,$U9gU7E@Lb<o.*`X%W%<m/IRd:ToOulR]Cl4W)4!*eZk#l;.
%KP*<0MIO_FS3DY0L8dSn1s:j0m45tD7d*OSBmeAoQH=^-Q.a<sa"'Q_b,+'0]h'DBq3nM[ks<m].9UphM\+5]%"W:+8X(H_6/J!t
%:9BEIR"oG+%nf>oMOTM/lBh"@]/U=c[!gb1M)o?lOZDkS(aq\U7VoAE9opiiQWAnhW/!ml17F/V\tN,XA&"#f^>W0m8gaDDMU$_f
%&WfI(7d#u/$$D:n4^T2pBK_N]Y\1)m)!*`9]aOL)@;p*QNciE9i!%<cf(UkW4V"l:`*-9iC_I=Ra,iY<,\%EYdEbjYkWkscbfXR*
%pb(K-K0Nc1!pVWqV%($!,gWSD*7dYc*#U>S=hE1B6\ukZ?&;Y\h69QPO<8K/qc5FK[Ue2X9n$&+)L=YIcDjh]kufUBQ$5^8K3\[T
%&m7"5-8ZSALc7Zd.flO5J]#D%15gbpQaB*W[O]k&A7>fVk+YdZoT7oT@:P;RjXXgD6U*tuQ*TcOmre<`^:!qT>9bS9("u*Eei?:-
%c6g@.TM%i'kq4G@S7:`8i%.3\cB8K3[Q_V\:,IZc3)dGph%OBgFufu!<Xd2Ao.o\F>#r<Fj;LK)dC3j_Iae\iCYo9j2c5#AT1FaP
%b3X3FDf\V8;TlChIB\.tm6m(Djcm0.'1&s9./KsuH/I\6VP"X'Cp^.k>9gF-RVpn6ECVs[fdaRo&oME>hS-2\AP'TocFG>i-$^]B
%%i(+@WJeNA.1q?31%U;#W:P^_XcO]9D,tOH;!4E2B7ol0lXmOZ?u%aaWZQ,*rc#SA;FUs.5Ni!H=h1c+#VQ0I=<s_VZD*K94uaus
%MQ.c3#t3K7":IN871&O@-Y@JRp,7jEP6nd5'TA;f9k`[(6b3IVj!L4G@7_A,L8LH0BUs0`'d`7mRIm7CC!X"rA\N(D>VoHibSI'p
%?t:nG%2J=jrD=#^T(OnR'o@>n@f&9hHPc^AaI/c?_a91e[o15L-=gRE*s:4hT>L/c4kiD%/*i`>_"5ukcp'Z[O,l]c#Je(d@=AuL
%r^liXn$+J*%ue)mS9ATg_$B6,F:gH0MIndT.\0%;q^F+9D3>IsfH/TTr)Y,e>/aCjG-E8a(V-o!>VR\%$(Gq#a(P8%&U+h^Bl^&(
%-mhAe#\[XWEP@23[+!9nJuoqdXg(3EV!X!sP;uUC_m/TA1]M3uaEK:SUl4Ssg;=[&/;/jS@k3C'jClW^<4_2^$l<$*,$?`uHF/FQ
%b4$ns3AgQ#d0s\LNm06-F83_kCcB999d4q_^Y'YhH4g:UU2k`.MU8"F7n8@:HssCC4tlU"=jf,_pRDgPfTF_+J($l']!3U&j\*1*
%qSEFp9.l^B.\n%u4=fRfiT`^X2UnkratLTW3L!Rd*cDo<,"/5CES=BZlH5nAAo51&mA";-EkB=/5\d6qF-]XCL<8&qQuQQ'GL.'&
%_tc!+l_u!agu@-Vh^RD,W[cq0g](DOku\4`j_SsM17e5<&\4ZP_r@GW^9?c9lCrMjb(dmrhfN4kcNa7@R<5rZW/EBm!b9SB*jLi^
%"d-T=gk".-M9m\/_-r"\>N1Ar'GgJJo?28)LY$4?>/RIJ$@dn+n6r9-Ou^GOZ"k(pVSXFJ_T-bpAG:Alhsc$'O#E^T46r$3)[Z?H
%YK",r.M*b#dn]#AYKhRcbPA1q`#^':ik3HL9&&7O[(XkO'GZBMgbj@7*?m?"Ptr7LW<.nrkA6S"YNK:-1H_.]9=p_Bc4%>&79_Hr
%[N1,s%J\B[_tnQZa!:(GnV^8IP0WP-W.5/0qhr9(L(=ha0/VMicNE,9E6WYgf`Qk!FJ+]5*1<g>QpI&pf2U=^?_EF8+.C0>2TaB`
%?ER&SXT,$J9F`(S'c2.((lq/HjaAjrV9^#2C18)BhTtSE;:H;b$-(IL<gDo:MeaE)MJ/eh%p,dKVDD,+[_]MZZ1kA\&*L6Gd>:s,
%pHU.DH:!hc*qoQkD3n=T@3n)u[N!M+nQ7R0HU-0RSD92!Z)8TakW,@D4PcT(-ELuf(cQZ"=>knYVD+KpR,[=LSh'N`jl^-$$U]oS
%an-)`I0l8ilaqEk6J;m:BkVNb3gqD)kN1264&(cOCTmLE<!Z2n^)^M8'u'prC+!n/==/V;c8*?o&:e_V@32:BIYYu...p++MJD<`
%)%t9dn)M:nZhrtJRl=9h:lPXd2=@VpJ'<,HR_)fu>SSQJ5\A;O`3qM%!hP+TSZAKlL>g:qBF5>V't*T&7J$s2Rcu,SBEOQ_b@Gb+
%-u17i9o7d3!>>=KSD-2n1^KES_U^K5(PgSY=\A<,a03@9&7>LB^G&NG?AW&c_'Db:c(NJ&<PpLE1qE7r0`$T'A9Z9E+t.D2ndEQr
%`\@aR1`U^.;[tb3R$VImq-=/*j>EAmiF$2e9nHg%NH;27rg3O(]JkRq)`m0O<o^M@#j?V]nj5l,*/CCD<^&Kj6+q5%9b1Qb;ha^G
%<\];VFlRL$12K1^_uQ75Bf%gSG3+L#!C\_s7iTGCMC`3&6@^;j0KI!n9]Y_C3cP99/9LR?p_1R[;UKoT]eHgEia*N"Ee*TZh(ouu
%%p.4&SrWK[Rc(A=i19n.&sNed*>2#%l(VqR4c#C0PSqaVc-XBsn4Y/L<4#P69AmT<6rSr-iQXoiZ7TEHdqCYbP.b:(TcK`@*/\q5
%RdN7!a42m<N#+3:l#PY^?_-=uN+<Y9nudhURt]J386n`M&KrPNpQP75ZV]c9e6/A,$WRnb^>2\a)K0k(=<hLjFu52#:1Y#V;QYHT
%UWLHD[%NN'OEPXp@rAjs;@\'r%4Fd3FGRb=Z\4V+`.c[LbeD]&HWe$f3:3#;8Rr$QoEZ,Ec?5]8Z&pi(R-7'K-jSenp[e%8^qrHi
%G;F3OUFQlKX';,Zd=Z[R.VPWTDG7_/fqW8i^tj]G^!"gJ-KUukD8ed`!JSpclfF.Km!k4PY3eD1h&X1WNWaM/Hp?<@Z2*aJiTFm6
%)ai?ND%$)rRR1X3!n/fE&fcNSb;hH'I3B5TGpX^bK$r[W^hc0n"pTa2fj*)qadIs>,V*S"')@`"`M*]Lj3Luo"6J1HSB%eYa<GC9
%+OnK#C$5JQ;Vn?aVHCt:NItk:Ya&"moP>'iks0Wa;3s(*81RROn585fffA0>Z@^kJ*p9o]bTq?i=Z%;l@sY*,T#n5R`p=k91g!&6
%E+;_U=Ch?_)tb9o3j,,j;.>l&5KbNAg*KlaYAC>G@scbpS/48g^sEKai=I+LC`'&p$j,E.ct#Uq1kD\B:$0fT1Eh%Jl"19WS.9L?
%8>o6_(=Zut(U<(`3,(ldSC>A&a%C;G\\HQ&Wg^ZHhfX)MQ9<dsjOki7"uFS))]VjPQb]BoiO!U^1fgrLnm0H1A6HUA5K62llkS5@
%CiUqJb/;:InJGZ<`RcjlWlBeY)ODtZ@HLCN"AL$OL9,9B[IuYVp!?d@_^m`@E=IoP%>\%87mkdWFR(=m*DNs+d:MCZ@'oEelrjXs
%LSP8\i_#]WLsl(+-90Pt0/eYWS8:eM)X"Q%VXeKTjC$s#1b`b%X3F&i>KbA"?i62a$H<E"?2e`F);"QT_'2ZFhH7?8NANh6Cp'L*
%lE=gK=/n`4GZ9gY6uRt!^/J[,o46Tk6uJd[A!W:c7u%1CBfq77\G9gAltJ*W:iptQj1E:F,M#qFSRU8<R$B]KDdtf[h;u@Th7kIZ
%fqlIF*A$Mc2r&Ho(DIOgd:C)rCoCmR5[\ZRB%o[gNFTf)I:t>E,@#EAL^k=p3_^hEgCD"pWB,E,Md'g[1ZULHhQX02N6\u4%OPKt
%DiX\6_`WerX"%LEliR(FZ'pV]Qj-o5O_e&R0#r%]_AGmjYAD"9JYUHG;$$84$<_)t3T%Kn4V!a]M:&aQILMe`c#%ubR.TjXFb(]@
%$(f4R9M+!4CnnLYfE,^;hDH$Y]CkGK$\V:8[:62F\R!=.=r9.rNZ&=9_oYqm$5hGm(!9<u<[8'_3YrU?MQ4Z8WE2!Gp)9RZU9n\8
%W.1?ZX!1J4K)gdhU[<&=Ea*U'6BU#3>0>3($4%NPe&*-W)m`Db#rblmpte+a_g"aU]ugsKVPkE1)@-Yu_llkmD=+0:Pl[FF0ld#H
%KFa;h%\nu=$VGQFG)]!jj?PM1ZW`1b(>(\9.c)-ab/Fbj?:6+/Ti!1>pJhR\BDGk4(.&.+G`s$J<Gm2Ja2Vanl)R]bZ:@rRofo@F
%@^+\T3B'Q7;si5`C3<[=Z0V0:L!mAs97;E?lD3NuOLe:=4c1W2TKJm!mPNL-VS]7O_sO7!Cf_0%9jc`A,aG*1E:-pq/6?*FJHdU9
%J1b%p"bP<k]tj?i(/:I/Kn([Z?F-^7g)kOM&\"R!_5Vn;;&^qj?1^d0F4hG9K1J!0.&1JcMoHV=cKO4;aSU#AWfa-+5:t.e"4GJs
%.s-rV0Eu?=?T#qokjbuU5BEc'q:L#d0GpUdTR`JsjfElL`s2-BKa^@L0YDN/>+nt7?7h(s]9RfK?2RO7h1Z>\9l/S'c-#g=iiZ3[
%'\PlF/WJMeGgU!-NFk3fW+1BkN:gD;h7PYu@GT"m9a7miIm0T5!L:9+o2KO2W.o\qCLq`"9Gamol-\=MA+,=>$QnbIDkooG>7sUD
%Z`AgQ=fl7iX_Ufhn)&R^pD>?@rn*rl1Tl9Hj'l-t?Qi!@GrVR/lLo3Qh[3#_88V=iTe3q:m-TH&3%IZ?k@P%7_2EVWHR-(K;.jH]
%6?b"M\$?mKa0_b2GP>OBQXt%3CkuuX8$L)nq69ml.QpufBuCa)1/o)W\s2T\FH<=\nkuR^Gtdpc_!PETf)jhE5K=+md<&o1l$?u0
%n*X;&7G'Z0Va5]oF+_Q2CX:k0Sju:@?A`X8(dG_B2#h*Gf32-RXr]G_A_Mn=L`>?0O9o(E6EtR(Y%^CICEF/9@.o7)6f1:AlW%Zr
%)I-g5LMR0NUs7o:(ua:Y@$SOQ>BQ@"lDc'fS6R:bQr%%dSph!TdZ1*Q@Q'Ib@rSCs,;gZZaKKEL+=Ei\<N57:bl+.9D'pPU,.6M1
%s69^#_H*qq%@Beeh$T@3@/i[=$qXQR3Z)M:c=r8$Fu*E\>kD?=Q;LlUZR3;8?`QZs4,#<g4uYZ/[WOIV"XS..CT+\0FRpCH^B/=t
%UODck.8P=F]$RCY>FD(?9X/:nS<gP/'"R:h%S,3X2Ri'7<+rK%T`.iTTPTIP@OA+0j@UTgW"\Wepf-`JQEWLYPc]D[\Zd\^a'OQ;
%SPFu.,Bu,r8'bc#Me+c]dV#_2DhY*,)>CAPU:Is(#o!\/dsH-bFc-mNHZOo/Q1s-?2o4qLj]K*ODlon5$n"7(M"m.&1"8l)bbb4r
%p;G,5'#i`9_gT0ST-\k]_ubAsI5EQo`kU0eHY#W&q7+he86fT.'d1>he7pm%s4D])[*3PaEF_P[7@KgZ5**/G%@VC@\25@1E@]DZ
%a]FC":[HjB5Fm<<G=-dtOO[1h[6k[(Q*C+"G@_N0(\(nYFEK5%02=./No($==*E%&@2u.C$>AG/$G<HG:4"s+j6%6Uo2qe.Q/B[5
%*1O<K"dKNdf,T_6,m$!Khu6'K\B#(#8fV74Rf+VoU+po]JFEC,f^Zs%H(Eig4BMuc'l!(mhl$_G4Em9<:'4m&<;O6:I=Q;sHh[!]
%-u8QRo,&oslg*Y%&&cs0?EFpS$KO>uEp+N*r?WR[Z6Hm-m&M0#Xk(`,E0TnOL#N"k%Zd9SJIn_+jB2r%Dn6!=JIo;_L;Qqm!+tW"
%Z<[JTcpRHN54#"[i4]m>TIX%?U`_7jqak!dj8bDbAaaZ3!hmem+-^:6Eh%>p!"D4Wj^.mn,-l09Qf-+Tcli7lKb6fDB$G5&\Z3rL
%.<kMe=r3Wf^+Y]hUh^`j=[c6d]2kMFUM^8$[]MQ9;,ajoBZW1bIa4p+]nc@-pfn7j><s@bYahDqB5$Kim=ILCmG6$_f;f!(:/&O)
%oR=?aV5.VsVB["&HXi1lFN`DJIE3N<?Y+;!#V0M-C\7[j*nK_ND8F9hg>qZ/0IpC:Ttr^(h7ad;+jMD0CDHN!_bUsD;g@Bdjufn@
%)rqR/Rqb?+QWQYUd^VtYf<dsjRf$*-J?k$dSL@t/BS4a;`aituftQq;[S(*^&[i6BBML'Ga-+aan:`)n8GfC0iLm'#B4dL[_qWlR
%A7@6,Xk;.Z*]9%@2G1Q`^oj-kYoc]_<?bYH0]VH)]956C+\"NP=+V@GEmudEaE,ClG4dg8[XNC+T;BtJa2$Q%&KZ\lI!C3cBPe[^
%Hpkn4DmpA3cM.;s1Lo2?gcS?e:F+2phd_`)_gt]Waq?G[fL0`_mNc(HA0')uK&6J@Ic6mYcB/3X*J*;q_tu+$b$3pfZQP=u&<S5.
%a34o0N]m&t3UK48Oe`2$"&ie0O`Z8n0`,8cf-`&d:D)f(c@2H1_23(l#:F!2:FG;0pZ*@TEo1H1Wj4aH)RdcoL3nd>(5,B3^@P^E
%%gA#tKfb#)S7\OV!9o`pe^(,67&D2!<)=^q(TK@3K`a)X\aa^9NOEpBpW:$n<Xt[q`SJZlDJ*&Mo]#As;W^a'CsD^@L%pceO*4_V
%&XtQZq%6'C'pmYH_GLspG$VYY1665V[&S*[eTee7%"O.]m*Jh`:ITrN.CpL1`j.@BLsG^9Ou;K^AR15R^s&9o@2*WkH$nKX'DCm@
%Ve)&O:hHcB5ZQ<saVukuR2$TN;\6IJ]TMGE31*,)L*i764bRY12jM*L7f+^>TW%p'%3r-7-]'DhdqmGQMmj_seQi]Y6,B^m3"r5u
%[Go&L2Uo2Gs7afM$f=-4&DiIk;ig`&.9>?hM[=>@C,K@GEiimJ]8M__fA,IAP>U<`e..h]3L%;s%Lgr!4ll*sh^%L%oMB"udC-FR
%VJl+oZSTnr.#tVj>8k.74i(;!)%gIW49@T-gM]'J,#aq@8\7rr?mEee]E,%<Dd0J9hZBap;T'?8cfY#MMeLfWD,+._i3Z.t5\g@G
%8k^p===VEF7X]+>-6H7GWgUCm>"<f8L=sK9.DJFoS:F/?KNV\r\_!T-a\aog7rQ$9:Z'#7eMrBioX&ShTL@)T=(ODMgh[Bj'k`Ip
%QL1`[`er_64-uSae)M7]fPX[>fr(gR</qm7G$D+qZfLWjetRoW885\:[>.W?-RF%9>t5!,kdB1$]\Gn5nq_hX-nLPb5cm@JBj'Ok
%W1iGF,e!(`G7f_MQu=OL4MU7h-+O5<1ce^YcC#:[&Os3^XYE^;b2p8i9oiWdo1ZHC:tsr`-FPb<*kLDP-*1#`+8_q:4k;SagK!((
%dZF';W]Y_CrFlVNj.^0gRacP;.;HB(k)[eTpW8pmO1H<IF]qHiK<)g>iFs%SBY,aPTjc7Oqq0U"JQ.]*7Qe6TS"%!Dk6J,c.nY+9
%TrX2EmO_;#UQ/&S9OY'YS?nKj)$Q)'?8DM\+'&>sIY<dpJk'7@KLfsB5Zj?aYr;^hF.VQ\o-S4jku=1d72f]BO]L3<M1X!eUO=`D
%&0-5bBB@K0$(d89!RGBCd79p#l-A"#6:Nh!2g+;V?,sOqH*'s**JKAg_W7EgoF&>JLM*Bm6%KV:Np+B<B59Uk%qfdKOHiha4J0?X
%:qNgY9BD[j/UEUaB)l[(@kX<`\#_fS[1.:bi]Q#peg#_56#V6]VB3>`O%fB-[@p<SJt,ZM/En/76b.AM!tDSjEPNQnUVm@Snst0^
%id4gRYNJ4HloTV`O]TsJ;QNm_3A%J0gSoh26M1\j4*gu:@2;KtWsI8$bM+,$-n+06$sS]lbO%636>+gYP+=PcrbN[uhe:P,-3fEW
%lEsA9'\rhK^qLKb&=_tj8]^0TX`@!(,GHE7[D(tHV&BPkK##9*[UGb('",d&<as6))^:PYc7f7"`24+M`N/%X;3J6+]F'X8KqZ;i
%Vb)8(4`Q2Wjo2MW4BLF;ZWX20%f@pRh3RHE*[(:p"X'4L@F('=!LoMFL$)dN0:cDWh0al6SLu:p$V@"<c/@"fAWGlh/OAIN`$QFb
%,!ctu--]9M/B9IlY/\`C@a<.S_7LEYaDp$+7HY[HG=H?^H1mG66,EE`B?&gu/T#Bp&ppsp,U;40U=&Y^opj3dB=f/4X2hj'fKOe)
%LS?$:@2*>rTY!52fK"*f@42.OWNeDJE;#"I3p-"#C,18X2GMFXqnbaeX@$?J0V!_dEap"J)&5GUOoPdjO5f6E]N,*Ng*aqtFVEG9
%8rgHQcDB>RWhhmt.+*!NI$G(-A%%060`s6Ia#lhNUS"_lH^$]_d?!S<Q72T(paPC=B)dbPL[^`"B:XUF[N4V4.[or@$bP\Ys3rXe
%;E#B[VC$R2/E:Q'^EfQ%[c"/B&it+;NFpX9PMpWRJPQclX!inlT'L5RhH&u^]D:a:G051.;V1Apj\6JLQ1iI/^hm@)VKmJS])sKS
%;Se#Uk\<idN6+s0]!<+V1k_XXp@n$q;'J4J*hDEHKddAS;_gRQHAY0^bIW)[LLBGXRUd#+?')9>:KJ,K)50cGm\)ZBJJH8(PKI(Y
%)RigD;9jegH,\bo=,_'Kni1fh4`FE2.>fObFLe$71,)o?X9r:cI:9%093Ht.-6IE+SU$3qJ$D(>fSsU'`29?M=BXSm3=/HS1"q4X
%eX^DPEnpZGkp`>d_XE?aJp+>b3J7VjmFSNl[-7J1FT!0+fu/#&+^_!8I2R0_7pKc53LQBQG<DlfHFtd(8V5p<[4Gu4.br3<a?_;:
%ieo7+`C,N@VOk7*2ZTbDqF%VGp'u?s):@%Bm_UE+PRr`le?eF5fVL[UVVEc?j+_[:2HJ@_IM]q$R<HIiff=q<4,a]:F48YOgYJiu
%3GK\D-?=PFf9IMKdQ\qkIDeV.Wl,Hf*jZYS>0@Pdh3\?-8(Qbu%X15T(8tF\E$d-fG2KO,n>4-T&KWfu%V^sIVbn+Z17t.O"C53M
%kKq+/H.,SL_u;@5eb?g!_TcX5^4[l:=Joa\T"&0o?fs+bfi>i"X=e_9AF=<4U_S/^rToL3[WV2QGZLdQc,mB&gUfsRhOUq@?r)?:
%5&+WQi/"hbq(fljb_,4@Ic!U`pr-LbUU=CjRB<Lg"rS$Y[<d6qFsq>BQel:?+LWB^M-B8+G1L1[D3;CBpG<WV44Rf\:W"nl6]&r_
%-PtCk9O#B9#aSR<=2bU@BK)C9A4=#SC>F>r+`;:'4cZ1B-I.RWZ^Kh,^M$($Y-M;tjfPBo2d3P]Ft#stQ-455US;Q;i4;C/.P+c.
%mIk@=+)Dt4ReZEd:6-+7LGi*jIHM[u*s5`C48ZR20e#^TWr"b^\M7Sef"b)%K2*[V[cQ2]miDuHg'WDaEb)RZ9-j@]Qk$;<j:I;&
%<qV9a1B_-T6!l<4f,/r4g!Hdc=XfVX(5==q<S18\-e`WaCg4=T*TUi:gS$7`$D:VBZdEin,e%JkLU'8!3h/LC_VR0<9`LjLkDL^`
%+tdZ3^agtLUDpr3Z5'Sia107fX4slO>o@70o+RB-IQ77H:%!af_6R?IJXE%3VOjjl3[0`*!%TLg^h@T.(\3CYa9HIn&9@_=B_GR/
%pOu/A]Bk>7\+PW[YcJVhTVTYWD$G9?E@25'4M#8QSnV%ljQ#$dS&^:)?]&s?(efAsFT*^7<OS/Q1to60).X^i^N7[.VgYIR[ha+r
%%CrE7q$I>+r5+q&2e9K?O2lDcoc29:,J"]U8=+71[!$`c\$86C#CkqN]E_Z9L2C]b^?6E!Y&1)l(@cBHRBrnIQ5,IN`ccqkJ[)/7
%g#`0Kk2/f+pqET<^oW9A@6IitQ<4n;*^XYK=lL\[qB2:t':s^u!+qa"3HWYPb^\SeCh#Y,E2QSF>`pDGM`DF.P:f$V[IR;?IHm[b
%rsr;F2%9d@DEV(ILAU0:PJkr//UuSe`pP`@cVcY,on]J_c]=3H'ZS2Eo8ad'[GIEOD7jX7!LPQab$li0M`Y,Lm\Of&7h.K>8C$,#
%).pU]D'R(]j]0?u)*YPoN6$K,g;d!%8EhU^_UE3C4EqjOBnDlDhNY`MCO>2'o6oJ+B#a_2V>aGW3Q+A[>rbu2Dp")5m7`.*bre'3
%EouLhV5K?A.p^)EGC?9)<G(tY4-0?nBHKC.8(8Akm05@i826C`P(tF(b%M1LnZe?VYl;mA7hiFQ'=.h2G/.NH6dA7LB^0.nC0V\5
%+m':jTTsh>Q'SkQ,:jEA9-HPA^3Vd)A(<8)#dAbd[#[,?,XQk9S7)hWXi3DJ7pq!Dr`<7%O-6+i2\Rdd(0]975gST)FfClC\_(^b
%3)B1)5#=YfJQ@oZ+;m[\,`W-kcR<^h08(6%[cK8E%>3T=&mcR+K)Y#RU&DS)i<d1*Varj,%b6D-D2Nu,L68;M,6!LQbUsf`W!j4A
%lXtPgka8069@]o#)[FFm3h*Q%D/O7gCBg>?O.opid_R]u\7XI'S'TXVEBG.n2f:d654RYl@`iUePsf!t%C)7iI+]K<kGC>8Zj<4d
%<Q*hXkGQeVUlI5F+eh-qBF7cLBKiJR5WgZeDPF+PCc/!2mGQ;gPc@aWm>+k'I9fkNW)#nZB]1u45hE6uV"@W@mB]l9hOLF=9,;K2
%E:Qt\K/(CYfBKR_0N-@?\"0;)[`[sT69j5D7F5).FdL7Xq5dYIp@),-a$ms\AF2.pCTm_rUn8O#/Z3$^2YZ"^mdq)>^DUL`LBY,3
%\$=6O,5?9i2p@*ab(b2^\:DO+piM64]S)pi'u<M3d_gZ><oi3R)UNZ4i<3*"<768\NZE+0:.j^`9?O-_9/+5RRg*:d1MoRkCX1\i
%.sPjh%5#L*T-4LJ8]Y\G*W-b'c?4!gj=K:W?(so/0#>elA/T=PM@Yk+nUOI`4'0#;q<93<T;G,^6e]8aW<iN*[DjVV#ZO2;/"3+_
%c;P&U$2V)#`=h&H!k\gZ<U9We!m:a9M[GiCA*8U<Zf,^S75@qjKWf'WUt;\'E'(TCq<\l?#!?&c5agF[i%jMP]fd-,(5Cci++eTU
%:A35'`&E$%9oiV9][7?jJI8G1U$5:(W5.pR"pumjTb/aB37S`<hZF64Gm^LdZ.`A!,%]m\$@R_%8Te*pLgW4?IF.u/#+WQ(Y8k]L
%p@YKGfJ0!jj_d@(T<;"r'D,TJmXl7k+!=c?MIL=AiW_6cmig=bPFNrDDtC`;O.jB,9l:nS_pBV!ndi8:=%E?#VFbUDVP(kGOpM?@
%%d";t4h(l:X*5k@n1O/18Rh2<Mr;6[gsSHGZUq,?PZ?On6iu;RM&E9En*l^1^2,poE!ZDkOrf#m>**o8ca]PW>3#5cbP5%hQkqu'
%CbU>h&%$+fUh[4%k$2Q+\5k$77GpM4qeV7O@jAtap)V<B^Y.#jra<rShN>f\pHf]K#b?!\+j>Y]n6XLV#Xh:s&1Ja/Sgf8?n;sm#
%41YD<rIoNCE,ad0d(:2RdkKn,QOR-m9h;u(2'"39bT::`Gt88='JJh?q<pYA>qZlW,FUN%=,l9J/q6fm-D2n7Gc%L(hlSQm)-N<G
%@a`;ENr64f<I;"\!s<^hL9nk,:te+$6TuR+d+RXXEj"soRbnRfc:tK`7O82]L-.EF4dDNjAl-)2SlSS236)@pU5qHeiA[:tmV0W9
%aGNY4=#%-AHYb'Fm);nOC3BYkjn?M3PLJGn8WtS"])d1]3_=^i&VM*u=q)XqB4nfkiEkFg^.F=/^H7T%ZqGOj0\ROUZkPE>#)oMq
%\oqVYR(et$4Dc?bFERju=:6`\DWInlWn)QPd[@eQ&Rq;g!o?26H)E$f0j2PhU,):`,;7-'U=chs^lUXkY?5MM-=VJ-D-+d`f0Xmi
%WlqPoK^m88nOLK+>e^lIDi7daYhJEk=GtR?9-Jl=`6Q^m/nhc.Xo/h-J^Z67ms^([d*LjJUg<QrgjJ1'TsVnYkBFu>h%@>/KLfUr
%DIPbO*P<-AFnRu=/oHPlEW=7:J[q7r=TkLiNT.-2No<`PBYabk-MR:5-/%@_7]^P.Y]&V;+$#"p:-B:NEf#7.hnlqUkhiCdf$o!_
%`,bES;5KM3,j;L]*nU<MD7MG1&!Q@0_udB_hY!g^M$4R.c[f:YR@C+4_q#<dQD:c5([`pQa<nG4pq#P<M)jeQG>19A`RZsL_LU@A
%F89[Ra#IkL`YgO*8VVYGfiA[6FV:nD-t/</LW-HN<]O]:0KA%(.S[QoGj\NS*e-&?4>SrKi-Li#2TXGReO1hO(BIE8U!0S1GuKQs
%Z'tfkfQXuS.Vk@\ZlFMt8'8DG;<WM>Hi`JfBk^FMaq2-!@Jpc\4Y.*P\52h7(]^jnM%&H"+ZmmT0jL9=QV#rdckX@N-Mm.-Z&"V!
%1kr6m9Kj;G9qa&KQ<4YKfSJ%XIUgil%CPKuAfH;QmQndLB922#b+V(Z[cbb809GohYiE`l>QQmE.%%l0+p^bqC;K0B&AW"5Unk`n
%.1T;Q@U1%kK#)<deHpAJ#)j$EjOfF(p&&VO!j'QG*J7Hk%W)$$Q?!^)ag]4T&-&fSPI1&*j*f5!3q>=UZ"WiLL:,LLdX$qJO0EhA
%:`NuWjehh4rN(\V->J3DC:5K"S7.uqbkaBoP9g,$FhI@'n2cM!Qg%`>No,e7_0&<^l!p_TG.UP?]$WGdH)Nca2cMc&Hhbjs]E;tb
%ePaT@EJQO^2SL4K*fpc@5'BO.'2I?E'W<tMlG@UjCp[L>=c$N9@#ie[[f_POfb_s?-r(A%V?J9fKsb\^q#W&[?370D4cT\s0@"Us
%S9[_dP]A3$1e#Dp1AG6*WanON]Qcg66)D,G%d!7!G:(5*56h1l#>W+EPLJP&,:U4RF#L-?:!N5QJqmY.9WZW21msE=4202Ndae<&
%SVJ/3e@-p[AQVUjLN]&5Xb8=eb$j.eXpfm4iD@sGiu&$^13C7+b5SF,9[IWh`?=ob\t%.&Jn[SHHV=/U:ntlUiPaQpf;5s^?B?6<
%h"8$[g5YjJ4??2J$+(^chE1jLqZ..BDc*d-'5Bk'VsF1ej7o=h4'$d:e:em$"PaS%\hBuB8"=cP4b;OW&V2h%NU),Zb0HHH.`!FE
%.fb]#2Bc)*Ymk47RpPqt%BLM<W`-tAc_1\j@uErFJJLfF2`:Kt+.<BrClsaVA%b9oM2%ZQ>4K&M'gF7u3q3eV]:9bH]6KW-<lrt[
%-AGW@1bZME[_;?n>eA#,"-@U^N@6**VQti`q0KDjhe[XUGrh1!lhPA.YW62\*mIa1)q?[AV(.S>GK$f;>iOs?>gO(Mp2K2L5HLLY
%70/].D7FsogQnk8Tf:*iSPte5N20p;083X!_m1r6DXW1i?aPm=@,5'o8P'/\]!LmW(fV]B7SrV&+,k%BPj1s*RNg`t=q/3qgZ.nh
%R,a)jmMCJrGL>QF,4q@C1$IBngU1S?[rE)\8m=uL9a3Ai^?ne&T_6Y?HW8@*[f,2HfoUBpOh5RVCbcL/#F0/4>2j2.\@h/JQp51r
%'dhnSlt%\.iA1dVS^II[UY//u^/UI!UVCW'JUBl0dY3(?chsC?I^eXPE_E5M1$*0Fh3.?KVV[qL3T9(*o!a>LhSZjdrt]D,_D!:R
%#u>sV5sQ_PE$8F$Qkk)u3E4mqZG1AcXr@d)7*F0Q"j%Xs;,,ZN3HFSCqrmY"G66j:@41A<]:@m$S3mbidCcgdT!HqpZtg:kZOsK#
%gR59L>\[Djdh/GLnE_Q-gcFXchio]keT4&QCbb"4Q^=;kGF$nhDK@4<eJhnM<qU:5O-`$_^P2Y7,F`X<b/iU*RDR-L43WMrlR`*^
%ORG\bmXq5UcH%6nU9SFr)GPM4W<c_pi?R0ZQt5uc/(9F:+s*?I&1U"u@bSGN!fuh(D.ht:d6<"?K+RR7%.nY1lBPP:1mMj?jGa@-
%C5^aR3SOUk:AqtSX2>E\$3t"*N"4Af6sbqt2G7%qi\q;]g'MMai2bYG/#o7BktWfcYLlgG+IHZK&!")%K[t)s23LuD@==2aX<\R_
%Ec^!^THFYZ(D;FQfiM_."ZUD_7b6F4W8mq)@2;fgMZB(7o)JN>mQ;7=Vf5G:\\WQ70Pg$ZNPX;;QA+kHF,X`09-\74auD+K780,[
%.c32A]+-uI`7IFlJk<cN=,?Ojor(0Fhc8)m9d(g`.QA+*J%8:s&J3sh?S,%J"IRf,m#2?+U:'r5D\qZ,%>;-1g5Ij1;3Qp+A`3u9
%MMJo#Vgdi56pN@THfs'is#fJAmr2!$pc#@u[I`ktq_^b.X-&N*DFi>l/VS7h"YGHZJR#F_&e(m0]G)HQ//1\:A%RqG,h%_^6chV_
%5Ba-G'qG2<(o!%25Ab/amS>3:&-;5),GQLf'>W87fd()8Rg_8J>.r:D8'p!NF*g;UZJdBOEO=.9n=p"*\G>K.;i@N\S$&LFG&8Vc
%+8Iu3'IFW7^3NqsGT4Zb$I$XPP.l/8GE,.R.-esFNjVs><N`TcnsYOWAea!K_plCGjHr"Gj0Bf',g[!K0li("j_cS4f%h\Q<oEUs
%J7*`R)autRjcT+@V0C^J+XdEGhJoH0Fb^K1O[CBf)LYmHO!Cp/loK.i;>)-nn4oU&BhFKKX;a>@!lXm#&kRm`PH(4p*\R#:!MaFF
%KVHmRGSI:*O!tFY'Bce1>#[-^9r?)^3bi$oCr?IA]u65-DDGJN4p'J-fs:.DnQWuJh.KI4GjMg?RueZ-1tJ4dfG&@2f*5_:8'gAR
%<$j4n12j+"m&$9,mo`$l&Uk#kW*SEF2V,.>b_Gi("^mu07]9i/nB9DP-:2,]f)(I$pl0.Y8-$-(lJC3p`0K?Q`I6Kkc6`G2k9=fV
%4D\d<O_9rprl$@:MsMARKse$-e.;r4<$+3k>ph$?'@LHQJ4IN+s3!4Qh29=FB(8g<dt2Cd+H*-lXsJHS09<e6DonB=&MsH&kUaq;
%4po\.]bS>GcM]TF/U[UAfN@q\kq`W^!e@NG&&A:Y)>5rFEm*mj%_uY=h5/!?W:#reb%2hKqpBGE]:ckBl-K+MH4rP^^ZoQj0B0h(
%=:YQVY#j^6bjG)BBF-qZY#.,aSW?k.O&8PlGk0/)!]MKbCK:@PWs@*>joLf*;F^5f6XTU5VGMRC3(i-[16diOmN[tURY@E01#$ts
%:&7-<'aci-8\fCG\Hl"RZ7!dU`,QK5"[CsID?JuDggfLb1n)0G0fc^e)<T/t/R0CI;g@l>5(kcg=I[rL$Yha73<oK7-M`?bYtUms
%SGbg569o48VZSNNE^Wg_[e*s;JhuP$J3ig>q25kfhUiCepoGd@QH`^qcd*MT/[7b#kM^>qOnqM\QF]R8QM1mU(&E[-]^uKD]'o*K
%`sYE$V-S>p#]qYG=XfSa-r70aq``hC'(%o2p'Z``&s,o:-!H=u7UR!.AsTh?JHfVG3pUShp_PO;>J^;fr<ss&:pmK.m1t26&+2pL
%ro7Yg<C#lA.d,%mh80D@a5U`5kMoQdA+\ISiD\&nA+!,>n#"JW(:!&IUki@^HLK,6M25Qqrot&=dERSmb;GBN7Z[:iPGdL(He6JI
%^"U6T*T&Mr5!D]rZTBRGk]%O@%?oC>X.Q_"c;SlBL=h2q&F+Pf0qUOYl%)>X]fO;hC2U)Q&o1:[-_c_H"1H.m_AG/K?pDT/15rpr
%4c6aFE.58G),VE[R4e;0Bh%NgAU:H;g'Sp)5WQ9>_29<Jal6(+!&7,i*rKo7LAcgn"a#\,L9G,2IQ1T?OB'0W;MW@a-g:+6?<(;$
%J43g6NJVMT1e:Yr5!-@BTL8B6KK&@tlW&'0(!o]M.DJ*N!4>#$IOMjjO;rPGCPBlnM&dE2G9mO+:ZRofSdFCP/goq>-f8852V2#9
%45rQEV3-e[q:5l@VPEuZ5@_5l2(nideph=3:!8Bf(Z\M---q=HBUWpOJekLB4sqPhL#\i%ZGPnO=_kJp/XhY=<;AuYYj"3V*uEF,
%YK88G/:Uo8>'A.jWg_DAq6I$X1`Z8Z/eJ!;@$.6Q@AI9:$3m27eGXL&\t$?5B6jMtrp"Q-;ab%K,ZKt[I*9?`K=\hi!3cVj$^;S7
%T'[p(9Xpr+Ik:21&FtOJR`GXM1K'CT:G\+m`l*LAMNS/"1I?\[4jU3D>-?R#%Hl0h$>!ATk=Vc&ZAZ!Z>`S*G2"fcnr^bRNY*,n#
%@GU%V\2E^O\LTIl((Fj+Q$u`W]8"IXRAm.2VsE6l\J0o6L)#SS_*%^3>F;J>Tn_(<moqi)F&l;;TclRA=G6rL65icU=Un&Yp"@?T
%/"B6[DA@_@B8a:nEm[Nn\SLWc!`R@K_WR>#XMdVV25N$0L7o??LOob0i9!sMRVQJsq=54&Z^;S@&ooMe9L_@5A#r#R@aS2'!(&nb
%m"g'323;!DH;CF(hoiR+3+@]K-e0aFWZg?4@Ii:7[ME`iE$p0PJ'r6BR/6G*ga."ZI+FJgj$:8KMkupM'TL;(WgBa"U3%"<UsQuO
%%1i%b7pK?"r.jM?Ke;.,_Bfnd>ht^)%X4RjYh$`CIp<,HRe)8_V?KRN__=VCLf7L.NpkA0p^r4<!I_hS<4/^;OQ6:=]k*XbD(g<-
%&mdaLm@[L.lK92!G=Gu$9)(,&rtCTLiagWs!=@+>Atd7!Ji9b+@$-80`SO!nT(W@_(Yg32._M),>f4nG%)c>ljr)D6)-Y5BC?DU"
%$mTM!.ot,a5L;_(duP/(?*daIEoEipRCJ58Z1?crd%bn=nY-0uWG?'GK,`/A`X$Tg&Os1dj-d'P7EjWa\^NOqFCnuMS5?S)j+XMg
%DA6VNDSZ3m4a&PepTse%\WAQ9Ed&%*X.HB:&nV8UJHu&L-%JL]7/^4Q\&0[jN(L5j@ElBH=E9!9G2SUHeV*,(jag>i"9_,$0fh$4
%4J?8h`$++9bG?N2NFh/iQ=\,a4k2<]EYE8G;m:[8[<[&Z'5Qm)(BqgRW&p'P4ugfgM.OW=T%DpHYE":4;o&;;^IlM7'k$bPhp0q"
%"UUu&o$GChm#M>:$Yb("T>3\)Z2RQ=9)9$[N)Rmc=h'TEmjmT;"nKf-dMh7(:@rhS0r8,Y.&6k8@F69aPLU>7Zs6jF7<L2;L(23-
%-=;eXF('D36m]`Q+X..;'OY%97:`9o7kbFTRSrfU.r@n]Ti$"oMM`s&VIG-Yq@1^bjiUK;B';n/7);coSAS]\@(BL7F5S"RM[i6-
%!*W[6EU^,^V+&*e)qqop&RQ_<cGp6oUO<XEg_@;tn:33,cJOtC?%W+!U_LK4BO0@1qYW@*-tZ1A;9%b`B!<W'J3Xjn#E0mD*867)
%<#W(%F3kaeN=Vt-CcSTjX=A$6)Yoal-.mKlD_Q*Zk\u^[B-8!k%i&RnL?\S<Pa"#W3.52$@6I+%*rI>m`.U:KfKZAC@gQ9jOK!,r
%#7+TD<K3882o("mE$PpJ3\c1,3&`D3)q)6"6Y[/CR3Om,ZOBIh;[QXm6(uIfGPe@lRX]'o<N=0A8H8'U+rLgm0lpg2eQ16ahM3(0
%37:q^6j>[No[9FX.p2hba7W]$;L)$`Gurj?`l'Zq([;3E3p3p@_B1hILM;_Tq6fJ_Aslf!DcL<?;92tC>st6-9j;Y$-3Q;G1TZkA
%!A)0.ZOVrp8<B7;h!iff]<'Em'dJR<b?AN=KAtmF28K^VMX]Q7*ecG1fP/<%/TsJ9k?UY.?R/lN:k>0_C'uR<WE9b.s!^J+#QE:K
%qL)"XH[GaB<2D)M)\7XI<8efP:;@1d05D9%d[*eH-dO4Zd$,HnTCkVI#fN[om2D^bFa^dsK'8<qonV%<?<m2qK!129!?AY7\j-M[
%b?,F4E$=;9D#;?gg9Di!#%I)T]3_=L+trR;YhluaHoYW"I!`+b'(ojfH:U\W@.bfcDC.UJU5PTl@@0%VfC.VjC1gZiq^CpAQi83L
%NQ6ghqu)$>Du,H&Ae4Zls7HBs16iYfIiu6/+5^.V;*cFG2jW="L(L/=]9!+`Msum'=^+p\MMXt4;St(F@Gb&@QV:N+:k859.6&`J
%$OS4mh*J]W,Q,$\d.fmoB$mSq*Y,hW4pk-J6=%ZO:,-_uQTYl&h%8HtC.CLbfXlPGk^p<_!Hc8=Es@C+*14E`5i!q#Kl`&;Wh!f(
%ThD1b6]s1fMRV,=oUq]a*Q4.<H`*hXTbB,!D_6&RQOIU08R^!Oebt66MnDK#<@'EY:2MHaKm?\/Nh5?@7*?_NYa]FuIZ1I*+nj&>
%Dkm&&U$JaU@>:p,Rh4Yd(cT+$BFriI6,lp:;H6bf&8Y(W&[&+gMGrJ1c4Pi\E>&cPI%2GLY!\(9eT'h#p-oE!ElupqGULqEdn(UG
%[pkL?\"mjqZeRef].-S3&+7uY.mWBl#Nac_2giEP96!e"9e%`:E:b>KKndZ=k2o>ZBP(0%(qKb]N=G:mSFSuuCY@l:$5;Xb#RrP:
%$P7p51I;W190TZ(^k*>'>qLd>q^\p?V<"$bl<QJ:T+.G(oOFI"WddU@<M;/)NUYKoUDr,R*UfW8WJZ:lFiZ\*$'YuEM/\Tb7[I<&
%=/IJk]M41+&VN)F]olO7QnLG^WL4t\S"Q1qWasD9A8%"&0;N37d6dd>HEMk1LDp`R;*`$6!Xb]pA.rnDCr0F+Y"_r9..h`DHZf0'
%P<8)Vn+?SED)gm7r\*gA_YdK@-*mlDe/:qbkKVsXp7F3^Ei^qs\FjMLcN[<kcboSSV0@B;Uc<kgcFpo1?Pm:L=.[qqVXMjr,7c1Z
%E7/DSCg`(Qi5sVH_7d;gWJJ'4&/p($(Z([[k*TuDJR[+c:#CTZ]TGm+kD&B`O5sHhH;;a;P,XGPD[cm0OjVYM1Bn?9;Xh$U"+9>"
%q1?qLPDrS.W,OGM,)h58ajJi:Y#4%A-eIaA7b3^!71O\+oCM^i\mrJKpA,Lc`[IjJbSQXFj(g7k9O8-7o1[!5\aSkei.J^\SSM,q
%7nVhCgQh%Cj+hTJ*nl'sdL.gPQG(n;gAqBuEBSDpjf6[JhR&+kNO<4DHWQ(f@omr540Q3cC:F6.IY\M7(gbrSMcELp)ld:O'W'Ja
%h'm6)p&dYKlJEn*Jf_V;\AIEq?MWmKq;1H7=)=H>J+26P55#PU3e/.k4tGIX<I9705`Eusk&\UHM<T+jd!(Jo;nFTQ&M7e>:MFZ%
%+mEp!g1-s+M$'2245@"H/.bgV@L(M]VC%MN_!?]A5?_[+['Hd&4;m-G25\t`cQKkAqY4kiAp/>jA9t=@C\0qq67@n.')$n39Hg"!
%^[]jfo=_0Ip[9+NYU"YVc.d=\_p^s`/JB4O"WSl5""d%aCuG!`OlVa:mso/,LrTlV;QVh)J(DgZ'kcJGVl0iCQM;=rhU*OcJE]>O
%&2n!uTqG0nl>q]@b[62cO\))+2Rspe6WM+W2NGZ6=QUo''SJ.RYrR[*&geei+^ILl@V7bpGf+uZl(,"qSaTS5IYHEG\q=[WpTS[:
%37\\6DY:o2Z*9Z"%s.9&UU1\75a!6FDjiUZpsiZjK6@r]g9<\/Lo]m,>a=BVR,]eeM;1H]+QN;gf%FinW_PHJcC<,EHl+DO:d'+g
%^k_3sYO.kuiTXBY%AC[s(#8*?7]iA^SAHO0PZ+`046=3NcI7!O\p%OoSJU%Q=5VEm6unGn6:[UKgA+dH>@Zr"L_fU>@A9nB*i:F"
%/kpduo.pI2@QT_o,9R/B-YmM/jI]g)""?%kB/B.*l9Q.G_jN[Mg?MER&k8t.5cn_R!bk/j!q^SfDnobpHcEgKA's+%MSsQ"!qb?2
%e>\_c'!1+Z*sai[5"e:8e]1Z#%)M+nhYDo3I,9"DZMeFk4@M)]<+Z_%[;],O-M4sufnH[>L#GKmbO2e#0\gZ4/O0T56/tMX5,9M!
%_DuPDL-:c-UMfiL!O\J@H6f/Bj`=[dIAh6a60?E5lFC;id$,)W7SBqe)1P!/l1l1Rd$DFncG-o<9(i9n,k5[6QTg*oQF(\-#^77:
%2_*ja4#HR)V,tC)/['6<kP)ns^3B;k[^*kWj5"d4A;re(9ZuU</^j(B/d3D]L-4V[m$$VKY%T;:ftXPt3c:8#iI0?O4VhgMpgm#]
%'Dk?HGk3kbDD$%2Q$?+.HF3'seFRc5\'1S\598`&g@BG`q):6nno&gF[(Uan:TPN\`C="("Wf\mbsR@T;O1[ZkNOMSd!<n=?bQp5
%o)5&ur>FTmp_oHZ1L+,I&os>6AI_p.3P7N*#_3fCV]%_CdQ!%LJS#$(RG6)+,F6mQSeKueC#Q'Nh)*hL,G6:+S,0F9@q+ng0q4'P
%OT0Wg4cXW.9<WY&_Dd^Nn"0&f$QdaDP3?`KHV6YMEqu"@=&eX/4oo46[h^Cr8CDp]=?h)kX'5gnC1Xdp$H0W'CPenpg17qI3e>)f
%jjS>eW-Br(JAXdLG^\SJ/$:A<1+"j*MNa3+#JpDXXc$7jq;l@_H8'K/<qmQ#!ElS83ijP(V?np90C#->%H=3G.Ne:a2K8fTO7CcF
%o./u$7:b-D9FQ.XEZ$D70Ha[%5W]l6!o/CU=;q6ibd@4,0Wn;r5$7rK*Bps92iS^Jfb]SUg*EbSKuu3:@bqjHY9q++MFqhX><r:Y
%alMf5g"!Go$4PnDMYJLm(#rj3!hdDng>C[[":.HZXrm(?m<@@q1t$r(FV[u[4WkaQGJ9?gRoZ3TYVBk0O@07_F[p:EB$X2A]bCXE
%UU>V_!s38QmA@j0jm5D\(&/r:Lu.geoL84dVJhN(^[?QT4.kdCG2H1YDd%CFYj"*+>t!P&G)<_nKjdW&14O1^/=`ErX0nU`Wr)28
%h)>)8SAF5tbUG&CXLGl#K=cUl1Dkb#Qe`,Da7gZSlF"g%m_c5(>&eq')'F=N+E7HR.AtqL]:0d-&S9Mc_pq2FI(aC+`)jKjG9_]#
%WIMF'f3>SjHaeKL1U;8]rEp_Os+9s:Ee<p9?_=\X!4SXBpW/3/1mF/p$mqDErkW:<ottpNf^d;QY,:tHkO<4<!l3^+m]B(9*P<`h
%)I0rCI_9$*&u&asf%4T#?oA=&B(?T4&da"Zd&l+\_<u$jg3\#eWRRGC9]uL3SdA@$+:A$8W`i"WIE5++%(q5h&\?n7*Is#)h2XXe
%*.!Y`n^dL2`PDh9W(BN5/p_q$aQc0GRmHJ>-\DP3`KMHW6U@=S0g-Bp.`[i^41P/Br-X\H%%n]k*^6G&.TPSfgpGW`[g.4&.Z.2f
%(cprGDRdg@&67Doq;F*.jj!+7;gd23GdK6$Ujfh!?"q/*hg@AOq!@G,ottQaqfR,CrN[Spc;Q<Y6n&3+beZMWLdF_@!;9.(_BN$2
%eV77pC6;*b<NBE"Z*0im,T@&Z13M63c-(^LTbHAuGCVTofu=Ze9EX4T?.8UIBTsaPgd%mT+O1Q0.MW)g9He%I?"uAggf-qoQ3-S`
%g/$.Ek0+Nb6M3$nFBKe:cjsP`TW&C!`P\K:Cgn`Chl(?8[%;<HBG`T";OL-95ng#4Ca.<Tc`4PhQB%=D/hfl3d6rHjB:*6P;ShLU
%O^qB&ieNJl&79]rf`@RZRWu'hW[C4<6!=_T*+g7&JR_hmKqfd7KYO7-cP\uWR\(<;#d(FS?HsVom`1/rR/o4N5R\GW?f*GgCLMXP
%!b<Z7?&)VEq&6Cic#&S+f&G\#BX>;r*+[]4eA#>BT:[<+qp&5hAhuOM;#^;!'MogU]9M*i>P7Y\j"qS9;@S5=V&4S[L\%`o$aP>`
%@tiO\Z>3WMYI[p6`KYL&(>!`^YKFu:ZMTR-Jd6M?U@G,PIb"B6DstoZAg".!45di7<$+b2Q-;:KCac:LS##T>#1@ih-&4WUbGL@O
%q"tkkFZSI-ieeoc2`!5iD+n9Kq:2/tU"&M%!E:L7fq"`mF`\4^W8!-JX1-qp2_A;Ym9cI_Ce:OQZ4I1e;_P<*rM9C.?1(eGl3.Z>
%OF%=;@RD^,]a,7g7LHn:S?%G]if\fq(WH)eE@K,q0)duK,]qmdUiIdo+BlQR`<mF!^H#OLKnqulnr5-+05/Z9.;G".!>VLQ6#oae
%@^a'!p>h:U)KD0WQj+fMD=TGIhTd7!-B.j9Z>YA4)Ta[D/d>+K829N!K'a_-]sA5#JUsu@?URM]@14a`*gT;!^`;<59YBXgB^ck%
%>"DtRbRkDc&LBa*[aA)YL)Z;oOSFf[$%$JF[_]=>$I'gu/b8MLce<fBW[3S4O6@%UcOu9j)6u4VF:*R`%re&uhaH]HUn<HR'@IRD
%I"`h!U6?d&32m.W=:Wtb^eY/2L'VpaimFu8Y2BBBkS.)BMh(//;SWkhdr^EU]o)?2G)`HNO^KWp>sN1\G1Jrq^XBj%\k2YHrDrpi
%C75?/7o.D,4#1JuD$e>+U."2qidZa#r4k<)#K%)q%Pq@-@_A<s;@EqQl4L$1NAR0A,dRS.$iH#=!Q5A#(P#eBl,M1*b!o0G23St0
%&mXG7HrN6"ljJ)h`!nSI9e6Do(\tn0=aP%U(9(E??<-2@ap(G#MMeSX8r2ZV=Lj@R%Ph"7l/A/7:@;A7Y3X*J8ctP#rM71JHD2fe
%&RiU0^na]L?$85B_Mri0&.8Iu)=TskHrrpo:\+[f7,gX7XtZL;(_&DZZ@]VN8@s`pCj<&35tBE]+R'OU@SFlpj1CuULnG6H*O&8j
%j]X7+nSFBF6n"!0!dDN[Ab$LQFV/m7<&KFa$2d7CnQ&;GZUiIE[hS"R0'W?[830@^_f7$q.e="1983=J3%MR0&a'q5r^m5e!!t,!
%4mn*s\DD/cf+/al?0S`mrXI#q1MMD?AM@GYVm,a1+ug)fK?q9X`h>pW"sQZ+`&'%,$%(`j%i74b=fbfoKHMfgn!2K3[\Klbbp,h9
%ip$X\C7+dNRpr(1=C_Xb]iZ=Ad+<B)=t>Jei\%3-YaF.q+KIV/>lN^r+)ECk_bdBU5ST#R\k!2H$j\CkP(sUdK9jI(F\9AP^oIrc
%I0Pk+\W^983#/_S.VEeCL^#==.,ueQ(W;gfo7HBX;NRKbY,3he\WYa`d/e_JS:&ilNF89e8&H!DI*RNZdW%[((NT:,q'QIn3`d%_
%K/Nu^\TnX(OeeqjaU;N.Yr@*T[AqmAH-h'OCNLWL0'aFbiS7,=8-V5$9eT@,X'=ro>J_l(\p2S`1:g#AH/;FuP<_pj@nsB!F@\X\
%#=J%q\OaDZ;_gmj\!c-bb8,+Nh[Q0;,lR2@mON0oFM?f^A*YWaWK=BIR7"fs`tf7PG@0uY6&sSFWkp<RlCWWs]ICs*YJQd/Z]k1#
%6]WDhIhp]roN'M:RWE:RrZ0c&Pm[.[#sUOR']>\eXjV.lFEP+(1-k70%?$IfBHU**^1THq]1N?=rudGZY9u<36@-qN*fu1VitKZ;
%3mTP`E4mNXVQs\&h1TZ]o\2q4H+rq,+J>'[g'>=f'aBIUC\c$G+BCaZ)$n$TrVE=0a^GGmQH>;J.KWEKTK0:j=u=<LAKK7L#^r#_
%-i6Us/cOZEWP*&"Ht'q9GZCI`5*nDr\/W.Y`i*+Rn`kG5l$e<?;u_K<gCi@A^/18.?Z-lbPC_7ed=b@>?*tbV)H]9r[s[.CB:f+Q
%#WLAHIFE(impYL)>7hKh^B]3s!\a<2Fpk*joP->A%*,Q_+(.cJl?$uC:PVo"rf[?QJq0=g*q''$Ns<D[m`5A2d9!?bbU>X/P),F^
%B`LPf&XS,k#,bUE4H(.sR^87nAjA0^4Qt"gBkh(Y241\N(5W9Q[$,p=$EY-q;s<NYP;0YaTK>]i=aU;l--dB#H^([.:lO?8"^He(
%#&#/W`n^o-NP_II`@4:6XiXS`MpJlEONLW6#@r[-ADL">RcX+EF=_)+7lf*>S--XajPq_3*J0aa6us)J/W.eanKks[fHS,#N[U>K
%-EXU/WQ`cCP#CfTa`pjMC:g)iF/*@t^jQRc+GnH(7;];_=GaX%^4G*&Q+`I&YG)3)2u^INH+7W;9B#usAMR7)ofR!&(mFCf^o#+'
%0#YlhrJA.Lk]\("<o!XGs2I>T+;&/fDq^:GL8'QUO"K@c!@#f]c#+Ki;)&1c0-Z:01*F:Y"h)cO9V`VD&48jc]Im&aqXD"[]C6[!
%1p7_O&+<Fb2f>"UJ+-c*T$6D/F`V@F&E:8Pcd`<7)W"$[_T:HV,J2OOK^.G3TP6fg#s&@6K(iKPQM?gW8i1.B*pjcKPl,g`pW'!o
%p4mu/NAj5pMs^iEYR:dcM/aHDI$1uQY=8_RcD:N[8n08ZfO$lD.Dqe<nfTd[f9DcEg;FhS^$9?h01skdUUas==0X/Q^A4E@jKW[5
%gibIn^ZU&r&%J9u*K^YAj.X/`11EnWG$6M^;I2(3GRM;,#>/VP%$4OSA<VQ8^d!GbZ[<m`oniqR`>U3Dor@2BE\$$o,&J"58gEQ4
%O7X9:pubCgOc5*F;K1VM^sTNU%L%\$)<PL`##H,mO70@JdrO-M":P;..pk0&b$tEH]Mk0UTLm4j5l?V`WaJ!R9?2QNN7'*p\fSWf
%KBRBFQR[tFGb`EEBOUk908qM/Z6nOI.b5&hV<Y2)iYM]qs/[j&A0Pj>$t0^J]81g)p.&g#_4Z69`';u[p#j)k+PrGDbb7]A+q1k;
%8U7?B2c.PG(Bkl%/aK,skESI,]8bm\F54D5QVq:7eR-3_'jP.G&Q2*%K@(!(C_rFKFb:\6VcnTI.tA[24NA7$+5<FdSq9+'FX`hj
%7o?q&:DsJ5_2,G]^.'dW!rn_7Zu5r/MU44"NNe88!rGDF%K;lW0K"H>-qTj#Rpb0,JRa0_)SU/2goG,$3Z`4N+5au=WoOdQKVZE4
%o^tdc;e=2EU`P5@D6,eZ!@ETWKtBcpB2KY.c!JNX<AuN*MF-]"p^]VaF1mI.`@8a.01H=-s6`uG?Cd-Yh2h*HD_%\%#k]rP1\<1:
%#>($(3-!lDO@eOE-55>9nD,t<R;fWpR(%'K6QIX(b\B?FPFr'd$qhU<,6d=pUaGE]%)8Ca1L$+46PjEQi+c.#\kj3k2T`bN7S3mG
%>'SA9`N/DspsAmF1e"'MhuHnCoW,tVJHp''cq=H/2['I[!e-e3:Y!Yh1ZFB!9K%l"QAmp9#bh][;rF3cWO3^2=Hlu#gEIig9LhAf
%ftkHGU0APId_^U,k#BoQL]hJIiFOPdake6Fd3;dg98L!j)r\QRFnObEorE]V75WnTc">Hk[fO8G9Q6)`M@>d96K^O9=<3UT'APaO
%.Xsu$R:@;X8eTJV$4l:-_T6:B%0;H"Hni`8^F0eZ_j)KC4p&B\2V_3$6*_G.fRh.%.s=>KD]VGo-(s8"o?c/q5&]2)*^:5+XX\Z8
%2qc%E$GVdII#>&t\Dg6L3B82,CD45CghlmH=)S+==AGP]\m-*#NCjkOjVb$YNL`W`(-6ia>%*)EdLW3=?t/W>0N*dr@Kca^2jlal
%8BIo7-?:A68/@0n^ERhE_[#cC6l"1S]3D-q^eEbJhS^4]'gXO*@1\BZL&'rO(Uu.,;MH&0MRB'KT;=k@_5jr%fV^t1Vt6?iKrXQD
%c1i/9fB(L#;A7Ui:`i4UL[lcm'S$85SW#+UhDO\_.4bs@[kD7W=[hZb@q.=:_.h>9,hD\)I$4p'IQP:cLQH)Yr[hUE-q>(EcD16'
%$#>]K8i.Xmh+1@_NZ3PKOUSakj[e6'B=I9H9ABV_&VRh'qMUXc=LLjKkeY!M=$g^B^9_?a/rAK=\)!)8E_7k&!L:+spg5;W:NEqk
%>QA10gt[hW8/n\T42sHPm"@A<+;[PU=V+:D$?!)>@Yn3.j7!k+"M)R;/\N-EWWoT@^T_)lOF`Je"?(UM7uMC"2%_fsbjXef6&$2D
%K,Q=_WWFdkB=:&J4kb"[3/IoCL3P]lmO;@ZI!*k.qkD&[#XFDR$ZAU&I6@Es$4<ZV$sFo%9")n[^-7S^W=mLK-2CZhK8+o#k.Lk!
%.71irA>X/_(;aJ6Dk%e$72Y[*&:UO*2-k]O*CeO(DM3'IJmlD6*`3)a8-eNe1[i0eApF6oPjAlD!(hFLSR4Tnk;:f^)YbAVXWQ\P
%7"XsYd&'.26Aj;OIF5:q(6b9!VN;rTnbZ-_574#2=\I%H3HUUD0ZggW[r9^nne6Z*Vl&Tta9p!5R;8:NF+s7lh6a9W1r;OM)G7VR
%=a0MPql`aL_R?l6qVE)Z+?Bi$hGcf!.krI[2a[5EAes/tSbgh!b4m$oC6O6n7kp''2=0Tl+_WOS%drPX9+Q92;]CEEW5TsB2;s&D
%,th&O%t@%@6,_YRlu1I8^@2)+\;ks,4652uBAC>)^^>dn81bGdHF%dI)!WTN->SZg@3#2E#q[tN>7q"rPbT!+3IPE'5c\=)bQE[j
%6<k&MoU4f/^tgXP+d.\>H$2m5`a$[dJg)Y:[Cki'lZ3/I_`3A9Hfnu@<_@&IE@&!orh6(WW;G3noMdpE&@"%o:3gM4FO1rD6f8,0
%%rSNd-RY!'<+h"&l;<oaVj.0A*3:c1B'.WD@TNOM,\64SR`#$Z^BIUsIl.&73=((a>F9B<l(G10o"\C4eP]8R"nJInYj>e%^!VK[
%cD7-LYa&;:@0LCsJ*,iUQ\B)2p4_fBZ>V1LK_rHGPIQrU$%WnlE,9`""G\IM+n9H^rp$:k)Z'9cVm.mPhXEu\#59VM36En+p'Q5V
%7u9W?fROlLPEb,J[c)Nh+RUT[2mJlAqo3o7;DF_G>#@?cFam#''T(2pF)Ctu<NHKT.:d&,),XtCTTC;56$L"lF`IIm61FR'U3s3c
%m%o2ZV7ou&F^lPa:AM7J<+-&c_WRua!orB=&_:rLA)lKjUY3&daO;<RB<j\<1>]cB@%MRnP9IJVjtpU%&ZQ)BjE^4OP2g>oWUoQ"
%Bo[IN+:b*g#g/T^EDe5WS>[<bO=#4&2j4GF[s)Ag#-O"W#71cNB>ikq3)sM8iTX`tG!r!XOrQF60,425<?=kWXeB^^ie2!C7XX+j
%f4X:%Z9=hLmsC-S:Xf,*F2&tR!JDEa>@Wj5FnH;6@'XgOKaqO`J:4]l1^;d&=?T"6d8>gcG!B8)q+jt"cTR/U3@2qds%lZL"H(7(
%!g]O!_rmT`g_/uB^@Q86TiG9A5GNOs&T!#;KJW"ri?$H>`aj5UJNp"p%W`CNb+a"4VCI'VBqkQ<_D9Ee[kp_?.s;ZT@$.<?]:kep
%6BNU('NpTs%"q2,ZdT5s20IgPL[('7Np8]B*J`bX,rJMmaOPfW$p/I7W&g$qA<XJqZ]V\EG'!JLJ\U5L,'leW/LOE2kj-Jg,!$3_
%Ts,0PO_,+t_Sa>/cnAjqm^rKOFn4?&%s,g^=*f"sr>uk[hQ)k@?"HtpDAG0^=/]dZVNT\]]<>hJ8$-dCcY)DJ"mb5&l(ZNI[T1!X
%U0.DK12Z\&jpq#?S>$ue-Wi_0]mm+Mq$;$P8W6SS0GKl>ee#X)l@,?PeB93JehJa.<4+b6YOJIYqEH%#bTPitP*\>QG*(CgB]5U(
%5gA3OCN=tR$In\ApFglgYNLXUq;'XM@DPGn4I:pP+<=B%$#onhqt&p`_W0E7,Xs9OhtCet$Yg!FpWI3F:27ZO6sb%.cdNXV*Qd3e
%KM-&$;ZTJRrS-2m/2BB:qi.PJ\c`^>giYBfZOq*#P('sJc,m0Yh@1Y#T=sUA^/gJ$.-]Qd=n4R!H\o8j?_nhl\\>ZecegKn>pT`-
%##addD/XN>o^Nr1',"jup-jq;S9S_`[9Kl`:AratP/jkS8dNK9gKs8`A'WO"H)"cGUq"7.;&Fc@BsH4&V1D\cYJ/pBSTN37ogW$G
%g!fS2]9^1q),:@FW3cl.iJLp4U2P2*V@s"3J5Y1;mFBK+\9$L;hrEQSc]RU%Z:sM)NERRtE.#h@")hn;rmk)2nc!BDFS<A<c5ln%
%;)"Qg"[t>";/d5mSou^$Qhq+ak4$]aD0c/e=8N>LIljdWn+$>jkpug!M[Kh?qlHiM)jFCZbG(YFV)9T3nD(_ENR"]ePTW1YUA.1q
%aG41'i@M)Z8\p8eKAr&cJ!s%g0tL.k*Kq9Ino629$#,1ZOU."p$a:!&KR&H&'4`>Y&c\".j#U1,`4$IB.M_l?P7K8lGYFr\&YVKi
%5Xjhn;>">q%2CNqV..OdZnrg("MmsO1U/,+8RG?&;@14Ub8lG!:"bMH`L;cF,C/cr,$k_?Ig"Y:4VbTtLrLGq1E(JAD@PAON/Wlu
%$##2k[BWMn-<lARBo-4\*i@?&+'t`68lH$'H3ijC(FLBlY2MYZ:4+<n5m1['DDaI:0o5mV+BS_"bXZ\q9KWQp%[5jKDbd587",9e
%#!W@jP_?'boE!hS?k!1@,'[(Nnnn<_!O"GJP.mF8bq[KZ$ps/>R!_H_FQIg*,%HLibkt,8`Juo]Fes$9nN,Zf'u1_JC=-/J;QTN+
%V@RtfIo_f=KNAK<##oMImOD+8i8U`?^'YoLc9,mRAam5E[]g)L?H%:s5$6n(k(DSXjSQRS&GDF?;e80:1$aY+BgrF@l*;uV8@e0R
%!ip6Jo?)Ii%.,eDNZQ0?=J<+[K<glECB<DUZ>#F2P/Q!K>UkpWJ4P:d1U.u5ia\qFM6]^0ampuP2mq-V@\uMLi3M58`H!e8_^T!X
%8??i#;GkN/[`<V$DI3sJiG^"rS^\oUA4L5n!Nf%%!"-a$o(\s$g9ZG5^IWLQfa?gW`LQ-'CQ,Mn=4^$%+(UK:r/0G;[^;b!A+U<'
%\YR"bH-:!Pd81-iZ<a*OG(1>N/LQ!LTE?UHbcmV%)hN'/enJQ(<hO?=f*/J9!?3#B3H7_8!IuODb'L:,1LLSR[c:0bqI*Q<1s10"
%`lWp#-9DU"Jt/gu<JP);$nQ%LoM`W"1_gp3=:@F;#?2f/5j0%Q3^LJ%iJ-\C!!fj\+pnPKG8Zfm_1M/E;.`G&`+!da0JFlrQObA3
%<8.K>!"_%SnmIo*2Zdu(pmZEJ"r'*>fR)'e^PN1UX86Nj-N^M:L;g$(XSGuKVFTg;hMB3S0alk`8H<'KLUYbC#r+,EckA@.rJ5f!
%C$R#EJe2ETWM[821Nh"P$6E^U;/Us2*D1,4UdR4icr`'1B^M?M.g-f,g30\'n8jl=82t+@lC:WW'SJ->mh9*WVs>g.KSfIek/:c1
%:k(a`BGO;i#Ic26i;MgVFto4tD*csh`9PXe51"LJ.d(f1GVF@5]!In-*[L-i8,e&iX@6*Ffie`Ao3OsKhEVf&->t7JD*!^s>?EnN
%Dq7:sGc<;3_D41H-g[u#ceg;UIPq!7qo8PN<U<==rQT:h1a6I^K:\ni;un]s>%\Pc37:?;+1C71+:Oo1Cn,*lpjec)L0+&1W_3Pt
%(,JZgF\ZKA76QfL@C9)B78)r!4VsBY.=t\TPm*FoiTV.N:)2U76<\</a@qmE3'sHf1Z>Kml6^&:#It:3#"o*Z2s1VH_<-nJ=m>.e
%<MNd.IX$p:0=n1eoI<Jq@jB);Z0buCo"6ZsT*M;e+$Qm1`&`RuqEf.Xmhn.s"=^&0KUH6X4?toT0t52cie,Crl;MNe*$I>\\0sIb
%bK8L<`0tUlPXB:KmBc=^:$G7])[TSq@MpI!S$ZJ1S9a[a%2Yq]l6sUi!R9T(>R(rUBT*[aa:(h0,TaTT%Sn7H`H'Op/5ubg<h[$s
%`"aVX<(4,jgKM]s&D0LA,-7o_5_=\N1g$IXE5FmE"D,)S=+amh^AF,afS_h3$/i1lPK1#FUcl6BH%4EQi6suS93D,`5Bqd2bGRK1
%jgYW%_#0qDHG#ZRd\rnV8qGhl"rHCp+J&S!5$S(o_K5^?PkK`F5E#XsAro^29F7eG5@Ufne"f-]Eg#'Xo%8K2DSuU>"9>T^Q9l$g
%I7*XXlu2*4@E!!FkGX8_5JFVXiO%(fq`PW)/(,$/MC\XWb3K(F#?l9D<c0U7=Oh`Z`$$V?#:bA_bFT"aY0Yr_\1_fMo<_LaVZl/h
%C29MsHE`HU$QJq-\hHS&@2ju0`Pd]o?pLrrF3\X',2ngCYR4EXQ)2>9oCkV"CC8D\q2WTEHp7`<&u_6+;K2ndLX[JQRPUlS%cPkj
%K<:qXUSQD,5pciSHsmSYepaAg"`FId5MS9;d>O,r`XF1tY=o/g'#`dH+d_%fr8M68(DIH5>uG2kFX*UR!iM,De_6jfh$rmK@?;&.
%r14djF\1%Q[C<Q*paG_5!2ZG6<9_*s+r=9hUXD5'/pu4i;^g.0'hnqrCI$`Vgke`]Qs*Mu3T*#P.T]W05f0"DIY15ES+Itl-ESUu
%MChq4B,datasoPCe7(r,NP$@k>8)88m:1Oq(2RL&Xs6#29H^+*\8&X0cl2WOOR83D9'St(Ut.MOA["!r<[J@%#:d27WGj5^k3+@o
%Eh;92?+R"I2$+N=40ctp-")I60]J"Z+g7J&(;/i)J>V6-EXAG1UJfA8#Tl3^<Q.-MTO$ZE_O%)rC9/W[+>A6O;F6lHUe5>83fqNC
%e!O&@Q4B:[b-/^B?FmWM;NrM[PAguW"B&%I;BoV=]Vjs'.U==S>XU>7N_Sc9ZbemKS:uDnL69<)qVcm>Dp;S6^s9\:CZ<"B+&$@C
%JYBC$K1IG*j7Dha0tp$J"a^@Nd'[D@_aIYg`)8cL2g,dgU>-s"Mab05jgYW/Qoh\5BI'XFA-")1bU$S1g]WaRaSUj.:u!f?OY)Y[
%aRMT(W*ZM%ES=A7gd*Ka;LCb360,&Kn8I/Z_V;QM3U?,DV>^I#4h\WV2aM(b?J;_8?45>\L!BgG_H:gfo1Fb*.'jVpajtcHAW`i%
%Nn$hD.VU',r2@!pJJMZp"86`>[Y:g+RcJ?t3=<XdLNiLb"sMH54Tr^4dX,_0p6j&*%-Op#BSsW2@sSM(>g=.\-^U"!*[7e?;QU@M
%G]G5T,QAO:SDEo.g4o3afPA,JGC+M$)NVq+jp:)1m#K<k=P$[obp[Vm/WtVfTdZIu3YV=X(\k!QJ>`bhFgEjW82YrM6P_X]M<=+:
%<Sn*=X\OVdS'DI,jKk,h\[oLhCj5acRl]9_cqTdra-u]sD_0+">U@`:dMu'MjQcXnl5-Ph$WRJCl;Z`'Wlpc3Bn)8hm_#6--A/pA
%kl*6>l8_u]]u\SPQH+*\B)QQ9Pk>Y1mKM<6?8#6K=LqE.[:@lu9:@PpL'\"8aG&I*-@]'@^ah]c#9<:9<#k:ddWL&Fg)aP0PnB;Q
%%kAcNf1S?3kM!./ZdRQ0aUA0Zq_S"\naPR:]W'P]lIltGE<U,gEi.9upG(dmUp@er0A[S!7@;\d]:EMJ@F6.O/&7V#3,W1*\(.XG
%pqc6_;@OAk(o15u/lJA*6I'C-NeB<l.(Fn<KN$Tg*=`)o\F6@4Wo`$+/#%(2WSo$22Egoi.$l?Tkf5cd/HT!PI,dJ5CbVq^LQ5:>
%2MPr#INdqu<<lauEdEZ=+:`g$a2j];*cXG85Oshf5XF%6A\3_a5F<G.KpMe]88tlgV+U5`Vj!CbSEOoOf'XudpujtSPQj`!I@#+m
%Z%6`T^gjRk`CU8`3+ti+&*GL/9=DY+9rDX#5DX#gAc"qGf&/P\o[%.1'#WVFoY2(i,!Ac!oQ]l\6L1XIM"_E`O3lN8A5eC)M=gXh
%LongH7rMP)d0)GpTgE[*$)?CC3E`J&WY*6]VsBN10rE#B,"";+@RbW@n7C+^,p,EZd)[)d5q6JNEI/H)<`uV]eHa,3gT*A?R<d2M
%]K9\CGual=eV*>L4K"m.;mg2K04i+3bKpb"3p>'=?KLpY-h-=SAZcq@_D@=<Vukd(5BR444QWa5f0aZUZ]+K1Fbs:h6XoZ47M(`j
%R)asLd\4h]<0m!*9+;rI&nU=;+XVe(;K'WQ)%P3@=;XX[+Cmr%1*rkHc5%EBLE3YD#.-a_]EVVDL<O%.nbj#@%At+:.ZmacJ4mCk
%]?U&PC`J0KkVC/kV#ZR$_am:gApfWaA"5W$hU-\m)?ckal0<f)P8G.>.6a[#g"i(IB^(G?<sL93c&?\OdGjft'JuZYlH1D0<.GW'
%ecYh2oWiHCiJ8LsD@`n&CNQCL`cjYf,4"lbc5t;crcAE!K>r`t'QW-KlikHCQ_uG@8[dZhD@lH.,&gXQ@$TSW<CC&rb?mpiLbH?m
%"NDR<1is%YfXN)kSaptPio)rsC@LlRe?\rE5pA@Q"H5W"5,iE"!kJ-e&<9)4G,k$3cR3\04LE9K<&d4[,)qmCWnbJBU)3$h'+[WY
%f?d'k'@u2B'PJ\I-F'C662O4qPt$_B$?jc5&U=R9P:1$H%n&uSen2sr7b/A'EbWq,</MWA-8X2*L)!:/gJAA3>12UqOpJ>am8^R#
%=i@\P%or<\6F*M^B7oUbGfmVXqr#k"j<]_4)?tq?s&;T!Zo@CYhNt8IT&_"`'"\f25=/;)lO#j&Yr0&Fn8>N>p^2!8+pTN/+R3RD
%_##"-8@A[C$qEci]Vh`B1gQsPC]2^L\)ZLrqZ.$qEiX\t.R+?0WC)c2fiPY.`bP]X,C++WcL7J(Q!B=Q;VQM.@?od!\_$&7U22AM
%C@#mN?e48ob0KNGD&];EMJio)2F7K"WR\(\YnkTGBel^57[f'U"+8QNe(/`-/gXa,)%VDj+PQHfN>Xi=1@E"`fo?$"duIITh&%cd
%&Iru@A9=GeTB'b=&?C4,<'+f_pV'p:bV;NI*aQEUCDKb_!L;TiG8R,oj,4dBke[B:K+f^[<XBVmoC9L3)`b*QpO`k\`M(QW?[Oeq
%$mE&skBJJefQ`s-cnkAfV]Z(_[9a**1&3/+Ik1dd!T2oSc\X=+/QbW"L4+;=Ls\<6QrfVeBbcD+'M[tgjQ#>^[*9ct!s9Vk.BK$g
%XO"&4g?sEKDdH/:2Z7O'/s#0h1:3gh3uUUBp<]SE-SJ[ReA.%d^QAQ'LcM!rq!sJDYChPYX5hcaQ%7dr^?T,1)RNBS-GfpU"2$P.
%rhu0Z,_-c:GE`Z?/-F=r:^W)RnDq1Jnq=*`WCI<F'Z08%#iD/g;`f8SnS5X<=C\H.qXFtDTF%bG9G<&8A]Vj+Mh7<?L:?-$c\<LG
%q?u,;^e;o>5b#Y;e:$T]f*n+!g:NHO(D7!(HF7e$#A#3`QtjJolHqL"Nko[df=F+,e/[Z[ER==A!$=@T?0F3OA#g6p.#^Ysba/67
%b*P6PaZkI@W^.uh"U2,oB%fW0A)\"3o"Z@'MP:77rB^nfFo7bmq+Hi.:UrQ@lQ$>P1f85]XuZ@?]?92K8$8/_.#1.4$@"`VhHSHQ
%RdfLRp\sEp/a@ig;RnW4;!0mo.O]=OKp>$7ilK%9+sICN<KE+gU,>r07&E@]I(1:hG%_m%d6n?M,Pel6Yhr(c#6A/W\p'[jK@fU3
%12Ej.Z9U>^]fqh4R:SX@-QV=6dNNSedh0;OKC]d\j#_:$V%9-'4pXRYgQ*a0_<j\1BI%CWW9!HDO^BLoiYqD?>\SlNk*48sC0[hY
%_6ED6&SXdiAn[6q_lT((ho6;<%4Qg0D?-gFLA1uo;i;iR=]*]%RA/EZj5^Ha,09orZnPYt-$=H8>W%;RU^N\qISa$8iE$*6,ssbi
%%YTlZf+Q+j.P$7lg\tYl>tG<MkjNp!W"Qs;VosQ-ZApT0k(4XZiRqP;J\`+BHkT+FXaLMpbqW[Qr5C,JCf,$sc(PT1>e3UoVebhe
%Th=r_M=>"1cA:bJXjcHR)S??*OF&0bWHo*sQ5`4SEPP-)!+-XH=0)X)8@+Shk$Z=]R:i3W$IfD"[nL=$.ae[a%Tl_eWEJWA5]"DA
%cN98d,hK+_U1mk%+gW?UkCh&E7dcqu2X?GKPH;$Z'"A_$ho%'&(4[c"#+T$GXVsZ>i=c/(IQ!^E"pm;o.:thf]#4J#pmA.KjmNb6
%QM^mX:_`:erp3J;5Q"2@([P0HU1gIL)THJ972p,q8ke;":63c5f$q1H6kRpsiFW;7:@Ic2S_&Gn`?8N\Dn)8E"t^KN;]k8S^sl*l
%:'q5P'RQT0;BkXfabKEk0*>YPd&[3_+_tB3J4?ib("q-\NnL^WG:ch,JItOW<$L!p(Qa[I4[,2Qi'tWi7NU5eLdcI67HB(-R?*7Z
%AbQj#7,?_&MIQc%^dE!*;D3>7<24sb]gK+pdP/02i+h8TP"CVkMMHg+S-5oq9"rQQmA.UBE%uM`+&&_U7)*1s8POI)E&/#;fsmjT
%U,`qgXG2YLT2(7PVYmd/,8&Ne#KZWeDB(k&_p2uY*d>/I-AX7A99kk!eH@5&iIiAAXs:.K*1^'6d%k2Dg)cc8eXRig%gUr1;/jro
%k,odPV@ta,`g@Wb#T'<d6[AYCBobHX2Xo^PlJATfMY,Y+&W,l%eXc'0M*V^]gCYn!,T$d9L&0UDiVL[.M?;8DB"3;O\3X^33mo^-
%fF$fX@28R?,TVUG`;dV-"%Z%q%<,CmBqu:p(nfOn@jj1dY%!`*g@05=PViuG*Pl.*epFE)Uu"E8K)nCG3mhVZs1sLBGWi>j*k;gO
%mo0hbQeZ+lT^grfiEh8tb4e`m,A<n;Etk#4oZ5*^YI)MRq<K;Z,0[#*a[CFgORtlln]q*-H!h@G7aIH_ZQO:TS>Ze-+Ib&@Sq_<7
%PZWl$Z<Ws;Nh's/$:cB\A>HD-0JoR&Gr^UmAu,m^1I,:,&6:+r5U=`K$_BR,=HK2&Zn$r.0>qVLVRjO;hMPr&:tE?&Di-'"m-l,W
%l-!4<fbajT<E4=.1a#?4iLj_i^jsp=_@?6uX+*/*R#V^*k[?G\D)>4#iQsH)eM8;+;1`o"S/3i6m)iRsRfK9an%8Jgl_U!Jno'!O
%?iRJ39HX9)[t">9cQE/Go0<6'J,[@S4V*&:5N)SAX*t%so_`(e]>IJTDRV1`kLg8Y((ed?@foEKB/H6X,Vi:D[<O^:RHh.MG14:=
%FIuoh2k,<o&*gr;r5X<`Vr)q$_s]hfVgn^%n,Mngs7@rdi7:4ek=9(ZOkg(lBul;ppHM!H$3+_%<uV*cm[_i'L(Ztk_0M:UmGZt%
%-[^Mp"AU'R6IH0QnD'Qn)?<(deb7s$XITj<6?hU2s,Q.>Ghrb;)-)"^:#8(bTRHfkI%Cle%-PqH6j_0'q<]!3KSA'/8-4H&^$pHu
%h%3&-9-/@H^\tn8b6Lc4fjcM]To\g#*$9Y,gMcMGgP-5gq7ljt?iKa0?iKiH^HWOq^K25#`Phf<hu;SY5QB!scI;Rgi>j$>imV95
%p&F+7rSRYD5Q:7UrO4bQ+9(9'IfIH<pqu"heR,Mp5J-^*rQCg^rkmW#rUS:MHrNAPq/16q,>ZMlNpW.i\_WDdPOSU[Mdd0?Nq%Vr
%pH4#mqY/nGG8fg."S^r4oCpl:oZJ?Uq-Wh%gun7Wci<cIrl[<`kJ.$=s7*l'mN6o7^W-bRF+],DmS[]CErOTOF\fRDNt;9^q:GXf
%[f*r_ddc:755_&QfC@hos5Em:Ik*\)[0glhSJE,4.dO"42F2ED/*L6+I*%=[.LDni-(>DfUNT^*ad^C@$OWiM8`SO!*W\:78LB[$
%D?Ak)E]-;9_@*1ois^9uT)P=_Cj'r]C1dpN<7OZrR&1l*Gs4*mMPG>ZfN3J(!,A)!aSVMZTQk.ts3k4LAiX$"\Xo`];A632*E:EO
%PE`1hl,L!+"k8b`oH0gr:Xb>N^5c>RCnaa%10=,3iG<EnXdBTMd[.#H\-dZXpaXaMf[B,aRDH]f^b."JWN)Hq_&V9*:Ik<ICpGD,
%\P2J,m+9M12c662OYn093/OeI&4226Pjh<VbI$EaRAKASRDjEG/Y&ZgLhdj4b&PKSTaY:_fcqjG&<A$4qQ;(l@O=N_#5>NWN*UZ1
%G(jm"5>+_4BqER5)<K[%->Lreo6dpK:*r8moDKqf$7^3@?_F(,7So4X'JRW/#Jbdue;_k'7Vl[9iarsml_N"*'itrYWR;@Y13BWc
%6(5%/60T"Kr7Ke4V;oL(QkV!cB$E.,r21:T;h$CqOfK;H.jg!`Alm^>jRP<jR;*i3L\g:0,-MUO$/U0QM\A96VP3:1S>ELr?aBs/
%b)20HT/'XR8+eLg)+6H%WWEL60Tm!gDmPaZ8CgHAa/+r&m5G&.!KA#n?(-UhaRC^o0R*SKDAG+#Q8r6M-7%$+*'*a9]SO%+.4ON@
%I^$"N-30g=jn3N,Ib].IlhR(;:_!TUA@AXoB2>ob%4aTG:pj$!BV'Vi;/(1='!Vu])Ojt"hY[,2pV9G7-F^BU?PquUHs5;1bS9Zf
%5t3E6*Xr]>ei[h)G,?CD2"0q?D3braW`;!\Ela4aUI^LjhA]1l3(_E\lqgaB-MJ$U+sHnd3a@-2J4>g:ii9c/bY8?+ENdu1R7NPq
%T.M@l0Y50i7f1PJpa(V$PL%^e>"CEuJ)&dM`tYYRI.J,1)e:Elqq5m)Sd&(rIX^gpYO8:V]a'&+DCSEU=1$\t*jXg!`1"?c'&/$a
%P6;VP(?MC4s52\bo[pDofBiacIs;naq2jJU9:M"D!tElj_Z3cXJ/ZT87*-9KD9Tb=SWB`(m!IEpRr#et!]6D2Q`R2kR2),-)0+Z+
%=J3I;bFP4^ZOYG!s$@Vk2oZ2b%-4tX&jn.pBBq;g&8M5Wgh]F)e*c2*_&V<)M,ruGlrUUXZY'*r7Shpl"aS4QC5lpu4rB?"DUjYg
%Nthq?5I/OK`m/7o7Z+n03Q%#O4n_<;HE._K*L;qAK,F2$)1DBi`GOJ#ZDtLd)jJ(2M,eY@,[-+s^Vn8hRV_sip>">llVn2l$<F&B
%4olu^aYmkXkk#F^>`3_8f:ccbiob738b:5D,<u*XXIn^]S.Q`dUSmSGIsp(7$=;5::dIQY99MN#;)qD;Yp>%#As[FH9,]Bc4-C0d
%2]qpk-,%h8q@60@3cIZGXNkumd[GW1"ZtZ_k&)Q;(jfjtEXO8.jW9><BF=RNXG+S4`s=2B[DDB8/Uct(<k))8W^Hq)/.W%o[`YK=
%b.ag73'sG4FPC'n6H^87=j"PP?$H!J?-npsBp@b`c<t3794IWo*IJ=BW3u#:Ubn69TU8"NK(jG+L0m1>7;I4M(\h8tgt'3fKL0iH
%VaR)&MnE"(9Mcf41i6BSO^W8r1]bpHeqe3SjrM8J*EL2cPP#UOa!R+egL%6#80Hb8%j[L7\V:H_W0i1!Yl`C=Is4GF"K#:u>eK&&
%i/5kHm_5_8ro,OXm1k$BA6PgfSeWEZq=KW3a91BXQG18Xb3<u1)X65CF72(^"nXH4e!pK`,X4864)YIJGb[o(1*=O\TC5o.c#9r+
%@3R;.]bcqN$ZVFHVO/r^e!Y74.>R$D@0N]K+u/&Y6K0/`AakILAQ/i`XA4JMnilGCE+qLu1iT\ZP2$KJfPgEVNna3g&+E;Gi\<ol
%pqA`G&jF3F#<cF4CF#G"80cY&>@8L,X<i8eX2hqf:H6cD^=B9P<PQGCMTJ0'"B;.c_SYk*[%`4uG_&MZ+)``N<M$A$"N+q&ri?g>
%@4X'e_icA,SYnG19Q=EeXutak6FB7m@:?LC1i6CTG>dKOoeZMjSf&A8j6!=_"cj7Q>^kM`(QIZ@7fSsISVe9F,kVbE/3otf]DLi1
%2c7+An2k]u<mM0gX<(/^\G=oA:A?rSWB\jS8lG"pQhC^:l.@<;-*bplQfmmk\3(U"n^07phXF7gErRP^WT!(Ok,m]0@$+8)[8Fs^
%;\io3RqL$(g_!fMD)+0m4_$k7F.@\=`ATnB$#'G*j;6snh<=/F2uLpQs%Qu9#p;_O25oBs,/QE0\JX)QFRRWfa6@&WKV.lmd.I!@
%ml4),pfuilmW:nW+!8EOS'Krg<H?/.3#0(?T,eq<+H:KUosZ;sC`Lpu%YkW.?3M8$kn!rALSb^!HA7!OC:iR>oqBX;8S=%N:fgSe
%bu[bEjR_!dRhg?,[ZTiWW41Q_hVN7BhE:_n%Q)F4D?cbkEMuO.gOfsY0%*qr1m-6IT+VQ#@",:PT]td_^1^5?9A&LlL+Q>^HqN:o
%gD'Gb7/l7)NP)n4OUgXj37QGroCRFmM"(2$kL2kkaJMu)>[+<Bn[9JFM/N<!XbU'<9uces,KV#)OH:#hILY_^]kc8VaaM;Ral2NK
%;t%<,0,i;`N;g:a_EX+h2N%d`X"NYC\r^85;J7($M<*$1!",ka9/UpHUHltalcFu7?*BPn0/QU<O\j>'aEWe@b(1mcY(iH!L%NH`
%6"hahMO.M&oce!;gCm2qEq#$POK(XX;'o"S1"e&Q5h2&;S\5\=L+^>j6P:t>Op<:5JB<$i,uomfY_WijJb&-m2?ju*XYTZdN1FtU
%_SMpgO!HUq'b5<K=qgk,<Kp]b'[6</Di&iB,E"(jb+l'G_T"oX8N3F&C3Ui@-`_-\\hPd'fc]diOY?=;[s&h("D-=HOOd.2r:B_8
%J9"@ND::tK6o2+Il=k:H":dBRpg.\<Ao]+N]<&<"^_*$F-D4J%Lj:hbq1Q=XC1;GG@]=W3ZUJK&S86`"(i)_A/5e-a_BhW<dEa.[
%pL\Go=0mC+h:F`;9gPK%l\dVlahX/TP6%Iu?SoX?&YceAKB8"aKs'cC.^mnR[5\fke/?`J/(T:ETXj4%C>)ZK@=/trFjQ:A'MT4d
%cS6J5eaZ:S2j>m*S_%K/Go#hc1Xqqd;2$r6#F`bm<Q2fQXL!,fCV?Y+)ni@SVY_sdm;BhK49^U<Rs@"W\S,>CCM&\;4U)Q)1_1qp
%iACGR7ln?AW=pNcQ$04?b":Mk;m9-u/iYN*Cb:'*<3N$V6h=APc4JU/kIJ`od)oH"f6O>#=&rt@?Z,N1NgmE(G_;[;SKokjMR*IU
%$6iu@[THTj@N[LR:k)S$.-nhVkgmXgo<k[LI(9"-4%\;<D$FqQQG>.[j+TfiKM/Q_&"J('fofnV\ClFI5V,uJK`R`Of3r9O"qkCT
%FY>ZsB#>rGi1Xl=q4?Z&bH]=Weg:(q.+1XSMl%Qh9t=-YC(X@V91o&?j2!mekG"hd]m\MGpm\uVS<h)l"b%85lnG=L$TqQ6Ca)?B
%TpWG]>Dk4)]un7;BANqK]ko-E]."34>OjAFht"ag/R52VmF*eRhkXGUonh5;m%;0XQmrf@@&%frQ;e.C,_i'+Fl@FaC-15_&hS'$
%Cudb9!F('Z6bXX?%G=02H*VT]$0^SHq4LZ+.B6_hq_)=NoNe#L(X8o!*+ZncQgfEim2WBs#E=6n><,>[fFajo4f06U*?K)^p.fSk
%D199E=;&dO[dAVL]]"O?)G\#h@@+%R[B_X"WlBOsFM]K[nWH$Te2^o>W>$E$,ZTc%$6p!`16EB`^NY%1i1NY1;>f6Tj\1Uir6B\h
%\<k@mEnH]$=euC!]=,cNXM=5hLqR=p\V84!3aUQ>4WW2V`\s;]Q`/Tr#;?qXelk_:cdFpWYcf-q-dVZJ=6R9_M&@>E2/q/`:Cpt,
%b>[L&h4YrOI4$[.X<#lo_o6Iggj0[?G&trSFA+-r,cE%30lTh]"k*+>[=HY%;jG0knp]b>gZ4fUHW(p.J1Ac\m7h`FX7uB990A'W
%])&RIkdO7mUXQmqZ'6f*-Is?]&pb)c@*lieG:l4qQ8nhqN9T<`A+.>chrY)kf-]*J$$Y$)'[E*5;a9U;\7)T91<g6#ABI`P><Xp4
%U]@(VAZr,X\8Kr_aX*NSWjM8jlZia:RY;P-/dYJAY-YeY">pDCB1j'hnLT(&'\AILl)LrUl@H^[bHY`;lOO'P*ojonfZ[@L<hmh.
%3/+u,Umg0%::KNA;t&dkNrqs[5LGY`Xa7YA8PMtS=i^.[%S?nB>.D@RejZ#M3R@#5>qT?@3#'mWq[,'j\i"XQF#s(DgcE'Da"B##
%B9MG+H/gX2a\l/Ae&<Efg$Pi;<`8hV7W7a+GMbO\h__2iCi6L)g6a:9,\-'2ZGl33@KbkS<]^KK%"sKZDEdfTpH@)Imf&(<9"_$/
%POu2&]9$aV&Y=--c_N]+h.ba+VLTgu3O-Wdn.eN-`Q2Etf0tB8g+huX1L1d.*,DbRZ[(hBCQHo8*;4(kCkC1lT>T&Y2Hl8e5)F=<
%6IIGjGP@+*roWbNVEIdE99up\`L^&Z!uJTf:J'j6#j[Te5?d*sAd#sC6gm"mq\\r(ZQ5n`OmOu$#Fo>,Fps.r*4!rg#b1KeCM@*g
%8Lk_q_-0Ei70s!_(`k_sEeILNSYXP0@HaVLg5NNAK3TbhoZ@@BrJU\=:BuOQ-f-oD>EKQn7X+=rhesS9D]@.6pDLqXiCq0]V=j[q
%\J]Pt-iak9d@>@c.J*:Ql`#)5VS%905LX0NJHGZs@#U&0WKje[Ab[euSe(/`\Eg'A_p.RjRS(bPin3"+=S6dP7ao&YKYqpe`#Y+B
%F\)o48Sk&g7.]Z%>iLHnYX7W(U0'7^4+nhiNq9=NhXR)lquOOFeZF/&S;TD0=E&LuM3qi`DlADOKKW[f9cedb4)OHPkMF>M[XP=Q
%5<!3=J1H"ZYZZ\CUl%7)e.eg#fb(PD3P=\!+AaRGJsJ2RN`_C5lWEHkBqAruO)A0%T>&j0.<luCE2_J/EREQr>UOMZEX=8lb]nCt
%XX(U.L#R[8.:FWiq5h2PEkH<3s)7(FOlBhbGP?[41]5K@dG3Lj)rQ3)ZlFf2(,g,-Tc-:>^IFV?3$Ei+UJ9lX[mDnorigVTbB6"!
%TY0nGH'4`[]&:pk:0BXB]:qPAm2A*>9$V8cGDSDrqd,Gj`BI2m1*E-)E[+OK#mj1??dkIbRFHuOACm[sY*,0+gD=fmOm,h+or>>O
%IOMMQNRoQ<WQh)V=,7=X#\3Me<1kc`\?!QnkA>eKg_sO$gGSO>?Sk!R+9nc_BTdlp9'_)n7@M[o_Ms/6Q\^l,P>GU_=3+/)AT2\U
%8o+_&Z[qR`?/c^t=]F'6TV`\h#R0P@-[aLu3sUM)5mHlU_*hV1(p$(sZ*;Gp<_R+O\G93W^[N:Sa>1Zr`NBlmm?k*#hr-O#Md8E+
%6`ptIE'mq=\^9&!qliSQ!*:@9GXojV=]*+KIH"2&cYh7_MlMY5U#n=s(qrpMn:lDJh)kW,iOQ,eqXc%Z:k_M?eH/4($B)eZSrB@8
%%Wo=uP7&c$r`76kM8k?@P,.D3,?CcYT\YL0FqJQ5oXMFh;Yul<&gUjGVP"it&iq=>Bo'L++hE/#KMhEMePgiqr(R%Dco^DY=MeBV
%d0<qOp5Zo?O"E9)5&lV/>J114BuXsSNDp/;7.i3kgG/<35.pD@D-`t/5Tlrh!g"#!a:?G^$5?@RV+F4ROEaWqN#Bh+-@Zb]%pC*d
%#=MAh!Hr0s72UK_$d3jjF96M4[9-^0?_MF/q;o2gGJ]Wc(H]@THY%JdR/aQgjN-m=atm^Smr5[mE"lJSNSpX07!Bj\jl,?#?hB]A
%\da%B"-*i5L-rYl05?I;peWT4o[BgX#D!ZpWkRcW%&IB9cgZm))%T^RF$4/7&pO"FSJ-`o?BfA_gLf<r8&\&rM/N/fWE8ZH;S@#Z
%4%o[g&rYZ/4Zoj'^Urq#]C*MmG.s1$P1]dQ@\Ln1Cmf+)V1mI\/9#0`kMTBMES3t6b/:@%h?dB"D%lgW;lUa]^?)U:pQ,Iko/mi6
%eq81YmFX>=isN'Xl(u/Wd$FhTj0h=qRV00d6Lt<.1pgSG_[F]&+U!g$SVsrnJOZ[7psi9mdei[CpdR.f$F$cm9CSV^A#50!>KQ,4
%BA_5CH-)@#Li-!tXtV10!m;:J*t]Hb?]ckB>GJ8-q<o&qo^&Q$,*m0=!5?@:d]\E'UV,[SUR;7jRG`?jp^k<+oR0aI5nkoA,j<3P
%$ctA6(5>oF(9;[*@:)_"6'<2a:j"V(lI<c\P:8"3@udWsP$OB3Q?hAbMO."/[M\:Q93\t*o";0pl?g3T7uIH&R"OI2n/+ZsIu.\'
%5pP;CENJ'#@HpM`*IL+=_Y`<SA+)f9hramMh2kH-]]1k@&bSSpCFpV9($I!b6u;7Yd;Upb&&r:\7nk.9D/WO^3"d]WU86?O4hSp>
%\22EoR#h#2[8MNeLu)1X(JdK$KNTA^Sk^"?W>KWYkYhQ'V#OH0A:dlgI94bd,u_,8]d\6hZP"FKZB!=.mjEY;6e/;FO^+t,g[`7A
%Vqut2]Zp3J%Qc_FUkf4SX"p?hCq-_`K$MY@GK/q%$#Gu/9f$/KJpK%m7MJot_(l-@^8PTOT2c`@L`7f.Mq1!gnL7&OW?u8m?]\:;
%\2e[?]H^8&\MrhJFZ5/,qmrisl?C"Q,RM=1e*jOe3L8%e?6q]Xl:lMoRHn\>(4d@8,!LJKgcN#<'Xth`M#4e(-#30gPqA"n6:i?@
%E`8CoVoG#d[=Ppu\BO@5JaSc9*U0A@3*:'V6]#:*:kg:D2E^!%/FY"BLYWsO>oN#C,\45\Y0n./et&&Gn8uCcs,rU?LRC']F@S((
%P2OcJhVQ(K^3TLgBhm-%[O$45n02',Y`Mu?-:1-f3<P)/4D5=bW`.qM+)X::No,iUp@^:j-'72i&KY4CkugUB1BS?#'Yd:)>E!i^
%reB7saS.'E19&mY;&F4th*mik-4EE+g(*?`XA.Y^B<,XU%_P1@2+pPm=7P3Y=9%cEU/e#!=^mnApuYK'Z``0T]&,XDhm=]o/CJ96
%"9ai)(q+7pQQ7<C$p;_g.)p=_VFNgEl.KS8\D=cIK(UMZE_,31WJ5&\05@%@`SlaU8QAO?Q;fV2FgLFGA(GWL'R$_f;<LAO6ZUPq
%F\SRG1[Bo1"/WQa,pefO3(jsoT'XF/daEcTbPZ[22<XKpD`Ds#F(;1F,`ZR&&m2j4llF^Tc(k;5@nNZNGO/5*0ek((-[WA3Rr[o6
%8Vk((28FP9LqJfTrScm[n+]S%c8Xs5I?ug&f+:Y%&nb<F*R'%"LDdI63f=Fp?TOp3ig9/*BqD4^nV*a'"ZraTcOTN)#^jqape^9"
%e[j%Sa^j&PcKr9LYbIeoi9d3\FGR>#Q'g<U/%4)rgkWf?d[BT-BCC(>D]\jq>#WW<#<5U>VHkCsgC\o)I`C/q3cZFW_&G5JrN<"9
%\9dK^TKoQ#pRbSRO=c(b5F"M"kbgCkRY=(RiJb/"TKjpr)`(bdL*_#50r!Q7*(2L9WPN#:('LL\X'nb#6W^A69NPM5Qh%1B(f2iP
%:!'(DIem_jbe1Q,TbHG'9j'mH\842Jo;o->5QYjFr1B>*h1le.K%ZIrp+Lp"Lda5002\ZI$HW]:d>c'UmL4IW)>(_(R4Njh07hNf
%6(tn_9aJXETuDejI^IJBiN8WP]X98Eb#Y[Ed"t<1T>MVfc2d9[MQQELG,O6f_!,`MbM2N;GH_=iZb>emqrW!EMd5JMr;%5;)NR,m
%8ut1f8BjQYUh3-*VD0mbO\4ENb'[l&N=;UbW"I3nKN4he&t]37][.h$62`Pi3/9H_ELq<c>N-obRhu1uc@4b/E5@<krFd*jWgJ32
%[3V#BXucHo3F-<XjQI>BX#<ZCo-1XS!aFCDR.2B%DqeDpZ#%RL_3D%%e/L1-]8'EboEnPWBG0`DLf,*LK(([44I1(EE*:^''mQKK
%mRSNkR[SKZpQ$(Y/Vh:^.Bla\huQpiOgl?YIG]]1ZiO-0K1u3I@?S=:]!Y2V"cuCeDc\c]o=gbO($n/VjJeO0S$[q:IhLcudVEC6
%5fBe9Bng")"IMU"K&a/tMhXRhI,*]@M>budm*IGV_4r[c;[E1XQLB?N=@aKHK+KhYh;.g"l,%<r'<,)bZJi>2:*J/-Jd.p.9MQl*
%:$GrPjs6u;'Vht5P'75Pq-fjS$7aTgAZhcG!)6m2=e\-p2t^a^mn3:tHlXS,m+UK"G`6([Ked9kX<cqI15rD*b`RA8CjO[ih_MGE
%"0<Q]3UAG.)!)YJ18B(=eVGV4_1`UBW,?0e5fO^=n>jV/cA>g6BJmONpB%OB@TI$4->C#35QmM*d]L(?%R(K/U&b_l4"UnIkPu/A
%<=\u0)3u'X5d_:K+,CIBRO#A@);fS;3$+0J>Gg>oo,.E.J?!`@K/o`XGqgl`oW5729k"n_=1NSakb1GMcQik)hOoU8X'puC(Qh\_
%fkSYndPiSAFQ9pHF(uM_NhB/MH[.&K9XE>lb:Zt0RL0lbRjX'b]uJ?H=_!W,IJ?WZVX3r8VqOp5MdtQP0jY8kT3e/qC<($$*q>pU
%(j=pHiPD9o3Lq!%TAW4Ab<is5p>7$]A&%HthYoFD>rZ\Jp[BSGMku7CIkh4AJU=qi]K1J#)Fg%"V/#T/kjJ+bJ*61$ek3\>$hC'f
%?"+nsVJOE^.Tqc"Q*?Bh`\)[>g9/>IQ<rE+7;2j?M_o1%TFJD-U0GO,E]WrrAIXu7XZB`ijL.o0SW9%RI9roa2Ng&E(XbJ/-P3R'
%pVr[blgA\Tj5$kMf-+PHe"3#cVTIqJcmVT(k-:/3i8!-S;21pKS#G?C\\E3K(VZW:UtiZ.2n4K"#@bGW>dKr[?9Ar]$($R\;&o.0
%40kn(NN2:Y/AM`b+O\t0I_oB2SZ4lNrC/<-#:]eWiLaMO$_'UBNG9](FHF6<n]c.WBD!3Vna\m4lu/*Ljm:2tZ5N5=0m+RW5f@m#
%LP'X"[#6/$R(0i3-_'bGc,]h/M-_a7.:/T4c/-oD[u?ZOb,>(L8jqE.>F8_R"V_9T\[&BJG;P.bReRgd!`**RRGCX.$99E>9"Jqo
%36F.H7umN,j00lqE9";%kHD@N,02iIYrG"2DX9i:J"'t%<hZ%Uc2a>4k\24>;D(_m30tRo#u6%R"cHW3H2ZCQ3S1mFgWmc]RB6PR
%$Gl;DV%3m)[Tt*NQ*u+?)%JTjAaTJQmKKp]g#j9aGsRMp0n*+Kgh>Cb]3>B%JZr;6p3pI"@B:.P/UW89<gS9aks;!#LQ6Y?"#[F7
%f7!U7'"sf/&J3^9AD#Y$05:qf!m/mETu_YS%asj?Ac*IC:"PI)Sb'KU7qRD!h8O.boG]q;nf?PcaV0D4PE#mZKD?.%TpU@67rgTJ
%*!rqD3Pr#;PO=caI5!IfRH@iIqiS^aD^#0K<."Ds.1.,ZW`^Y%`$b'Qb0muL])17CHI:V,@LZL1`mKPL:PbuTqaW`mq.-(BV_]PA
%%RI^t7eZ2Z^N6[s0/),o"R!3^$0X8XT82S&*g'qe@:;)V(b9V9<IlaB>@TtdB"3mbNd_?4_^cD<'<YM">LAcM[gF3ZF>#MDF>D/&
%m7,?>p\I<DY4!Z.\?$]I-TSMQ6qh=[GFs$O[n69Wfr^a^Xs;`_3Hb+`CS#]Z>m<]0Ft?CQK5iCL,9C_dpNKC+@a+G"f1\ZEe%Lc\
%&F2Dg@')ms=-tr_U+/E#pb1*UXJ&!KcYi!Xae=QqDEX8k3Fl^s>tPEe:rWu>U4(lr]$S,@f@-7)Z9uRFfHg8G]ZD#!m&td5gLPY>
%3%^.@*SN)bV!E"]+b-=)S6[AFa,imZFVZa7(I`rAkPid&?5tMLK1,gWRcgQn=H:*>=;,f8q7TUqao*O`Ek<LK@%*YUJX@c/E[=V7
%<4cbD8sLm+f?E2o0d%baGre>s8p3$s;MbZeSb\.6fAok$[TNA?j58Xt-ldNgeUK[FhH>KsZW.<GI8MLdXb92U3X6I]5[,cd!G<&O
%6,buQ>grqE(6!hH3)DA1[MPocqBSR0&F<S-OS8f=+uiR["nmU?=#%&KUk#HINbe^s[;Ns'U\Qs7,Lp1f31:<^Vu1S1[s'si?KQXK
%LPlW^I;r%5fSqn[E0=8/DH<d0l0_#8f;thLb]L%@'6Nr&_l@a*7.gu9O%#f_4l;&gS%+5!M1IXa$OOLJC#]5qcLWZWEYO4i=+^27
%cmNA_1_'n7l.!L$O9GGM?gkLKa18F_p6MuEj;5$8N8\-nH7;:P%+n:TG-M^2S7<t6fJ=K=`dJOc55m=bk&LMCp<WnSQ6m'D6(u^D
%aAgC_5G?;":Wt&&+1$l57"lbJFIU)'W$DOHRBB5UOJ<2ZV+ubd7M.0?D,>YndG6lmT`i?2f8I^FCm!Q+]B.Br3\.dR!:k@?34bBO
%V9fJhd#^*SZk;dB1[Z+**#3g0!sdY.feN6m'L@&FJIFUDLHrZ%c>ob/TqHQ.F[DWJ$l8WPfhQ_M<an$;P6PLi^-b>tYr(gI]6C^X
%!pQF<n?ShM]=D-c@R^$hgH6T90JY3)D'$l7i)tnU-0BJEL*K^G_UWV<5ZL)>Slni?+XG$m(YfD6WN'ooDjP'qF``GARG]GWDOo#J
%4%5!KV]IY)]Li1p3`k,"S\;ACp"mjW$$>TGHSJnWN3@)VEasjMm5[soR0O120N3+.;*F^.l:+gI5MUYQSN,*QG(T2@4_\</.^;R4
%9EVEETs;+L+?M/34q]/\QXDtaTBl/6pPt[D8&lp89@g9Fgq3C=+YYj(!J%UkRs8QP'lPsL='(\XUHPA?AbC-E-X96F`.?B5M#AuD
%0.G4nqlUn.2r/CI5<CDZpoo0uo5:8;^`5ZQ(t%V0?F9DIYgFN93mSjn-d;4kIIK<L$/h@o0$GXTSjQ\cC8L)VEOP99a48Hq%-&LI
%f3p!_SniRXn?_Yl]f]mX2F5e_B/M]>2rD5gTPEXlo)6Y!UW;V3iBQa<LhT0PNC7()ojKb)^Epr[HI58$Ib!7uog<%@V2LOgXZ28r
%S*#L0=9IdA27m0F1j=tZdNhR\]QYo9=3nRDS9p_Mn/_3*IEJK;AN.>JM+HeF:*fu6-Y:m>;8f$^6liG<3V-cd]n=+U7sQ^!;:O'Y
%%Mt@Qq]HrG&9MVifB"<D,_r4p<WJ/4Ie.ZD6U_`<OL->a'Ln;d[S&:^0k>a.Vsio']jsaoqGT4!<rS\"En4cbWKIVN)s1\pd]>Wq
%U-L5D%%]]U:3c#?%a]E%;&'.#A)!`ETRDVPac'`a>X@ghIaNHo/P@:-G!N/[!S;?,h4%HT"ac=g\""tg&eC%oVVo2lEjNoD*+u5l
%l[g8\jJmq\8h&X)Y__X8=t?qZAku-sf=gV?]/lT<RF2f?#b)]RKl'LFHqo1pCc#"0La/jNguun<Wn(>MBhQdDH7-;r2AbjEX9m:A
%ZQp>IG?^73.+g5@jMcdl:%^4"Or]Uph#L]s`-)NoOkFSng\V<Y4FEOS#B1t6i.ta*;?juWH-2M7YA*`#`<>d1$9Fu+ARdc]NdeYc
%S*OPJCK?Y3dFWU8^L&`BIVK)m0&G"pZ,+u%=);H7&t>$Sl&T'1%"h_h1jAoR3tB^o!^6QWLC)IB;'J?0:iC;L27*><j?EG`:E*Hj
%6q34--'Gflq^b2M(,]f%@\p'<@H&GI"A9uSF;P[iDSh'r%.S"G`NN?@e%Nc6d5Ht_J=i^u8sh!qFSma9%X:B5h<=5HJ*G4qs)!6W
%?pORSqt-5R66Knp\<l]F;/oie\E);5a18]A=*OVq4'B*pG4%TD?$^fdf[JB`1k5jiZGN5HXPt$D9+JQcF>(K7rF/L7<:<LLlO,%?
%n4>GDO#%-OI4l`M^)(MsZ)`!NW@1H;VRGPc(MV+BJZ/H&`>rOa[3UGJ0CMEEqs3+q8^"empqOL%q#H9C=f;b;82.mGBbsPn.3lbd
%h_q6pZl?:/T52p-O1jS$+(I@`r2F+UB&AUm*9SM^HBKShQIh\g"(F6Y:"kDHa7fiM3n;]mU'*)89f4oT7^gA!_CPONFuBK*3EQVd
%WS.t6k:A8II/,2-"M(V?]Qfn[SpP<tnVP34KmC2mlgEX"^u%9Rh__6GhOFo!c5D$b]e5?=[@BFj`<st<*ntFo]C8eSc\(,]kMC3r
%+ZT*M,qeDpmU3IPVAVghRX6m!f@<\Bj[>JR9!MdS[SJQhlj+e32P!XMF"R.*dZiDPdlb<W/*`gn)W>X`El:bMKn-%aETbR8dRS%,
%8P+15+6dlD<?6PEdlSWGRtq!tVW>P[e4L\WglAjh)EB9[>%Q;#QF&d[Sk+WD5P@N=U+C`X57qN7s*-unO9HYETGr$F0<_-ISCsTd
%gQ_][QOM=Qh8,t'7CAH?E;@Un,98/7gF:9c;f$RC'ZKFYG@DS5:k@7?#M"#Xn23%"R2'OXD]O$#SH\9K<c@X)7=4lk&+IgpYJ.mb
%kB\:fD&"Q-)A1m^_H-mA"'.KaI-p"?;nMYk&!T]C/NFu:i/h2.nF;OshVk0hf9ahSnZa[*I_P6+Fb>(p:eA+<26n7\Hf=:&eV*O:
%4*#=Bcb&eW\Ju"!%n/nc2.k0q=(R#FRQE/9C?5b<KP<h#m'l8Y-PpKm*Dq-6_:U9\qA9O[]("Ad?Q>(:#udd^f;H^^""SgCd#J*E
%/A6jar/PtGHi"%o[E'ukN=!Lp\sp:$2]d54N=T+Zn=kEn$bk6U)\W#D^l3Vn.fe`QS3@<@4=i77r$n^['Xf4`kHPj*RmFi=oBT[F
%n=@<8W7Y*F!eKoA:R]E`)8ta'(#7jRD[N6L$4Lkc:he6>Fk)E&'V7JX`E.eKBK<g&CZ"ml,g2741iseCb:M]](Ul0,-LmD*.>inu
%_,I<aRfK6S+%jCa%"j.s#j9VT%t%__rDsHuDFEB46O/HO.rUf7U4^L17f$G*F=cAhGXef-eGj9=]7/bQ'sar!hOnmO!qM01K/,*u
%bZ23#]Un#jT%pMR,\2tI0F82Dib0hC4F?!,PNiH>Uj#oP^>%5C0=>k.9#-[1&D!6sW<N\Lo=BV=+D(,RWtj%$9<OF_!S7j0E=brU
%^INSP=2:,\K/"S,LKQe^iGs2Gqa0-E"g4[\#"YplZgffJET;oECM2;[/-V/h&?uJ3:-BUh?6Pf:K5Wn29;qMI.dbkYW/*9HVDk)k
%cdOla'CuY9!`Xp+'Nh5c^[QB-N/ccp&cD<(<PbKj&U%H(2rsi#H1*dG\EOa\G9'd<TKQ><c_KmrOu4tSh(UKuK<52j,snS?JoEF)
%<7gpHZSS>YN5n)E_l:<:f]nN=@O=se`;mH?\O<H-7$?AsdS7NG)h%Y+U52Q6s"-4j7**Pfjo#V'*E,M&$YWq(_gXHen&X:aGl5sP
%o01j+=Q@3J6Dj?allDp\$d$sKJu[A?$LW78m6pLPnu&TL+WX:JE;,Kh?tYHt;NL03U\(JYK(<S#s%!ghBF[eFeQ!ph=aRVmB@ft:
%'fTs*99.h%.kd90FA,t5"TQ-B":uHp%k6\>ba(@C9Jos<$0J_?8P`JgJ\%s,-]C#\;VS!uWjCV6!uGmg(2Ir54?i4f@_ME#erYb&
%_[R4oO/BuQ[oU5S&2[.nE%6^\M6.d$!9u\lK4n-A%h(J9$?n,VggF[Wm7Gdsj.Jq-.o6&82h1rVXQ4.d29A1h/CujVRIXaS0c4M9
%p_&kjGV@467C':"k@]<W(L2pI.SUfu?dGggE6A3jl[!p#Fp/%LN$/Xn;qVl7-@&7X.8&Tc%NBsmm5/thD5_4XpK%DYR%K<U/R[hS
%B9R<`.n<'hFX]*JdbJnee+\4[X.'OV(Lg%g^qb_0=Yl"]V[k'qRqeMKncFW[P`0N]TAR2\<J'-DKALSGNhMYd6C45R9W4#S3jQ!.
%mfNiZW6rMg]=.(uF!1h'(Y@5iqK[$R$rGsq)nn0Uhh*\=IZXiZZ>,P)@0j$M)'rJ%B11u'&lmpl6A+Yh&N=l]VfiP:c$Q'Z01>'O
%7eIR7-m8V_(q=@cS6>AHr6+U@`BFetXpPG$Z6k:f8I>H3mg=o.Y^]b)7qK)AP4E=2f\rUnh+djal(3j",_id?&Xan_r9d)$MXU;s
%Y.rk\hrX``oZl-XXlq;>C"bQ^L5&M73"Z'N54l;-&bpYZV4cu"io`F_nF&6EPX5h+mU)ei1oAVl=R_YjB]6Od9G[6)G+VU!K6.h=
%SJ56l2'h\;Q$Hi?R<rJ$a"AQY0f.!T-h4qA$7,_D?p\CDnX#1K<mlXIaZZ,\RfE/<+B)T]-#eOl'b3':,+8)rAH2ED:%nU4qda[s
%T_r;4N=+hT>\"odIn7QCLTT-9-A99T3^3.DO(]+C2juf$W_^>=?^ImRe_l#<Z#==a'CgmNBe$OdE3/!u-+2dMAbVkZTpiL&&-dli
%L*hI?.r#4_$hu4(h(#J#LS)!&d;LiNem5^PhC78QmM[W_%EECO/l^>`e\WX@m2[QmJ.@@'P&Q,q;X^Sf2k]:N*Ga5-DQ/K(jMp-6
%KrC<t'jg>ts5;1-$1J"jZYi`OFp7pr&1%W(**P3*Z\XX39q3l/F<RUfg"M!-Y>"fN4ESe'nR_UhmYout=J^\\WlY%B";%1.1%r2a
%&Y/W6HY%]aiPT$GT^]b!W8f(LlL7eRZ?EmM"+.8P;FEs.\"YQ!a.Ko@$LYr7SpiWn=@7!h,[of,'h9Mj?'!;uK3[=aemLdYji7)/
%pjmFn3?I_UeFa>G>SplrF*=BAfm)YV*>7U=iJ*]ZPAk2;do+:NEqnjjF<RJPh7@i:gPJ:Q;g@='(9KWRfA/9=n3'FrW+Y4"0Y]#p
%VO=;AFSq:P`*,o^+MRo/bkR,"X(1pKX.$WrW*)XmJ(3N%i>!7'jY'NkXtm/nrDC7t<4_)cqLsqeVR01-32#(EZbNgAM??".L;sZG
%JYX](AQ0V^>#heC[-Tp*_TP,W2A#&Hl`_:9E%4;"C$uVK_ee/KC2b!q;JHMLPZ;(9P`j]ddME=#[l9,_KObV.%=*W3$tQA7i01Id
%$,%HB;NoY;#"u/B.FCaP*)!KfhdJF<*A/8!#ik%MVM/utFs,[%=.+o^_\hoV(D8E(2ob9hAZk$>aCW/f+h*$+]"n-\O3j\I=r3Te
%Mjc-\7e'V_;Af5XMC&s=*_fQ_M3#6ph]LCG0GC,>M''WC(?EDQ&_0Q/ijgS?MYB3&XeM)K<';(+.1)`JC6Pb2eF<e1K"Bt5f;oiQ
%[GYMSZGI'#be.pC(fL$=?+$D5]tM%^E1_&mFD&3mKNVXmh49UQCaJoM>0<M\Bi$eK14_k'=V0kYio%*HrsA^fA(huZIK]E;?)KMG
%3Ghldr^FgfMj@%U!S([$/ee8iM6s7SFJ2h)c;lcYOG$j0XST.ap9Z.*=FIEnrO/G>7s@Ql'N:3SKV.pl);;/sK.#IN8nO*X(1t.g
%"E3b2"Bb9]$k$RlV)ln'r/?iX.Tf5uV8-(T8`r_3]bNB=98bE[2ND4F@V]qt(o4buGjkKCTDH\YTYuroM?;"3?p,R(RE*gr4?^DQ
%6LG0<&sCl+&+6cL4&X)Oe@a+>TZ@[WW"`"BlodCq$(@s4h)G0qLN28T6VY"IOJ5JcAQ?,NLP7'Hj.V<CbY$qpi\*.=%"4@!XDJJ\
%?6!25N"-?X5kf$V##3G1".rd3bA=^5/57qKVo#R@+s5\D08r.:K@k:JQ`;"_o>qkf4B:@P6[aN#H2'+cjsiu.9=@>JJ\];66Re#9
%BDN/#3)$$&"c'C'TK1Bb"HT#+3Q8/k]3t*"M6:9N"&PDjk/jE@_>L^:F;d!CAYlPa3stRHpkuAF_\I1%#eaB6K5Q(l(N&Y/-7/S=
%6QCL!$k@0d"t5s-BI#n%,4X!2_?*-G;/q8c-?#,lr[c5[ka:ZiJcYAPcubY*Ri'/BIBn/79`lYZ+6ArIQaic?!He*=5eLGIN/c5>
%&&5K#c(SL[a!g0lH'#1&h)hmUai=Wl/3!($:NlONQ/uVjYS85pcuHA4nQr5Ed\c"lF"Gg&Ci>=$<fk=#l:l>k_.kZ#Ir1MG*fLPM
%Tt.@#1Q?n3:-J*.%licp,X'dk/C-gb;EX#;N`r<h29c/IrOb5V_g:sV]c'G7a7jiVnEY88os?]!k=Q6=noa]2gN+2hRW(C*1%X[E
%GOf^nTZlpn`0EP,KRn2>Si\R4^"\T=+u*QaBKt\nWO\)/IL2Cf&SMYQ<KM7C6bIa)Mk^9`S<<*;O_?ikkkT"!hABQGotK`AH9Jj-
%>_grNKaW,te[L6B%nGd%"7LZHj'8kHnA=*`(q+n)Z!VScidm!1'tM(uTsUm]EY)#pe7mZd)(RIf?G:aF]if?"a7IhhQ%,'sT\so$
%f`?hGQLSg6"0p?pVH-/B&<!Y#\j70`=_\F&4n7hchQr-XAU+0&VrtOF5Ca.=Mo%i)#RO7VJW:I<cXFMhbE/DY@>?g6V<,]!mm.aF
%[bTa^d"QDTD*jr9XR-u*DN3CR,$=D<>sT)k%<Pjb5c)W.kXIcm_P,W:eIu:0MoO34q>,4NG0K"ks!fM5Tu"oXSPt,upnOhmUf.>;
%@Y0O<"J;1=IlAEnn)Ms9]mB@6S3%HSCM?1m21<ke.bB9M.;WRQp/S:_@'"j:aKjeO8MS:*&%jhab-<h;IX5*>6n:=H/Mr<!BmI]l
%&^ROPSSRK9b(/.j(tR[F2aM_4rP1M`>E@6#If07F$_o[,9#q-B(j&k?]WDL,N:QEung2CG53d;]Q08M6IBO]:kCnt&Uq])aF!F!A
%rC9*<66WH5jMo?nUI#tG@\'>U83tZbXCVRc=.gl?*`K.#"\F"'COQHpE#q1MSA&KM;3W(T5]QXb4V]I\Xq_+m'mZQjV?9ElEG[gU
%@34_Vd<[o0&RZ01YB!;BaPfW+h0W+q%EIph`5WqQ2%W-"6"\Hf*M_Y&U$%XKY^kd?+p_aLqAa06dRP'\$c&-YA#Sf0TT4=\oaT!e
%mls;C+@3R0UT7NN*jqK=""uct0*+RHj%#U)N.@rk(lgi#ZPO6K2H0&[M#&[u#R"U5NO*!rijZGsknhVCXi&#Z>5A!keC*m+TQofC
%BP`O,RTY34UT#['q^<Ek3H&cVAGoauKqYgnGp$`T&!JKe8f+!EWTSO)b:iPtEefGIp\I__%CSONoH+_h8c"PT>l9T#',)K]Z>3R%
%7Y@jL7teEHmp]:c`:cpH$<Q!PiDTah6b`T&$R'a]^45?%1(QK%5&ruOeJ4-8Tcs]=]h&3aGJqfJVh)V<I.MjcX-jqeOEP6jO(F*E
%AQ*n1K#9NBa9*")Kg=\GjB\#t1qa_Is.m4u@1Cn3SFIoT!IS(gJ\C1lg8iQ:X@pC9ih4LABY.Z)^Is@Zn`DpIlhKF-NWihdqqsU+
%7A"d(DTdQFpBGGX($MC36N/AA\2.hiD6"U&hW#/@+Hh:e:e>fSFuqn2-iml=Xg=.1HV.*GYL6ZVF8^P@p)aFOCVG8#EL/fC$(TeD
%Oh>s7*PEc9FcPo`2u'bTkC9G[$h^8WRj2]-cPk:?H1[k]'Cb\4N7rH_Gm,1?OK+UPpP^QF!&KA,R\TMBF$iekigH3u^_A-5(!Ck\
%P.Lm?#Jik4U(Hm]([Oe6Up*pPCl1P(fTZ&aOuj#(80(hu5`(lLUQInhZRZ<]f7:"96imUVH<G4J)=GFX?hR'&,W`M'ISpqH!P4/,
%>aT[Z]@$5T\jt>Uk"]hc<.-t<Mo(pB94tqo^4C?n@Wo^u$o5U15YFUZB_BE-0T!itUeDb)A#+_;=/62OUG8cq:9CEf0&?<a4$2QY
%#"<^EVWKMsD2Bp8r]$FqKHEKK[PF)7bDDL>8PhU:Ah2T_<_bSjaU>t>NC>j3;jrif)aAahX#qB@qW`[o)d?n>Jp\W*Nl2RBg&MZD
%ArfkKKq+Tb23/n6])GP/`V9WX;DDo`]TXu+L-"qr?2pWBU!P#c-0?Dm)q\Z[/>V_(`!Vboq3=B/.Nn:1'6e[B<N@M#<d>%hS7Tk$
%o8T?s=nmKYR=YcM^pWDQ0X("88D%%<RTN#3eXa<7j/*J.iJ._i#.dr:eH?GGP\9Kj81;^("(eKBPRu+rZF<iW*#J*D!GY&TgoW<b
%8MrLe?LV7@Na01RqcD)MKgHKrC6ao5R`d/pS5Dr"i@fJJ,UW`ROY06[[\i*h7t?IQg_qr/=q5P$2PcJSS@l62!D3].2SiG#MQ(L+
%ik9cHUgCfo($Fi=Y)3/J/[_%.'/QB6ZZnMLS+7;qIO%I`+D0,(oD2__PGZZ0T1R]0j?fk+eFN6O:R^p^T2h3mNQ99<jiO9r?;@ep
%o/EG$46$'VQO>HPi3TT_q:Q&/mm"?YQ"KdoI1h%>Xb2Jee,eLfiBGJ1$Me5#ofej-E0@31>R6bP`H_(O\0k#I<S&Td@qOQZdt^65
%STJt??Zji>@8Q)f(S6'E_k))E`/["hK01Rps$<ueSh6L1EoKYpZVP@Y=7?_$3X8Ck!=F0T+[8muR&7A0Z2gg4X2C5!Pt0>6'1E7l
%$MQl1#o&,e!mjC</RW)Q35,WDF9%$LM^6u:(*(I#J3]M?E*aWJK1)AcZ?'k2B1LZ/I#m!@ON:m>402JI2#sn$QR@+pIK.j*Y9/,L
%0`*&8mk"+H4COBe0p89`$cGubJR2KtF'-c])#iVlmH;mY@k%<Nj]BJA)Y_t_#m\HVT*o^//JY5A3[,!V2aBSC$c+Ro6DQ<*=iB;*
%UcJ7c&Z9.O`mGtb4g]0\7-,>@jshlbPR%G-TK+Ys>p&iKPBe'S=-(,;/e]sQf&bk+j$f0<1e\KkA!flI%&nl#?_lG"32rt'0G=Wt
%Qp3n0'H(qE6qYf8W5"E^G][)'[P0ErjS6D+C,ffNWLK>3*?27"fQ/:;'\Sp<i]]Gl!.SDqK"PVBs4']6N3#t=\I"Efr=XE>"4'J[
%&_9fS[iG!o_acmVL4rKWN0T+@=im@>JsS2X.7[)tckKObMCk*Y7c?@(>b):hb`>,0lBhSmZ1Mih*_DtgdmV,]0:]i:5N9ULP$\9,
%3RP,YJVj8#%2R-."ffk"+2B2#_DJJ"j;l6.gNJS_84SaNJXAj'H7tujNWJ1,BjNkVJE['%GC:TYZc>>i7T05$D"p$Q1-&iU>kTj%
%`79!8+/[NebH8nVU-J/gdrlcO*^_dEE,-f/\&/5bSc;LL+,XJ?/Ecj?:>bTB@73K0"3fV:km?D]$:=?c2W:<jZX:Op^^q?_XP<Ck
%"4#N`>%0#QcT!Oe:$5th`OpkENCpj5a^U"!)!j07JOLDp`_o[q#%*!O)G&YIEslBQL$AXmpVUUa1*q&%J20(O,L?"e%&&>SBSu5*
%fi>Lg7e+.a]6k&6qqe.a97>ts!i:2Z90(1?3*+Ln0J)(;ol*uDbYb<7:B81c`V<k#HB2n_^$?bbr.[.LHDj&AD?r)*Sr0$,PTCAc
%osX?Cc46rfZj.de,I`_U+QUXi%2CiddfQ#iJioh25^)=][A<upN#MK>]q$sdK_rQiM@(8(+EqciCFKZcbRdeiPZfY&]:`JFAt(Cj
%3c33`?W`;On8CrW<7bEgK2MhuqXoR+\+@o^:8K&W6DJQp'bVgb$%fE.:<e6_qA9[`3%!dQ`tn!<I4=+TnZ5F^Dg'iI!;<h#&R5#7
%-uBpV_ps/@(e=rjQZs(;!s?f&<t.-p'=(EFUn4l!QkE+^6V^@l*Ip0kO^Ed%"8U=*^)9EfpMD^@61?Y\$HbT;5Ts?+")4;<BP'a.
%EFWrK&IOHS2!CSt![Z2LN/HmBfl1(d[GXN9\-:k4O`OJ0;0[t0;".FT&4"uE-MYT/h(j7hA6=)Fr0(>*;:.qH=/"]Q[R"h7SF##C
%481W&Xq8g6PVGd\%G%.abm]b71GGF8,!ph.n:N0fS99\;fAn)[)liVmK(E]3SUkLpLuYJUk))85?YW1##;O`7OcV2-j-MjP^Xc5<
%0O'oP_2Zp:=<`hMJ%\/qKgUY9"?BMGX,Q6kIQUXm(niX]TP#l&;VO;J\@dN0><pe1Fj>:T6O:ahn]euQ9S(G#PGY8j1!I[9JjcXN
%P5sY&MkXebg;#1-!1PQHUA\hV%W/pn`.(k<>QXZ4M9(;P0YCRi-r7a%(`reBSgu+F@#k!%UT;6QDG.R@NiSIk[cHco<=4`*JrLjI
%*Qc1_+!D"a6$Bf+;`Jq/!bsZMF]u\T!gFaJn!8V"pjZlPQU_>=Yc4LXN\8/2LN+=>ZE=u.hQO7NCKYXEp8tld7bSC7(?A"F)5)fH
%lp^XtIq4iF8H9M28a)Sg5.XFI4/N4[$[hc4X3I*n8_X@%U-t]]14]UiiMI\5<A'QM\V9WSDXGZc??l\iRi9aCUC*qWWbb7YG65$g
%)tpIQe"VLCU1dK^l;e'7C=6n,@<%jYNPOBb[ILSa'OYi+H0(*R)TGK07GX<j<'\M(n?)$[-Aa-nb%YLr<"h^9"(O.nNFO&g>;l_a
%MT6:/kj,kcB0PGT:h.12*"r=_!ML%CrE.MO/_Wr:E0CsMLXJHs&n\lBPX$[YLi)GXOH<W'&QDT`V/V!GTMut?#n2(tJ=N6Y$:RDY
%>YdPrYb98!"WRgto#+-Kj=lZqg0.:cN</Gj&2Vo&5W_cp&aQ,%UH222XKKA@MpiNl8_h;s)pj!F^M)>_^^$<`G#tQ`^f%-[M!;YO
%F2W]P1N,>?ECVGfQ1,V^0C&$-Ne8hOgs6l>B`,GQ15;Ra1g@C\VpRK8rV_SQ+c\lK>M/M_"jC'T>,Vn5q^OD@C]mg6M\r0ll7^I9
%d5hUA>,Gu[aP],)#)+^\89j._XWi7l8P34E:]/h[CGuad`o2H7%2",618pjSlB(b&cAG.LnU!A#5-V;jr3U"*2UPFX_"73+Vfglo
%/?e5=qLN>D^\`Q]mK<G-p&PJ)Q4Jf,,!]7)4i/B5=?h=%R9ZUCb^FQ#_D^AihgUa.1SS,Zk"6X:<fhND8GEJcLV-p*a4g=7oUCp_
%P=+$=:]N/*N5^aIiG]0FTWu0410f^ghe#%fnN`u[b@/hR%T3[b<)^+NYf;Q_QM&[S_]2k<3O\+*B\d\0(gD$e#sJgr&^Lqcl8]hH
%5eC,HZ!I1-0IH"G7WhW311DFGY;kYW_?[E2UPp!B7P0/J8D>m>&+g'hif/Br&7Y,:&'p$D.NB:[i,E1j#\-8:o@-2\DE5.0\k$[T
%#:%+h7ogLYC*p1sUKh&knYS\O!$H$ejG^ZeE`l9jY5D]:U*J]jlr)1sqW6Q#/)\EBZ51tV6XLiT968%73D$NT0MVh"OHgRm`^t1[
%\g"LE4MGls60iN4)fE*UA#G3ro+@dT652QnY@M0]mC"]$MBRsK^74AS$?9i\VqbUI]:L:d)BB)8#)L?!pfNZ@8dFVM8#Nh)$oVF_
%'mnSRq/,2U%?1e>S!lZFAAc?O)nm:f,MZ]FkgBr6<$Is\D,i[aZ0OB*6Q-YT/@@NLe)=d9j=U)]U1/dl]8g`9g&&Y+g6Wc#V2J>u
%W"=/$*m<7HH8]a;^tIZ0efOgH$ObD<VQR_SbbG8AH!/5>ntI'lIDG,)!',j@.ZU)4(56m\C%L30P5;6[*gp??J,3h,X=p:q!13)a
%MshQ!H]kN/m\21gV0^c"8bg02_bROF)j/*bHIU;qKm,i09*?DR%\K)pH.p_dJp`Y)S7@?8AkS],R,OQd9dp9`HW0`C*!]5JP_@Ij
%](OTX>!5njqVj<J)LTuR)a/M0h>OJ,IiX^NUA\V`Tgfgc^`5jaHA:OZ'.0VGV2Koi,7g*Vc7lS;GVUEdj!Hb;%8Iia;Rn(2pfWne
%\n/108tBrO-<1S?X)TO6-6:.VP^IF]1&4>RrUCUIJUo&d!ulB#A2,kQa-3i#%2:e9)4c5kOiG[0@\(ffWrj)/'`uJi+D'SPg`f*>
%$&]'8:!*9`cb\7*E.0?GCusPG>)J<l>ZmO06'6hH"1AoQE0:1A)isruqUJE4oH8',#=/lQ$@'9[6eNoVk?[rZY*M*H[BUhhV+jk7
%)AJa)+*c_-1*>51V/5b=f5ri-^:cu6A1L:R&"OER,DJ[U+e5t&b;pDpUZHIcZEHPSPjD%bYr[1ig"-r0^R!]'/GWCXdd[,iQi+Kd
%mlF_79l][/(sKW5WFTKC;qBg2"19+I>gRWNfC7W=\J<V!A,8t^d>PO`:S7hlS>kpbg9(KX1KGWCij!et;-@p'.W:8gmt$IFmmo)V
%>(MtXXu?!WX8]ctA:0f/s$p>qTE+/REC*=r(iY;cngTIO3CLafM+Ru2@+<iAERLkE&.s[8V_jui8*F#nkCE+1?sGlD/sTUgjtGlQ
%h8k!TmneZ.K*s9gMVgHXM(>=*\rk)3&M\(2V\BXG]J0(n_+LF@ku+jMjh.Debk>i:US+FfnqL:.h.RmaA0cj^2XNGAnWBSXcCbr2
%*mSU`$?E/*Y+VGr?A'9#5/iG'"Rp;Y6P7.Br>jdg#u70I]bS.OAi^jd7'pWAa'+/j,/fU[*,WV:0^HbKZ5[47(%agq_W5pF'7D^a
%:XOTe=2ujNP(NW&F>EB5a9fapEcK9-U>VlY"g\SNDb&k!G^]ZK*_/+"!4.BAi/]q>kp-<I*:+A!h4B#`Ta2)VRh_gaie5c6ep<>m
%_Q'OaCt\8BH6^ci%Rj?#&.T9lXQU'dm+?(X@G3<iX78n!#Y(M5_O9d9Di?*f:pgVVL203D!jelIqiZdY+/9l,#+DDUgnU<pQBlZ`
%3/R1*d"bU?lb"o*FI^cUFmh;Rbog3-$1FXkVV8<9iG/SAN'*$N?.dTl<>$d8@CS-HY8CQ\=1&afJ7EuDLJ/nR)6CLF<@!2!+O3A^
%95NU>X9flBGR[DX6__1V]cO%16JIu7@"!\3DP)rE56et6CW+71SBs^&?3ItVjW-OaZ]PU2(`J1*RWBBK;s_21Yi(h_r%Ttr7GkKU
%d1T7/*P?t2#T1/PM,B,"H;%dVB1Cbj4p,V/AFko2mB7h1)5S*u%`M3rluuZ&ALNj8YuEZ%9Fcg6]dAnG)do5$r$4V/d*cC>UU-m<
%L!Rcjd.3WbLCu]*nYn`e!UAJK#tqeu[6)JLOU_E/P6L6nj0]k[J=1X;(89$oLfai?-&=g8P50E2a^k(U*rJ+l%r_?R5]2kH:6GV9
%Ma4*`(+Kkoim[TA0cN)eO1aa;,ad:>JI3!%%EACg$3>,7-U0.U!67s5`1hr#\[lTYB:??HlX7YG;>-P%j+AmmLdeEO_P\n%P2u"0
%FO6<N4[uQ`Z,-4"5hi$cHBcCumAog:%*R(f&Tl&2K(l+;)\E;0c4CIjrBV]HMi#A^CH!7OMs8V5+P6>O:cD!EKWfON01K$U31pU7
%`@(qi#$pDX'KX<Z8pA@Y+s`+Pib7J(9Fru+X[@Z%BLID?M3d"GOdE\[6BVS)jI0*p0JA[P`_i$2QPEhtokE99RJju[Za?+^gVCjo
%>"g"T3hVREHC85/j-(N[?mVmf"!J$%J6^@N(((kVO:XGjb9rXGEAHlARF3am#Z)<F7u8>4.s<j^XfbCtdlXb!"p_#Snu6S$BVpPI
%Hpd?pp)-t`XNdS2)\8>:#FAs>84GZ@%aNJMLU!T&`O005*5k^@<G1)h$0D`UG!AnkJ6RfL6^<Tb%3FV$CJ)o;lctE$ZF>kF:Hi>T
%9X-S*VZS[[,cKYD+<Jl<Lo-O"F"'+YdA$0T4s%k]Z;["J?r0QDUeDq;)bONEKSQO9Ing-m-#'-,UKNqia'!2*eeBW;TP(m<,YLNM
%R=j`2,R:,J6ODAXeeKb\L;k"Znp/okneeq[7FKo;cAZ\mVWFS0aCGnPc8m`fNmDq<o[PiMaOTAm.18XYJJLYBM6:_a9$%nCr(Ggb
%:r]a?PZJ[t@0rk"\cTm/d%Sj"ER$5u8)uns_);/M5+oa)OP!jG/s6os2m<1/')akIJ`Q1-=>Qp0Wbb<d'qj?#9#EY6bX\=;32T;t
%>!FDe+>d!WoITcJ-99KFd=DMKb@IM6\aWo[c`4I;T7[n=/pO4i0qXWe#s_1,J=;U%i6bj*0kEB#a1!.ur1\<%>.b&;k\(R[-:"Nf
%4e]>$!Vkba,O=/pIPFo^(1PU(<cGi'SPhRk)GEmbmRY8TH%:69>9eF@+#tp:TaFBWg3FWSDt;k&Fm&'nXQ@o(T72(]qsDVc0840r
%"j,K;%Q9rc&;T'/N[IE!Z(R>T"6d:A9V5to3AOfiEh($K]Mt%t"PW_C92Y3q1U+qk*LFZ;;KdmKb"U_%Qh,[S#T-PlmL98&K1\Z^
%KXZ2^.1CNZqd\@(D*(4#jEbj[n(^WWNW:IG4KNQgLOdRd(*@Gqf0g45-%M%]R-K4]'$>(DG\@L2M.4W63.'5moB\J]U7d>biYdE]
%j3]U_VP't,BU;6iE=LU8;-8hL3!5+8dQ3R-LDd/VS6s+ZBV^Hsp(^[:A<*sCTdMX-W&+pcW(;RZ@a6gm.O7AN"j`&pUf@Mm#eG8d
%L/dPaT43X\C7J4<`j<Lra"@%_DqfnPSbqB/Q<9c1GJRB($.P@NMZ!X-\49jPi$Kep!e1F>?YZD-^jts3=-Z>)!W5Y/?1p_6i0K.D
%GYDH6pc]5$Om#.MITJeL?_Yk3=%F[*\&V7\)N"d^^@rDm`mV^PrZRO5BeD!5MFQcsRrC!n8&?fY0m5gsV2f5W3a<emhN\/E9'\j'
%C]t*)@u2/JM%aoL#AX[Y"4JM6m/9Up&"3&;-K4^KLNg;Y!ui7AM%'h=g+.=terkI@]8<&GUP*:_)0(Bi)T!OZnP/5"lVkTuH/QC#
%F:>\Eq00l&jWRbtnIm?DB/I7Qc8;%k'!q#'p7gLW[=TJ8lDEM'[;rndF%Dh//>_W41uWNu[^[A6(;SBb0FM5J('UGjE!d2?JBNUc
%!^fL(4eBQ7AbUCD(iNY7MaULN@H3S#^QoEK2$0FCpN6;<4JZRNcCuRe"*_Gdh/H%$\X>6ORsSKDYG4+E\K-FYb=`(,OQ0:@@I>X7
%e1:70/u/hZ_k[uLF#`<^4*OF:D]>gNHbu.55iKrHLf+;eXA'F_8DbJS1qT.s(^NAt"ZJ3gJJQ*/"aFfE:AkL($W+KTbsi*"Pb8QT
%&gZ0.K",_iV-21IS.&4Le.(LcJ-MFLACU`Neikl72nP+;8J?NTn:AB\K*dU)d7gYZL[)FqZq4/k(E#H0p64&b4M8Uldt\iB17^A`
%GQSf6MAKcMPEKfFa;dn[7'3b>I6nH!<7A)`6<gWX`OeT*!M@\NS7m`M%f/YpX$n8a@-GR+d$C3*kS^a:i]Cd))7*GXQoqF/8GnQJ
%0a09aR1W,-[DmW?<QCVc2o,mOi>_#R6^ot_/I8#[P"3<mM72]^Ym/tni@>n0#k*^BnRk&V`i_-Z^uS_HcsBIl3R.Z(1L<D+m3)uJ
%N-VRPSQZfu>)[X"Km68'do;t&kpYL[;-s@a%RP!Sh$^,E"B1lN7F_oD^F,D_V_MtNdu1S*H3(r$6'n/&"TUab8?4dfd(jlYfosg2
%pUA!#J)nL+)6WdX&8FNHob9f3an#M.e]<ZF<;K)d?d1M?P=4mC2m-uW-CP<S]-?7Xaq63.OeP+k5j+-$!BucTpf7_<-1U,u8)iB6
%r"p,#Qmb>TUTF=`8%i#XT)&#%`nZ^oTHN8SrLTf8&WTpI,VCmCF)Yn]P_;j]5_<"IK-2ROPd7#aD)/2h@4b+CI8%gj:TsM`]i_31
%=Xc3$76kMnlqiZBB.B9ZhU\7M5b!/LbEn;OdV:snZDYhIlZ5qk^29\$e\&Pt@>iTL*WeWt"K7qY98s_M0[M07dVY[<_BQjaYo7,3
%o]e+61pPFB%J(8FDR*_>DpBcp-h`uh%iHjtKlHAi%X"hR'\MtV]kGsW74T7!W46sr:qbEHYK6R>:BE82*IAXM$s-s=Xr.Xe;kEK;
%D'T.`:mbL<,r!RboHD7o;%Gt2C@$\i-C#p?+^l4d92I[InMI,rKjU59\[j8\rXrC4i,lMcIF?D7$io85hX?mqJZL]U,HkQZY8VCE
%"RB5pJINr.#4%ta!qK3/pF3s!?kim!VWj?u/YDgDF-'H4KU&3EiFUQti1SrD.T!]LNjK2ETJ+,m8NA7O"%&pQG,"^7IjZ?V0mFSi
%#atjIHQK\JQ)T&dZogL]+<d6RJ/NJeP)G7-1HtEGGkLD(@-1,aPP6,I(ImR/H!.1.)K?f<N.L2$n1YaT:4>7?1_-;4k$E#S`Il/;
%TJ^$l<#hkS"]+-ac`6qWfoIN8#u&'7GFhE7RMi@XAVpAaOA6$"g(A!J5\</[Qjc(_%AqL+'_"G6n_3Cqh3na*&i%%EY+9]hHOKH4
%\Rsg4D'2!+2=+@ArToYR?L[TFk=97'*F%(\W^DWfMn>'uSuuH1L_?q+^keKpUqdjQV8?%I#_8hIbJ<@(fi43X5VYqDC=FS+k#lX%
%%AbsJC,3*DE`BOD_P.T]P!o!\<?f[Tbjl/V$E)r#+s0&@2M^V?21f!HP^P!GL@t-T/<mOhB3bUhMDdgD$JegMA8Hm<aO?+e:8dh=
%!-sgu>!]+p+O;h#j\-@Cr@Ic3DIKJ52l^7cTH+g&Wr@Y\W2TgdYjJM`#@7'aNRh'aJBF7jSc3.Z(+S0%pb7QR@U/3fH]ik#V)WNd
%(;Kfgr>"0H3/[!o'eUOdV(ZXa('/:)?P``RSpr`'US5Z#nQ:(e)7Y(9k=,X^d39G;O`Ief7\]$cbN/?$BY!rE"TC^.F4K5>2(7I7
%e^206>Fp[hgiIdMO>RI4&aRF*iJ/qdPin>r%2r;nIb@m^*]9F)>lC2*r4uef)Ki!aFK/[X=tj?)i+KO'?<B/SPha>NZKQYQS_pdb
%LVig8(=*N7-WsKt_5^N(QWut7QEfH9]T``L*:Ye;iW`M$mEnbPmn&/V1E)<Uj2=*A$&CFtV,s1`=&oV6WFNLsju.+mR+EBm'`K40
%hZiAmn+G=m5faNV6+N->#!FAr<G#V4n"$+3mbR['/S5VAclQm.<@Jb9%%*oJa_e6@4?2:`QP)7]Tsong\1I:KBgOjG%=Ve'eY3VS
%GT<Ac<-s"a`*_R[=!no*$!bfZpRStaUl<1<3A"%`.'&iki_W`8PFZe^O?R[G@B)cq4l?gK/PCZn@(Zc!ANRHAJKSo6c/I!p.D='#
%5IL]nV6Meh#4?0j^lBASZrtgM5r&9GBZ\Wie^\Kne=P:79'm3B5#jZQ0lMG^k*&#L/Bm.0F!@V(X,p1BmVO/C<Kj)+QoUDRPERpU
%]E#ScU%q1jVGFk+\)j=/]5UJl2Yca0g"<AS[g!0!1gaA6-n[-D-h3HN8uHQ&Q(U@AoMJ$_P__H11[KQ::63looB#<b)p,:iFqBXO
%a'`I-XX/>D#Qd,mXbrd@CgU>q$:@!))bX8s#o]l<Ni&$%"$b?R;+\hog*-gM%P@d:O1_Q[@97]j[6b8ej5`HIrs&=V'I7DA+C71&
%K_$a7jA(A-`XH/d"S+9O9ks`8rXp.W28\EeZc[I&Qr*WnBmWC2[5/;BfRYk+EJ>tn]gHpUNV@(ub7edu2]E#?eeH`1O%q_:OZF[]
%/.>uNcmBU-ds)u:Y=?\BYq!*[Z?&Q7@Dm/#JDX_6IpiCkMYY=ELDr\)P!gLk0Ecd6j$h=]4EB*5,&bTqDE[W,O1^Ea8:CB.2bDOC
%$u._/XD2b`YPu`bV;qbX7Bu0diP0/C@p&t8],Ump?8G7@$sF(%1Q/YtOC?feGt6?i8-E\37l?ki6bF4nbk/&*NonZh-pDeuHa*to
%6AoRF'4R?Nbn:lXU>9.6;]IKYjl8ci,'4sP]'@O9cYRueHM?A_*r#Sfs4mXphu2$]5Q(%)J,8bl%nFOprmsC6_k6q_TE"]$s7&m7
%rkmXk_nZ->nP?ptnXode^\4T*F8XK?s7#29rQG6>k<K"2Q[eg<s8;oDJt(%)rq::1m_A[t5Q&e+#@$qrlM~>
%AI9_PrivateDataEnd
