%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Online_themes_2_04.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/15/2019
%%BoundingBox: 0 0 600 450
%%HiResBoundingBox: 0 0 600 450
%%CropBox: 0 0 600 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 11912 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFD63FFA9FFAFFFA9FFAFFF
%A9FFAFFFA9A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD63FFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD63FFAFAFA9FF
%AFAFA9FFAFAFA9FFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD63FFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD65FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD63FFAF
%AFA9AFA9AFA9AFA9AFA9AFA9AFFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFFD64
%FFA9FFAFAFA9FFAFAFA9FFAFAFA9A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD
%65FFA9AFA9AFA9AFA9AFA9AFA9AFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFD67
%FFAFFFA9FFAFFFA9FFAFFFA9A9AFA9AFA9AFA9AFA9AFA9AFA9FD68FFAFA9
%AFA9AFA9AFA9AFA9AFAFA9FFAFAFA9FFAFAFA9FFAFFD49FFA85A5AFD1FFF
%AFAFA9FFAFAFA9FFAFA9AFA9AFA9AFA9AFA9AFA9AFFD48FFA9AFA8A92F7E
%FD1CFFAFFFA9AFA9AFA9AFA9AFFFA9FFAFFFA9FFAFFFA9FD4BFF847EA9FF
%845A84FD1DFFAFFFAFFFA9FFAFA9AFA9AFA9AFA9AFA9FD4BFFA92F062F59
%AFA8842FFD21FFAFFFFFAFAFA9FFAFAFAFFD4CFFAF2F29062F2F84A9FF5A
%5AFD21FFA9FFA9AFA9FD4FFF5A2F0606062906537EFF845359FD72FFAF7E
%062F062F062F062F59AFA9A92FA9FD70FFAF2F290628062906280629067E
%A9AF5A59A8FD6EFFAF30062F0629062F0629062F062F7EFFA95A59FD6CFF
%A98529060629062F06290606062906062FA9A9A92F84FD6BFF5A2F062F06
%2FA97E292F2F5A2F532F2F067EA9FF8454A8FD68FFA95A062806292F2F7E
%AF84AFA9A953532F2F062959FFA95A53FD23FFA859FF7EFF59A97EFF59A9
%84A9A87E7EFFFF7EFFA959A8A97EFF7E7EA9A8FF7EA97EA8A97EAF847EFD
%1CFFAF2F2F0629067EFFA9A9FD05FF84592F2F062928A9AFAF2F7EFD21FF
%06592F5353065953FF067D2F537E067EA8FF06FF59537E7E06AF0653067E
%2F537D532F5A067E282F7EFD1BFF842F062906062FAFA9FD05FFA9FFA97E
%28532828065384AF84547EFD1FFF2FA82F532F068453FF0684062F7E2F7E
%FFFF2FFF7E2FAF532F842F532F7E2F2F842F59292F7E5984A9FD1BFF8529
%2F062F84FFAFFD05FFAFFFCABEC4CB53534D53062F5AFFAF852FAFFD1DFF
%06A8065328285953FF287D2F067E067EFFFF06FF5953842F2F7E062F597E
%06297E532F2F067E2F2F59FD1BFF5A28067EA9FD07FFA9CB95C4C4FFFFFF
%A253282F06280684A9AF595AA8FD1BFF2F7E2F2F84067E2FFF06842F537E
%29A8FFFF29A87E59A9067E2F29592F7E5A06842F537E2F7E53537EFD1AFF
%A95A5AAFA9FD07FFA9C4BECBFD05FFCBBD9C282F292F065384FFA85A5AFD
%1AFF7E5A7E84A87E847E7E7EA88484A9597EA8FF597E7E7E7D7EA87E59A9
%59A9FD04847EAF7DFF537E84FD19FFAFAF2FAFA9FD05FFA9FFA2BDA2FD05
%FFCABEC4C4A8A953532F2F06292FA9A8A92FA8FD5BFF842F5A85FD04FFAF
%CBB7C4CAFD05FFBEC4C4CBAFFFFFFF845A2F53062F287EA9FF7E5AAFFD58
%FFA97E065A5A6084FFA8B7BDCBFD05FFC4BDCBA2AFA9FD05FFA9842F2906
%28062F7EAFA82FA8FD58FF5A295A855A857EC4CAFD05FFC4BEC4C4A9FD07
%FFA9FFA953062F0629062F59FF7E7EFD15FFA8A884A984A984A98484A8A8
%84A884A97EAF84A984A9A8A984A984A97EA884A9A8A97EA87EA87EA9A8FD
%19FFA95A065A5A855A5A95C4CAFFFFCBBDC4A2A9A9FD05FFAFFFA9FFA984
%2F06062906060629A9A92FFD15FFA97EA984A9A8A984A984AF84A97EAF84
%A9A8A9A884A8AF84A984A984A97EA984AF84A97EA97EA984A9FD19FFAF2F
%2F5A855A855ABE9BC4C4C4BECBA2FD07FFAFFFFFFFA9FF5A5A062F062F06
%2F06A9A884FD17FFA9FFFFFFA8FFFFFFA9FD05FFAFFD05FFA9FD11FFA8FD
%19FF7E2F065A5A855A5A95BE9BBE8FC4A9FFAFFD05FFA9FFA9AFA9AFA95A
%2F28062906280629A97E84FD14FFAFA984FF84A984AF84FF84AF84A984A9
%84A984A984A9A8FD19FFCAFD11FFAF5A062F5A855A855A969BC49BB795A9
%FD06FFAFFFAFAFA9FFAFAF2F5A0629062F06292FFF2FFD16FF7EA9A8A97E
%FD04A884A8A87EA984A984A97E847EA9FD18FFBDB7B7C4FD0FFFAF2F0606
%FD055A95BE9BBE8F955A8584FFA8FFAFAFA9AFA9FFA9FF7E532F29060606
%29067EA82FFD42FFC4B7B7B7B8B7BECAFD0DFFAF5A062F5A855A855A969B
%C49BB795855A8584FFAFFFA9FFAFFD04FF7E2F5A062F062F062F7EAF59FD
%42FFB2B7B7B7B2B795BEFD0DFFAF5A2F065A5A605A8595BE9BBE8F955A85
%5A847EAFA9AFA9FD05FF53532F290628062906AF7EA8FD17FFCBCBCACBCA
%CBCACBCACBCACBCACBCACBCAFD1AFFFD05B78FB29CFD0BFFAFFFAFFF5A5A
%5A855A855ABE9BC49BB7955A5A855A85A9FFAFFD06FF5A2F53062F062906
%2FAF7EA8FD16FFC4B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD18FF
%B7CABDB78E8F8EC4FD0AFFA9AF8485A9AF845A5A855A5A95BE9BBE8E9B5A
%5A5A857EAFA9FD06FFAF2F532F060629060653AF2FFD17FFB7B7B8B7BEC4
%CBCABEC4C4CACBC4CBBDB7B7B8B7FD18FFB7C4C5B78F8FB2BEFD09FFA9AF
%5A855A85AFFF5A855A855ABE9BC49BB795615A857E85A9FFAFFD05FF845A
%2F5A062F062F0684A953FD17FFB7B7B2B7B7C4FFCBB7CAB7FFC4CACAB7B7
%B7B2B7CAFD17FFC4B7B2B78E8F8FCBFD06FFA9AF8484365A368484855A5A
%5A855A5A95BE9BBE8E9C5A605A857EAFA9FD05FFAF592F532F2806290628
%7EA959FD17FFBEFD05B7BEB7B7BDB7B7BEBDBEFD05B7FD19FFCABEB7959B
%FD07FFAFAF84FD045A5B5A5A5A855A855A855A969BC49BB795615A855A85
%AFAFA9FFFFFFA9AF2F532F5A0629062F06AF7EA9FD18FFCAC4C4BEC4C4C4
%BEC4C4C4BEC4C4C4BEC4C4FD19FF7E7E597E537E7DAFFFFFA9AFA985365A
%5A5A36FD055A36FD055A95BE9BBE8F955A855A845AAFA9AFA9FFA9AF7E53
%2F532F2906060653A953A8FD44FF7E7E7E847EA9FFFFAFFF855B5A5B5A5B
%5A855A5B5A855A615A5B5A855A969BC49BB795855A855A85AFFFA9FFAFFF
%A9842F5A2F5A062F062F59AF2FFD46FFA87E7EFFFFAFA9A95A5A365A365A
%5A85FD045A365A5A5A365A5A8595BE9BBE8F955A855A847EAFA9AFA9AFA9
%AF2F532F532F2906280684A859FD49FFAFFFAFAF365A5A85FD075A855A85
%5A5A5A855A5A5A959BC49BB7955A5A855A85A9FFAFAFA9FFA97E2F5A2F2F
%062F0629A8A97EFD48FFA9AFA9AFA9A95A5A36FD055A3685365A368436FD
%055A305AA2BE8E9B5A5A5A857EAFA9AFA9AFA9A97EA92F290606062928AF
%53A9FD47FFAFFFA9FFAFFFA9FF85855A5B5A615A615A5B5A5B5A5A5A5B5A
%5A5A855A5A5AB795615A857E85A9FFAFFFA9FF7E2F53AF842F062F065AA9
%53FD45FFA9AFA9AFA9AFA9AFA9AFA9AFA98536FD055A36FD055A36855A5A
%3085365A717E5A605A857EAFA9AFA9AF59290628067E062806295AAF2FFD
%44FFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFAF84FD045A855A5A36855A855A
%855A85365A5A5A368584855A85AFAFA9A92F2F062F0629062F062906A9A8
%7EFD41FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF84845A5A305A
%5A5A305A5A5A3084FD055A7E305A5A855AAFA9AFA9A92F2F062906060629
%0606A9847EFD42FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF85
%5A5B5A5A5A855A5A5A855A5A5A855A5A5A855A5B5A85A95A5AAFAFFF7E5A
%292F062F062F2FFF53FD42FF84FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9FFA9AF5A5A365A308536FD055A305A7E5A30FD085A85A9AFA95A2F
%290629065AA82FFD42FF5A5AFFFFFFA9FFAFAFA9FFAFAFA9FFAFAFA9FD05
%FFAFAFA9855A5A365A5A5A36855A855A5A5A855A5A5A85365A5A855A8585
%AFA9AF5A2F062F7EAF53FD3EFFBEBDBDFFA85A2F7EA9FFA9AFA9AFA9AFA9
%AFA9AFA9FD07FFA9AFA9A95A5A305A5A5A305A365A30FD045A7E365A5A5A
%36FD045AA9A9AF7E5A2FAF847EFD3CFFCBB7B7B7B8B7C4FFAF2F3084FFAF
%FFA9FFAFFFA9FD0DFFAFFF845B5A5A5A855A855A615A5A5A855A5A5A855A
%855A5B5A855A85AFFFA9FFAF7EFD3BFFCABDFD04B7B2B7B7B7777E532F2F
%A9FFAFA9AFA9AFFD0EFFA9AFA8A277787778FD065A305A5A5A30FD055A36
%5A7EAFA9AFA8A9FD3BFFBDFD0BB7957E7E532F5AAFFFA9FFAFFD0FFFC4FD
%07B7785B365A5A85FD0C5A85FFFFA9FD3AFFC4B7B7B2B7B7B7B2B7B7B7B2
%B7B7B7B29B7D7E2F2F5AFFA9AFA9AFA9FD0BFFBEB7BDFFB2B7B7B7B2B753
%5A5A5A36FD065A7EFD045A84FFA97E7DFD38FFCABEB7B7B7B8B7B7B7B8B7
%B7B7C4B7B7B7B8B7B7778459302FA9FFFFA9FFAFFD0AFFC4B7BEFFC5C4CB
%CACBB7C45AAF85855A5B5A5A5A5B5A855AA9AFFF842F2FFD38FFB7B7B2B7
%B7B7B2B7B7B7B2B7BDFFFFFFC4B7B2B7B7B795A259532F5AA8FFA9AFA9AF
%AFFD07FFC4C4B7C4BDBEB7B7B2CB9C5A5AA95A5A305A365A365A5AAFA9FF
%2F2959FD37FFC4FD0BB7BECAFD05FFCBC4FD05B7BE7E7E2F305AFFAFFFAF
%AFAFFD06FFCBC4C4FD04B7BDCBBDFFA985365B5A855A5A5A85A9FFFF7E06
%537EFD37FFB7B2B7B2B7B7B7B2FD04B7C4FD09FFCBFD04B7B2B7777E532F
%2F7EA8FFA9AFA9FFAFFFA9AFA99BB7BEC4C4BEBEB77EA9AFA9A95A5A5AAF
%7EA9A9FF7E292859597E7EFD07FFAFFD2EFFC4B28FFD04B7B8B7B7BEFD0D
%FFB7B7B7B8B7BEBEA27E5A2F5AA8FFAFFFAFFFA9FFAFFF5A7E9BBE95BE9B
%7E7EFFAFFFA9FF845A5AFFFFAF292F537E7E847EA8FFFFFFA95A5B5AA9FD
%2EFFCA9BB78EB7B7B7B2B7B7BDCAFD09FFCBC4B2FD04B7C4BEBD957E597E
%2F2F2FAFAFFFA9AFA9AFA9A9597E595A597E5AA9A9AFA9AFA9AFA9FFA859
%0653597E597E59A8A9FFA9AF845A305AA9FD2EFF95B79BBE8FFD07B7BDFD
%07FFC4B8B7B7B7B8C4C4B7CBCABD597E7E7E595A2F7EAFFFAFAFA9FFAFAF
%84A98485A9FFAFAFA9FFAFAFAFFF7E292F7E7E7E597E7EFFFFFFAFAFA9FF
%5A5AA8FD30FF9B8F95BE958F8FB7B2B7B7B7B2C4CBFFFFCBB7B7B2B7B7BE
%C4BEC4FFA2C4CAA8597E597E595A2F2F7EFFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9FFAFA8062F537E597E597EA8FFFFAFA9AFA9AFA985A8FD32FFCB9C
%8FBE9BBE8FFD04B7B8B7BEC4C4B7B7B7B8BDCBBDC4FFFFC4BEC4FFFFFFA8
%7E7E847E7E53542FAFFFFFAFFFA9FFAFFFA9FFAFFFAFFFA92F065A7E7E7E
%847EA9FFFFAFFFA9FFAFFFA9FD34FFA87E59788E959BBE8FB28FB7B2B7B7
%B7B2B7B7B7C4C4BDCBCACBBDBEA8FD05FFA884597E597E59592F5AA8FFA9
%AFA9AFA9AFA9AFAFFF53292F7E597E597E7EFFFFFFA9AFA9AFA9AFA9FD35
%FFA9597E7E7E719595BE9BB78FFD06B7C4C4BEC4FFCAC4957E7EA29CBEBD
%BEBDBEBEC47D7E7E7E597E2F305AFFFFAFA9FFAFFFFF84062F597E7E7E59
%84A9FF8485AFAFA9FFAFAFAFFFA8A9A8FD33FFA97D7E597E53958E959BBD
%8F8F8FB7BDCAB7C4CBCB9CB7777E77B7B7B7B2B7B7B7B2B7B7B7957E597E
%597E532F2F85AFFFA9FF842F065A597E597E7DA8FF8584A95A85A9AFA9FF
%FFA97D7E59A9FD33FFAFFFA8847E847E7E95B79BC495B7C4C4BEFFCBCBB7
%9C7E7E84A29C9CB7B8B7B7B7B8B7B7B7B8B7A27E847E7E7E5A2F305A7E29
%2F53847E7E7E84A8FFA95B5AAFA9AF5AFFA9FFA9A87E8484FD32FFA9AFA9
%AFA9FFFFA8597E597E77958FBE9BC4C4FFC4BE957E597E84AFA9AFA99C8F
%8F6A8F8EB7B7B7B2B795A97D7E597E597E2F2F2853597E597E5984A8FF5A
%5A5AAFA9AFA985A9FF7E7E597EA8FD32FF85AFA9FFAFAFA9AFFFFFFD047E
%599C8FB7C4CBC4B777FD047EFFAFAFA9FF7E8F6A8F6A8F6A95959C957E7E
%FFA8847E7E597E7E7E59FD047E85A9855A85A9AFA9FFAFAFA9A97E7E59A9
%FD34FF5A5AA9A9AFA97E06FFFFFFA87E597E597E71C4959C597E597E7EFF
%A9AFA9AFA9546A8F6A8F6A8F4D5A365A305AFFFFA8A8597E597E597E597E
%FD055AA9A9AFA9AFA9FFA87E597E7EFD36FF5A5B5A85842F062FFD05FFA9
%7E84FD077EA8A9FFFFAFAFFFA9FF84956A8F8F8F6B5B5A5A5A5B5AFD05FF
%7E847E7E7EA9A885A9FFAFFFA9FFAFFFAFFF847E7EA8A9FD37FF5AA8A930
%29062806FD07FF7E7E597E597E7DA9FD04FF2FAFA9AFA9AFA9A87E855A5A
%305A365A305AFD06FFA8FD04FF5AA9AFA9AFA9AFA9FFAFA8597E7DA9FD39
%FF3685A95A062F0629FD08FFA8A87E7EA8FD06FF305AAFAFAFA9845A5A36
%5A5A5A365A36362FFD0BFF7EAFAFAFA9FFAFFFA8847E7E84FD18FFA9AFA9
%AFA9FD1EFFA9365A3606062F7EFD13FF2F2F2F8484AF5A30365A305A365A
%2F2F2F5AFD0AFF9B7784AFA9AFA9FF7D7E5984A8FD1AFFAFFFA9FFAFFD1F
%FF5A5A065AFD15FF5A2F5A2F302F7E065A305A2F362F5A2F307EFD08FFCB
%BDB7B7A9AFFFAFA97E7E7EFD1CFFA9AFA9AFA9AFA9FD1CFFA8597E597E59
%7E84FD13FFA82F2F302F2F2F29282F2F302F2F2F302FFD09FFB7B7B7CBA9
%FFA87E597EA8FD1DFFAFA9FFAFAFA9FFAFFD1BFFA9A859FD047EFD15FF7E
%542F362F30062F2F302F362F302FA9FD09FFC4C4FFFFAF7E7E7EA8FD1FFF
%A9AFA9AFA9AFA9AFA9FD1CFFA97D7EA8FD16FFA9595A2F2F2F5306FD042F
%5A537EA8FD0DFF597E7EFD22FFA9FFAFFFA9FFAFFD38FF847E847E7E595A
%5A7E59847E7E84FD32FFA9AFA9AFA9AFA9AFA9FD38FFA8597E597E597E59
%7E5984A8FD34FFAFAFA9FFAFAFA9FFAFFD39FFA8A97EA87EA8A8FD36FFA9
%AFA9AFA9AFA9AFA9FD78FFAFFFA9FFAFFFA9FFAFFD76FFA9AFA9AFA9AFA9
%AFA9FD77FFAFA9FFAFAFA9FFAFAFAFFD76FFA9AFA9AFA9AFA9AFA9FD78FF
%A9FFAFFFA9FFAFFD78FFA9AFA9AFA9AFA9AFAFFD78FFAFAFA9FFAFAFAFFD
%78FFA9AFA9AFA9AFA9FD78FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Online_themes</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-15T16:18:12+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-15T16:18:12+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-15T16:18:12+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Jc7TTALvU7mGzgB4rJP&#xA;Ika8iDtyYgdAcyZy4hUd3HhDhNlc3mzysiqz6zYqrLzVjcwgFTtyHxdNsp8KXcW7jj3q9pr2h3kw&#xA;gtNRtbiZqhYopo3Y0HI/CrE9N8BhIcwokD1R2RZOxVC3tm05VkIDDah6Uy3Hk4WrJj4lO7tJpXjC&#xA;gUVQC1dsljyAAscmMkhpdY0WGMI2oWwEYoSZox9nY138crMZE8m0EAc1S21jSLqRY7a+t55HHJEi&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2488e288-b0b7-7343-b44c-d217e0c035c6</stRef:instanceID>
            <stRef:documentID>xmp.did:2488e288-b0b7-7343-b44c-d217e0c035c6</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</stEvt:instanceID>
                  <stEvt:when>2019-01-15T16:18:12+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=61 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
600 450 li
600 0 li
cp
clp
.000244141 72.1202 mo
3.41528 72.7051 6.92603 73.0128 10.5081 73.0128 cv
44.6536 73.0128 72.3333 45.3331 72.3333 11.1876 cv
72.3333 7.36725 71.9846 3.62897 71.3206 6.10352e-05 cv
.000244141 6.10352e-05 li
.000244141 72.1202 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.147219 .0154116 0 0 cmyk
f
27.8958 450 mo
38.3586 441.744 45.0823 428.96 45.0823 414.598 cv
45.0823 389.699 24.8987 369.516 .000244141 369.516 cv
.000244141 450 li
27.8958 450 li
cp
f
149.833 203.157 mo
76.0042 203.157 li
70.3147 203.157 65.7024 198.545 65.7024 192.856 cv
65.7024 187.166 70.3147 182.554 76.0042 182.554 cv
149.833 182.554 li
155.523 182.554 160.135 187.166 160.135 192.856 cv
160.135 198.545 155.523 203.157 149.833 203.157 cv
cp
0 .912535 0 0 cmyk
f
90.4065 197.441 mo
90.4065 189.916 li
88.9475 189.916 li
88.9475 188.746 li
93.4006 188.746 li
93.4006 189.916 li
91.9905 189.916 li
91.9905 197.441 li
90.4065 197.441 li
cp
0 0 0 0 cmyk
f
95.677 192.459 mo
96.0598 192.459 li
96.5276 192.459 96.8616 192.359 97.0588 192.16 cv
97.2561 191.961 97.3557 191.62 97.3557 191.138 cv
97.3557 190.673 97.2698 190.34 97.0979 190.139 cv
96.926 189.938 96.6116 189.837 96.1545 189.837 cv
95.677 189.837 li
95.677 192.459 li
cp
94.093 197.441 mo
94.093 188.746 li
96.0862 188.746 li
96.5432 188.746 96.9377 188.783 97.2659 188.858 cv
97.594 188.934 97.8801 189.06 98.1233 189.236 cv
98.3665 189.413 98.5481 189.652 98.6682 189.955 cv
98.7893 190.258 98.8499 190.627 98.8499 191.065 cv
98.8499 191.609 98.7678 192.056 98.6057 192.401 cv
98.4436 192.748 98.175 192.999 97.801 193.156 cv
99.0071 197.441 li
97.4182 197.441 li
96.3792 193.472 li
95.677 193.472 li
95.677 197.441 li
94.093 197.441 li
cp
f
101.256 197.441 mo
101.256 194.132 li
99.4846 188.746 li
100.963 188.746 li
102.038 192.207 li
103.067 188.746 li
104.53 188.746 li
102.768 194.132 li
102.768 197.441 li
101.256 197.441 li
cp
f
107.953 197.441 mo
107.953 188.746 li
109.516 188.746 li
109.516 197.441 li
107.953 197.441 li
cp
f
111.703 197.441 mo
111.703 189.916 li
110.245 189.916 li
110.245 188.746 li
114.698 188.746 li
114.698 189.916 li
113.287 189.916 li
113.287 197.441 li
111.703 197.441 li
cp
f
118.012 197.441 mo
118.012 188.746 li
119.104 188.746 li
121.233 193.671 li
121.233 188.746 li
122.543 188.746 li
122.543 197.441 li
121.505 197.441 li
119.355 192.265 li
119.355 197.441 li
118.012 197.441 li
cp
f
125.814 196.304 mo
125.924 196.349 126.056 196.371 126.209 196.371 cv
126.364 196.371 126.494 196.349 126.603 196.304 cv
126.711 196.258 126.798 196.198 126.863 196.125 cv
126.928 196.052 126.978 195.955 127.015 195.837 cv
127.051 195.718 127.076 195.599 127.088 195.48 cv
127.1 195.361 127.107 195.22 127.107 195.055 cv
127.107 191.107 li
127.107 190.897 127.096 190.722 127.074 190.582 cv
127.054 190.441 127.013 190.31 126.951 190.186 cv
126.891 190.062 126.799 189.969 126.676 189.907 cv
126.554 189.847 126.399 189.815 126.209 189.815 cv
126.021 189.815 125.865 189.847 125.74 189.907 cv
125.615 189.969 125.524 190.062 125.465 190.186 cv
125.406 190.31 125.365 190.441 125.344 190.582 cv
125.323 190.722 125.313 190.897 125.313 191.107 cv
125.313 195.055 li
125.313 195.22 125.319 195.361 125.331 195.48 cv
125.344 195.599 125.367 195.718 125.405 195.837 cv
125.442 195.955 125.49 196.052 125.554 196.125 cv
125.617 196.198 125.703 196.258 125.814 196.304 cv
cp
126.209 197.546 mo
125.315 197.546 124.673 197.304 124.285 196.817 cv
123.897 196.331 123.703 195.62 123.703 194.683 cv
123.703 191.474 li
123.703 191.012 123.746 190.611 123.834 190.273 cv
123.921 189.933 124.063 189.64 124.256 189.391 cv
124.449 189.143 124.709 188.957 125.035 188.833 cv
125.36 188.709 125.752 188.647 126.209 188.647 cv
127.102 188.647 127.742 188.886 128.131 189.365 cv
128.522 189.844 128.717 190.547 128.717 191.474 cv
128.717 194.683 li
128.717 195.138 128.672 195.537 128.582 195.881 cv
128.493 196.226 128.352 196.524 128.158 196.778 cv
127.964 197.031 127.704 197.223 127.379 197.353 cv
127.054 197.482 126.664 197.546 126.209 197.546 cv
cp
f
130.82 197.441 mo
129.576 188.746 li
130.908 188.746 li
131.622 194.353 li
132.551 188.746 li
133.615 188.746 li
134.565 194.357 li
135.278 188.746 li
136.583 188.746 li
135.34 197.441 li
134.076 197.441 li
133.096 191.636 li
132.12 197.441 li
130.82 197.441 li
cp
f
71.1497 125.904 mo
71.4377 126.023 71.7815 126.082 72.1829 126.082 cv
72.5842 126.082 72.926 126.023 73.2083 125.904 cv
73.4915 125.785 73.717 125.63 73.886 125.439 cv
74.054 125.247 74.1868 124.996 74.2825 124.687 cv
74.3782 124.377 74.4417 124.066 74.4739 123.756 cv
74.5061 123.446 74.5217 123.077 74.5217 122.648 cv
74.5217 112.349 li
74.5217 111.802 74.4944 111.346 74.4397 110.981 cv
74.385 110.616 74.2776 110.272 74.1184 109.948 cv
73.9583 109.624 73.719 109.383 73.4006 109.223 cv
73.0813 109.064 72.675 108.983 72.1829 108.983 cv
71.6907 108.983 71.2825 109.064 70.9583 109.223 cv
70.635 109.383 70.3958 109.624 70.2405 109.948 cv
70.0852 110.272 69.9807 110.616 69.926 110.981 cv
69.8713 111.346 69.844 111.802 69.844 112.349 cv
69.844 122.648 li
69.844 123.077 69.8596 123.446 69.8918 123.756 cv
69.9231 124.066 69.9875 124.377 70.0833 124.687 cv
70.179 124.996 70.3088 125.247 70.4729 125.439 cv
70.637 125.63 70.8625 125.785 71.1497 125.904 cv
cp
72.1829 129.146 mo
69.8479 129.146 68.175 128.512 67.1624 127.244 cv
66.1506 125.977 65.6448 124.121 65.6448 121.677 cv
65.6448 113.306 li
65.6448 112.103 65.7581 111.059 65.9866 110.174 cv
66.2141 109.289 66.5813 108.523 67.0872 107.876 cv
67.594 107.229 68.2708 106.742 69.1184 106.419 cv
69.967 106.095 70.9885 105.934 72.1829 105.934 cv
74.5081 105.934 76.179 106.558 77.1956 107.808 cv
78.2131 109.057 78.7209 110.89 78.7209 113.306 cv
78.7209 121.677 li
78.7209 122.862 78.6047 123.904 78.3723 124.803 cv
78.1399 125.701 77.7708 126.481 77.2639 127.142 cv
76.7581 127.803 76.0813 128.303 75.2327 128.64 cv
74.385 128.977 73.3684 129.146 72.1829 129.146 cv
cp
1 .866484 .240818 .0951247 cmyk
f
81.7444 128.872 mo
81.7444 106.193 li
84.5891 106.193 li
90.1428 119.037 li
90.1428 106.193 li
93.5627 106.193 li
93.5627 128.872 li
90.8538 128.872 li
85.2463 115.371 li
85.2463 128.872 li
81.7444 128.872 li
cp
f
96.9553 128.872 mo
96.9553 106.193 li
101.086 106.193 li
101.086 126.014 li
106.517 126.014 li
106.517 128.872 li
96.9553 128.872 li
cp
f
108.828 128.872 mo
108.828 106.193 li
112.905 106.193 li
112.905 128.872 li
108.828 128.872 li
cp
f
116.393 128.872 mo
116.393 106.193 li
119.238 106.193 li
124.791 119.037 li
124.791 106.193 li
128.211 106.193 li
128.211 128.872 li
125.502 128.872 li
119.895 115.371 li
119.895 128.872 li
116.393 128.872 li
cp
f
131.604 128.872 mo
131.604 106.193 li
141.097 106.193 li
141.097 109.107 li
135.735 109.107 li
135.735 115.617 li
139.975 115.617 li
139.975 118.531 li
135.735 118.531 li
135.735 126.014 li
141.165 126.014 li
141.165 128.872 li
131.604 128.872 li
cp
f
150.384 128.872 mo
150.384 106.193 li
154.515 106.193 li
154.515 126.014 li
159.946 126.014 li
159.946 128.872 li
150.384 128.872 li
cp
f
162.134 128.872 mo
162.134 106.193 li
171.627 106.193 li
171.627 109.107 li
166.265 109.107 li
166.265 115.617 li
170.505 115.617 li
170.505 118.531 li
166.265 118.531 li
166.265 126.014 li
171.696 126.014 li
171.696 128.872 li
162.134 128.872 li
cp
f
178.165 120.911 mo
181.201 120.911 li
179.684 111.596 li
178.165 120.911 li
cp
172.899 128.872 mo
177.509 106.193 li
181.818 106.193 li
186.413 128.872 li
182.57 128.872 li
181.654 123.606 li
177.728 123.606 li
176.797 128.872 li
172.899 128.872 li
cp
f
192.774 115.878 mo
193.772 115.878 li
194.994 115.878 195.863 115.617 196.378 115.098 cv
196.893 114.578 197.151 113.689 197.151 112.431 cv
197.151 111.218 196.927 110.35 196.481 109.825 cv
196.033 109.301 195.213 109.038 194.019 109.038 cv
192.774 109.038 li
192.774 115.878 li
cp
188.643 128.872 mo
188.643 106.193 li
193.84 106.193 li
195.035 106.193 196.061 106.291 196.918 106.487 cv
197.776 106.684 198.521 107.012 199.155 107.472 cv
199.788 107.933 200.263 108.558 200.577 109.346 cv
200.892 110.135 201.049 111.1 201.049 112.239 cv
201.049 113.661 200.837 114.824 200.413 115.727 cv
199.989 116.63 199.289 117.286 198.314 117.696 cv
201.459 128.872 li
197.315 128.872 li
194.607 118.518 li
192.774 118.518 li
192.774 128.872 li
188.643 128.872 li
cp
f
204.182 128.872 mo
204.182 106.193 li
207.027 106.193 li
212.58 119.037 li
212.58 106.193 li
216 106.193 li
216 128.872 li
213.291 128.872 li
207.684 115.371 li
207.684 128.872 li
204.182 128.872 li
cp
f
219.516 128.872 mo
219.516 106.193 li
223.592 106.193 li
223.592 128.872 li
219.516 128.872 li
cp
f
227.08 128.872 mo
227.08 106.193 li
229.925 106.193 li
235.479 119.037 li
235.479 106.193 li
238.899 106.193 li
238.899 128.872 li
236.19 128.872 li
230.582 115.371 li
230.582 128.872 li
227.08 128.872 li
cp
f
247.968 129.173 mo
245.824 129.173 244.281 128.503 243.337 127.162 cv
242.394 125.821 241.922 123.87 241.922 121.308 cv
241.922 113.922 li
241.922 112.617 242.025 111.493 242.23 110.55 cv
242.435 109.606 242.779 108.778 243.262 108.067 cv
243.745 107.356 244.411 106.822 245.259 106.467 cv
246.108 106.111 247.147 105.934 248.378 105.934 cv
250.621 105.934 252.231 106.482 253.206 107.581 cv
254.182 108.681 254.67 110.347 254.67 112.581 cv
254.67 113.689 li
250.717 113.689 li
250.717 112.513 li
250.717 112.011 250.705 111.601 250.683 111.281 cv
250.66 110.962 250.606 110.641 250.519 110.317 cv
250.432 109.993 250.307 109.745 250.143 109.571 cv
249.979 109.398 249.755 109.257 249.472 109.148 cv
249.19 109.038 248.843 108.983 248.433 108.983 cv
248.122 108.983 247.847 109.023 247.605 109.1 cv
247.364 109.178 247.16 109.273 246.996 109.387 cv
246.832 109.501 246.694 109.663 246.579 109.873 cv
246.465 110.082 246.378 110.285 246.32 110.482 cv
246.26 110.678 246.214 110.931 246.183 111.24 cv
246.151 111.551 246.13 111.824 246.121 112.062 cv
246.112 112.299 246.108 112.604 246.108 112.978 cv
246.108 122.129 li
246.108 123.496 246.276 124.497 246.614 125.131 cv
246.95 125.765 247.594 126.082 248.542 126.082 cv
249.034 126.082 249.448 125.988 249.781 125.801 cv
250.113 125.614 250.372 125.332 250.56 124.953 cv
250.746 124.575 250.879 124.142 250.956 123.653 cv
251.033 123.166 251.073 122.575 251.073 121.883 cv
251.073 120.023 li
248.624 120.023 li
248.624 117.355 li
254.793 117.355 li
254.793 128.872 li
252.113 128.872 li
251.812 126.574 li
251.127 128.307 249.846 129.173 247.968 129.173 cv
cp
f
69.1906 153.984 mo
65.7893 153.984 li
65.7893 145.017 li
66.6379 145.017 li
66.6379 153.351 li
69.1906 153.351 li
69.1906 153.984 li
.472602 .264286 .0650339 0 cmyk
f
71.4513 154.086 mo
71.1233 154.086 70.848 154.034 70.6233 153.93 cv
70.4007 153.825 70.2249 153.666 70.097 153.454 cv
69.969 153.241 69.8772 152.991 69.8234 152.704 cv
69.7698 152.418 69.7425 152.072 69.7425 151.669 cv
69.7425 149.895 li
69.7425 149.08 69.8683 148.475 70.1213 148.078 cv
70.3733 147.681 70.8166 147.483 71.4513 147.483 cv
72.0902 147.483 72.5334 147.68 72.7854 148.075 cv
73.0354 148.47 73.1604 149.076 73.1604 149.895 cv
73.1604 151.669 li
73.1604 152.072 73.133 152.418 73.0794 152.704 cv
73.0256 152.991 72.9339 153.241 72.8069 153.454 cv
72.6779 153.666 72.5022 153.825 72.2796 153.93 cv
72.0549 154.034 71.7795 154.086 71.4513 154.086 cv
71.4513 148.089 mo
71.3147 148.089 71.1955 148.106 71.094 148.143 cv
70.9934 148.179 70.9105 148.237 70.846 148.318 cv
70.7814 148.4 70.7287 148.486 70.6888 148.578 cv
70.6487 148.67 70.6194 148.79 70.5998 148.938 cv
70.5803 149.086 70.5666 149.226 70.5618 149.356 cv
70.5569 149.488 70.553 149.653 70.553 149.852 cv
70.553 151.712 li
70.553 151.91 70.5569 152.075 70.5618 152.207 cv
70.5666 152.339 70.5803 152.479 70.5998 152.626 cv
70.6194 152.775 70.6487 152.894 70.6888 152.985 cv
70.7287 153.078 70.7814 153.164 70.846 153.245 cv
70.9105 153.326 70.9934 153.385 71.094 153.421 cv
71.1955 153.457 71.3147 153.476 71.4513 153.476 cv
71.6136 153.476 71.7502 153.445 71.8626 153.386 cv
71.9748 153.326 72.0618 153.252 72.1253 153.161 cv
72.1878 153.071 72.2355 152.943 72.2678 152.777 cv
72.301 152.611 72.3215 152.453 72.3303 152.302 cv
72.339 152.15 72.344 151.954 72.344 151.712 cv
72.344 149.852 li
72.344 149.61 72.339 149.413 72.3303 149.262 cv
72.3215 149.11 72.301 148.952 72.2678 148.786 cv
72.2355 148.62 72.1878 148.492 72.1253 148.402 cv
72.0618 148.313 71.9748 148.237 71.8626 148.178 cv
71.7502 148.118 71.6136 148.089 71.4513 148.089 cv
f
75.1506 153.984 mo
74.3401 153.984 li
74.3401 147.58 li
75.1506 147.58 li
75.1506 148.462 li
75.346 148.137 75.5735 147.898 75.8343 147.742 cv
76.0959 147.587 76.3596 147.51 76.6272 147.51 cv
76.7678 147.516 li
76.7678 148.392 li
76.6526 148.345 76.5227 148.321 76.3782 148.321 cv
75.8597 148.321 75.4495 148.57 75.1506 149.067 cv
75.1506 153.984 li
f
79.1858 154.086 mo
78.5725 154.086 78.1311 153.897 77.8605 153.519 cv
77.59 153.14 77.4553 152.493 77.4553 151.577 cv
77.4553 149.96 li
77.4553 149.336 77.5188 148.841 77.6468 148.476 cv
77.7746 148.109 77.9622 147.853 78.2092 147.704 cv
78.4562 147.557 78.7834 147.483 79.1916 147.483 cv
79.4611 147.483 79.6917 147.518 79.883 147.588 cv
80.0744 147.658 80.2327 147.759 80.3596 147.889 cv
80.4846 148.019 80.5852 148.194 80.6594 148.416 cv
80.7327 148.638 80.7844 148.883 80.8128 149.151 cv
80.8421 149.42 80.8567 149.743 80.8567 150.122 cv
80.8518 150.701 li
78.2659 150.701 li
78.2659 151.658 li
78.2659 152.321 78.3304 152.79 78.4582 153.065 cv
78.5862 153.338 78.8263 153.476 79.1799 153.476 cv
79.4611 153.476 79.678 153.386 79.8294 153.208 cv
79.9807 153.029 80.0568 152.705 80.0568 152.236 cv
80.0568 151.793 li
80.8518 151.793 li
80.8518 152.15 li
80.8518 152.771 80.721 153.248 80.4622 153.583 cv
80.2024 153.919 79.7765 154.086 79.1858 154.086 cv
79.1858 148.089 mo
78.843 148.089 78.6037 148.207 78.469 148.445 cv
78.3343 148.684 78.2659 149.136 78.2659 149.803 cv
78.2659 150.235 li
80.0568 150.235 li
80.0568 149.706 li
80.0568 149.482 80.051 149.297 80.0403 149.148 cv
80.0295 149.001 80.006 148.854 79.9728 148.708 cv
79.9377 148.562 79.8908 148.447 79.8294 148.364 cv
79.7678 148.281 79.6839 148.215 79.5745 148.164 cv
79.467 148.113 79.3372 148.089 79.1858 148.089 cv
f
87.8928 153.984 mo
87.1253 153.984 li
87.1253 148.954 li
87.1253 148.605 87.0706 148.36 86.9632 148.224 cv
86.8547 148.087 86.6994 148.019 86.4983 148.019 cv
86.09 148.025 85.6878 148.247 85.2913 148.684 cv
85.2991 148.792 85.303 148.875 85.303 148.933 cv
85.303 153.984 li
84.5452 153.984 li
84.5452 148.954 li
84.5452 148.605 84.4895 148.36 84.3771 148.224 cv
84.2658 148.087 84.1096 148.019 83.9065 148.019 cv
83.5002 148.025 83.1017 148.247 82.7112 148.684 cv
82.7112 153.984 li
81.9495 153.984 li
81.9495 147.58 li
82.7112 147.58 li
82.7112 148.23 li
83.1408 147.721 83.6438 147.467 84.2209 147.467 cv
84.7541 147.467 85.0901 147.748 85.2268 148.311 cv
85.6741 147.748 86.2004 147.467 86.8059 147.467 cv
87.1233 147.467 87.3841 147.581 87.5882 147.81 cv
87.7913 148.039 87.8928 148.413 87.8928 148.933 cv
87.8928 153.984 li
f
92.2463 153.984 mo
91.4358 153.984 li
91.4358 147.58 li
92.2463 147.58 li
92.2463 153.984 li
92.2522 146.698 mo
91.4358 146.698 li
91.4358 145.596 li
92.2522 145.596 li
92.2522 146.698 li
f
94.4211 156.093 mo
93.6096 156.093 li
93.6096 147.58 li
94.4211 147.58 li
94.4211 148.115 li
94.7639 147.693 95.173 147.483 95.6487 147.483 cv
95.8869 147.483 96.095 147.531 96.2737 147.629 cv
96.4514 147.727 96.592 147.853 96.6955 148.008 cv
96.7981 148.162 96.8811 148.356 96.9436 148.586 cv
97.007 148.816 97.0491 149.045 97.0686 149.271 cv
97.0881 149.495 97.0979 149.751 97.0979 150.035 cv
97.0979 151.388 li
97.0979 151.727 97.0842 152.029 97.0549 152.296 cv
97.0256 152.563 96.9758 152.811 96.9035 153.04 cv
96.8323 153.269 96.7365 153.458 96.6193 153.607 cv
96.5022 153.758 96.3557 153.875 96.1789 153.959 cv
96.0022 154.044 95.7971 154.086 95.5628 154.086 cv
95.1476 154.086 94.7678 153.883 94.4211 153.476 cv
94.4211 156.093 li
95.4162 148.121 mo
95.0882 148.121 94.7561 148.285 94.4211 148.613 cv
94.4211 152.978 li
94.717 153.288 95.0539 153.442 95.4329 153.442 cv
95.5765 153.442 95.6995 153.413 95.801 153.354 cv
95.9006 153.294 95.9826 153.213 96.0471 153.11 cv
96.1095 153.008 96.1585 152.868 96.1956 152.691 cv
96.2308 152.515 96.2561 152.326 96.2679 152.126 cv
96.2815 151.926 96.2874 151.684 96.2874 151.398 cv
96.2874 150.035 li
96.2874 149.351 96.2288 148.86 96.1134 148.564 cv
95.9982 148.269 95.7659 148.121 95.4162 148.121 cv
f
99.6936 154.086 mo
99.1857 154.086 98.7796 153.923 98.4748 153.594 cv
98.1702 153.267 97.9964 152.822 97.9533 152.264 cv
98.634 152.059 li
98.678 152.545 98.7893 152.903 98.969 153.132 cv
99.1497 153.36 99.4026 153.476 99.7268 153.476 cv
100.008 153.476 100.23 153.393 100.392 153.227 cv
100.547 153.067 100.625 152.855 100.625 152.588 cv
100.625 152.551 li
100.614 152.125 100.354 151.699 99.846 151.274 cv
98.9748 150.533 li
98.6683 150.277 98.4455 150.026 98.3049 149.781 cv
98.1672 149.543 98.0988 149.266 98.0988 148.948 cv
98.0988 148.48 98.2394 148.117 98.5208 147.861 cv
98.7952 147.609 99.1642 147.483 99.6291 147.483 cv
100.102 147.483 100.465 147.634 100.719 147.938 cv
100.973 148.24 101.116 148.649 101.144 149.165 cv
100.571 149.355 li
100.545 148.925 100.457 148.607 100.309 148.4 cv
100.158 148.192 99.9436 148.089 99.6623 148.089 cv
99.4094 148.089 99.2072 148.159 99.0559 148.3 cv
98.9084 148.437 98.8342 148.62 98.8342 148.851 cv
98.8342 149.061 98.8722 149.239 98.9475 149.39 cv
99.0237 149.539 99.1623 149.7 99.3645 149.873 cv
100.268 150.685 li
100.43 150.825 100.563 150.948 100.665 151.055 cv
100.768 151.161 100.877 151.293 100.992 151.45 cv
101.108 151.607 101.194 151.776 101.249 151.958 cv
101.305 152.141 101.334 152.336 101.338 152.545 cv
101.338 153.035 101.191 153.415 100.895 153.684 cv
100.6 153.952 100.199 154.086 99.6936 154.086 cv
f
103.188 154.081 mo
102.867 154.081 102.622 153.962 102.453 153.724 cv
102.283 153.486 102.199 153.149 102.199 152.713 cv
102.199 147.58 li
103.016 147.58 li
103.016 152.545 li
103.016 152.869 103.064 153.101 103.161 153.237 cv
103.258 153.374 103.412 153.442 103.621 153.442 cv
103.985 153.442 104.364 153.233 104.756 152.816 cv
104.756 147.58 li
105.569 147.58 li
105.569 153.984 li
104.756 153.984 li
104.756 153.275 li
104.28 153.813 103.758 154.081 103.188 154.081 cv
f
112.75 153.984 mo
111.983 153.984 li
111.983 148.954 li
111.983 148.605 111.928 148.36 111.821 148.224 cv
111.711 148.087 111.557 148.019 111.355 148.019 cv
110.948 148.025 110.545 148.247 110.149 148.684 cv
110.156 148.792 110.159 148.875 110.159 148.933 cv
110.159 153.984 li
109.403 153.984 li
109.403 148.954 li
109.403 148.605 109.346 148.36 109.235 148.224 cv
109.123 148.087 108.966 148.019 108.764 148.019 cv
108.357 148.025 107.958 148.247 107.569 148.684 cv
107.569 153.984 li
106.807 153.984 li
106.807 147.58 li
107.569 147.58 li
107.569 148.23 li
107.998 147.721 108.5 147.467 109.078 147.467 cv
109.612 147.467 109.946 147.748 110.084 148.311 cv
110.532 147.748 111.057 147.467 111.662 147.467 cv
111.981 147.467 112.241 147.581 112.445 147.81 cv
112.649 148.039 112.75 148.413 112.75 148.933 cv
112.75 153.984 li
f
117.629 154.086 mo
117.076 154.086 116.682 153.879 116.442 153.465 cv
116.201 153.05 116.082 152.361 116.082 151.398 cv
116.082 150.214 li
116.082 149.86 116.094 149.551 116.119 149.284 cv
116.145 149.017 116.192 148.767 116.26 148.532 cv
116.328 148.298 116.418 148.106 116.531 147.959 cv
116.643 147.811 116.787 147.694 116.963 147.609 cv
117.14 147.525 117.35 147.483 117.59 147.483 cv
118.012 147.486 118.389 147.672 118.721 148.04 cv
118.721 145.017 li
119.532 145.017 li
119.532 153.984 li
118.721 153.984 li
118.721 153.529 li
118.397 153.897 118.033 154.083 117.629 154.086 cv
117.77 148.121 mo
117.426 148.121 117.196 148.265 117.074 148.551 cv
116.953 148.838 116.893 149.306 116.893 149.954 cv
116.893 151.463 li
116.893 152.163 116.954 152.668 117.076 152.978 cv
117.2 153.288 117.438 153.442 117.791 153.442 cv
118.105 153.442 118.414 153.302 118.721 153.021 cv
118.721 148.575 li
118.397 148.272 118.079 148.121 117.77 148.121 cv
f
122.362 154.086 mo
122.034 154.086 121.757 154.034 121.533 153.93 cv
121.311 153.825 121.135 153.666 121.006 153.454 cv
120.878 153.241 120.787 152.991 120.733 152.704 cv
120.679 152.418 120.653 152.072 120.653 151.669 cv
120.653 149.895 li
120.653 149.08 120.778 148.475 121.03 148.078 cv
121.283 147.681 121.727 147.483 122.362 147.483 cv
122.999 147.483 123.444 147.68 123.695 148.075 cv
123.946 148.47 124.071 149.076 124.071 149.895 cv
124.071 151.669 li
124.071 152.072 124.043 152.418 123.989 152.704 cv
123.935 152.991 123.844 153.241 123.716 153.454 cv
123.588 153.666 123.412 153.825 123.189 153.93 cv
122.965 154.034 122.69 154.086 122.362 154.086 cv
122.362 148.089 mo
122.224 148.089 122.106 148.106 122.004 148.143 cv
121.903 148.179 121.821 148.237 121.756 148.318 cv
121.691 148.4 121.639 148.486 121.598 148.578 cv
121.559 148.67 121.53 148.79 121.51 148.938 cv
121.489 149.086 121.477 149.226 121.471 149.356 cv
121.466 149.488 121.463 149.653 121.463 149.852 cv
121.463 151.712 li
121.463 151.91 121.466 152.075 121.471 152.207 cv
121.477 152.339 121.489 152.479 121.51 152.626 cv
121.53 152.775 121.559 152.894 121.598 152.985 cv
121.639 153.078 121.691 153.164 121.756 153.245 cv
121.821 153.326 121.903 153.385 122.004 153.421 cv
122.106 153.457 122.224 153.476 122.362 153.476 cv
122.524 153.476 122.66 153.445 122.772 153.386 cv
122.884 153.326 122.971 153.252 123.034 153.161 cv
123.098 153.071 123.145 152.943 123.178 152.777 cv
123.21 152.611 123.231 152.453 123.24 152.302 cv
123.248 152.15 123.254 151.954 123.254 151.712 cv
123.254 149.852 li
123.254 149.61 123.248 149.413 123.24 149.262 cv
123.231 149.11 123.21 148.952 123.178 148.786 cv
123.145 148.62 123.098 148.492 123.034 148.402 cv
122.971 148.313 122.884 148.237 122.772 148.178 cv
122.66 148.118 122.524 148.089 122.362 148.089 cv
f
126.115 153.984 mo
125.297 153.984 li
125.297 145.017 li
126.115 145.017 li
126.115 153.984 li
f
129.014 154.086 mo
128.686 154.086 128.409 154.034 128.186 153.93 cv
127.963 153.825 127.787 153.666 127.659 153.454 cv
127.531 153.241 127.44 152.991 127.385 152.704 cv
127.331 152.418 127.305 152.072 127.305 151.669 cv
127.305 149.895 li
127.305 149.08 127.43 148.475 127.683 148.078 cv
127.936 147.681 128.379 147.483 129.014 147.483 cv
129.652 147.483 130.096 147.68 130.347 148.075 cv
130.598 148.47 130.723 149.076 130.723 149.895 cv
130.723 151.669 li
130.723 152.072 130.696 152.418 130.641 152.704 cv
130.587 152.991 130.496 153.241 130.368 153.454 cv
130.24 153.666 130.065 153.825 129.841 153.93 cv
129.617 154.034 129.342 154.086 129.014 154.086 cv
129.014 148.089 mo
128.876 148.089 128.758 148.106 128.656 148.143 cv
128.555 148.179 128.473 148.237 128.408 148.318 cv
128.343 148.4 128.291 148.486 128.25 148.578 cv
128.211 148.67 128.182 148.79 128.162 148.938 cv
128.142 149.086 128.129 149.226 128.123 149.356 cv
128.118 149.488 128.115 149.653 128.115 149.852 cv
128.115 151.712 li
128.115 151.91 128.118 152.075 128.123 152.207 cv
128.129 152.339 128.142 152.479 128.162 152.626 cv
128.182 152.775 128.211 152.894 128.25 152.985 cv
128.291 153.078 128.343 153.164 128.408 153.245 cv
128.473 153.326 128.555 153.385 128.656 153.421 cv
128.758 153.457 128.876 153.476 129.014 153.476 cv
129.176 153.476 129.313 153.445 129.424 153.386 cv
129.536 153.326 129.623 153.252 129.687 153.161 cv
129.75 153.071 129.797 152.943 129.83 152.777 cv
129.863 152.611 129.883 152.453 129.893 152.302 cv
129.901 152.15 129.906 151.954 129.906 151.712 cv
129.906 149.852 li
129.906 149.61 129.901 149.413 129.893 149.262 cv
129.883 149.11 129.863 148.952 129.83 148.786 cv
129.797 148.62 129.75 148.492 129.687 148.402 cv
129.623 148.313 129.536 148.237 129.424 148.178 cv
129.313 148.118 129.176 148.089 129.014 148.089 cv
f
132.713 153.984 mo
131.902 153.984 li
131.902 147.58 li
132.713 147.58 li
132.713 148.462 li
132.908 148.137 133.135 147.898 133.397 147.742 cv
133.658 147.587 133.922 147.51 134.19 147.51 cv
134.33 147.516 li
134.33 148.392 li
134.215 148.345 134.084 148.321 133.94 148.321 cv
133.421 148.321 133.012 148.57 132.713 149.067 cv
132.713 153.984 li
f
138.862 154.086 mo
138.354 154.086 137.947 153.923 137.643 153.594 cv
137.338 153.267 137.164 152.822 137.121 152.264 cv
137.802 152.059 li
137.846 152.545 137.957 152.903 138.137 153.132 cv
138.318 153.36 138.57 153.476 138.895 153.476 cv
139.176 153.476 139.398 153.393 139.56 153.227 cv
139.715 153.067 139.793 152.855 139.793 152.588 cv
139.793 152.551 li
139.781 152.125 139.522 151.699 139.014 151.274 cv
138.143 150.533 li
137.836 150.277 137.614 150.026 137.473 149.781 cv
137.335 149.543 137.267 149.266 137.267 148.948 cv
137.267 148.48 137.407 148.117 137.689 147.861 cv
137.963 147.609 138.332 147.483 138.797 147.483 cv
139.27 147.483 139.633 147.634 139.887 147.938 cv
140.141 148.24 140.283 148.649 140.312 149.165 cv
139.738 149.355 li
139.713 148.925 139.625 148.607 139.477 148.4 cv
139.326 148.192 139.112 148.089 138.83 148.089 cv
138.577 148.089 138.375 148.159 138.224 148.3 cv
138.076 148.437 138.002 148.62 138.002 148.851 cv
138.002 149.061 138.04 149.239 138.116 149.39 cv
138.192 149.539 138.33 149.7 138.533 149.873 cv
139.436 150.685 li
139.598 150.825 139.731 150.948 139.833 151.055 cv
139.936 151.161 140.045 151.293 140.16 151.45 cv
140.276 151.607 140.362 151.776 140.417 151.958 cv
140.473 152.141 140.502 152.336 140.506 152.545 cv
140.506 153.035 140.359 153.415 140.063 153.684 cv
139.768 153.952 139.367 154.086 138.862 154.086 cv
f
142.319 153.984 mo
141.507 153.984 li
141.507 147.58 li
142.319 147.58 li
142.319 153.984 li
142.324 146.698 mo
141.507 146.698 li
141.507 145.596 li
142.324 145.596 li
142.324 146.698 li
f
145.196 154.064 mo
144.76 154.064 144.458 153.945 144.292 153.705 cv
144.127 153.466 144.041 153.115 144.038 152.653 cv
144.038 148.121 li
143.265 148.121 li
143.265 147.58 li
144.038 147.58 li
144.038 145.601 li
144.85 145.601 li
144.85 147.58 li
145.914 147.58 li
145.914 148.121 li
144.85 148.121 li
144.85 152.577 li
144.85 152.902 144.887 153.125 144.963 153.245 cv
145.039 153.366 145.192 153.427 145.422 153.427 cv
145.571 153.427 145.722 153.412 145.877 153.384 cv
145.877 153.994 li
145.635 154.041 145.408 154.064 145.196 154.064 cv
f
150.145 154.086 mo
149.77 154.086 149.461 153.948 149.219 153.673 cv
148.979 153.397 148.858 153.056 148.858 152.647 cv
148.858 152.436 148.875 152.245 148.911 152.077 cv
148.947 151.909 149.015 151.752 149.113 151.604 cv
149.213 151.456 149.321 151.325 149.439 151.212 cv
149.556 151.099 149.723 150.978 149.939 150.85 cv
150.156 150.722 150.371 150.604 150.588 150.495 cv
150.805 150.387 151.087 150.256 151.438 150.101 cv
151.438 149.641 li
151.438 149.053 151.381 148.648 151.27 148.427 cv
151.157 148.205 150.948 148.094 150.642 148.094 cv
150.051 148.094 149.755 148.46 149.755 149.191 cv
149.755 149.425 li
148.955 149.397 li
148.955 149.293 148.956 149.228 148.96 149.202 cv
148.985 148.601 149.142 148.163 149.43 147.891 cv
149.719 147.619 150.137 147.483 150.686 147.483 cv
151.251 147.483 151.654 147.65 151.891 147.985 cv
152.129 148.321 152.248 148.858 152.248 149.598 cv
152.248 152.713 li
152.248 153.229 152.268 153.652 152.308 153.984 cv
151.588 153.984 li
151.469 153.097 li
151.372 153.378 151.207 153.613 150.975 153.803 cv
150.742 153.992 150.465 154.086 150.145 154.086 cv
151.438 150.636 mo
151.334 150.69 li
151.157 150.784 151.022 150.856 150.928 150.906 cv
150.834 150.957 150.723 151.02 150.59 151.096 cv
150.459 151.171 150.361 151.234 150.296 151.285 cv
150.071 151.469 li
149.887 151.672 li
149.772 151.891 li
149.732 151.974 149.704 152.061 149.69 152.153 cv
149.676 152.245 149.668 152.347 149.668 152.458 cv
149.668 152.773 149.738 153.006 149.879 153.159 cv
150.02 153.313 150.197 153.389 150.409 153.389 cv
150.625 153.389 150.824 153.314 151.007 153.164 cv
151.19 153.015 151.332 152.837 151.438 152.632 cv
151.438 150.636 li
f
159.377 153.984 mo
158.609 153.984 li
158.609 148.954 li
158.609 148.605 158.555 148.36 158.447 148.224 cv
158.338 148.087 158.183 148.019 157.981 148.019 cv
157.574 148.025 157.172 148.247 156.776 148.684 cv
156.782 148.792 156.785 148.875 156.785 148.933 cv
156.785 153.984 li
156.029 153.984 li
156.029 148.954 li
156.029 148.605 155.973 148.36 155.862 148.224 cv
155.749 148.087 155.592 148.019 155.391 148.019 cv
154.983 148.025 154.584 148.247 154.196 148.684 cv
154.196 153.984 li
153.433 153.984 li
153.433 147.58 li
154.196 147.58 li
154.196 148.23 li
154.624 147.721 155.127 147.467 155.704 147.467 cv
156.239 147.467 156.573 147.748 156.71 148.311 cv
157.157 147.748 157.684 147.467 158.289 147.467 cv
158.607 147.467 158.867 147.581 159.071 147.81 cv
159.275 148.039 159.377 148.413 159.377 148.933 cv
159.377 153.984 li
f
162.178 154.086 mo
161.565 154.086 161.123 153.897 160.854 153.519 cv
160.582 153.14 160.448 152.493 160.448 151.577 cv
160.448 149.96 li
160.448 149.336 160.512 148.841 160.639 148.476 cv
160.768 148.109 160.955 147.853 161.201 147.704 cv
161.449 147.557 161.776 147.483 162.184 147.483 cv
162.453 147.483 162.685 147.518 162.875 147.588 cv
163.067 147.658 163.225 147.759 163.352 147.889 cv
163.478 148.019 163.578 148.194 163.653 148.416 cv
163.726 148.638 163.778 148.883 163.806 149.151 cv
163.834 149.42 163.85 149.743 163.85 150.122 cv
163.844 150.701 li
161.258 150.701 li
161.258 151.658 li
161.258 152.321 161.322 152.79 161.451 153.065 cv
161.578 153.338 161.82 153.476 162.172 153.476 cv
162.453 153.476 162.67 153.386 162.823 153.208 cv
162.973 153.029 163.049 152.705 163.049 152.236 cv
163.049 151.793 li
163.844 151.793 li
163.844 152.15 li
163.844 152.771 163.714 153.248 163.455 153.583 cv
163.196 153.919 162.77 154.086 162.178 154.086 cv
162.178 148.089 mo
161.836 148.089 161.597 148.207 161.461 148.445 cv
161.326 148.684 161.258 149.136 161.258 149.803 cv
161.258 150.235 li
163.049 150.235 li
163.049 149.706 li
163.049 149.482 163.043 149.297 163.033 149.148 cv
163.022 149.001 162.999 148.854 162.965 148.708 cv
162.931 148.562 162.883 148.447 162.823 148.364 cv
162.76 148.281 162.676 148.215 162.568 148.164 cv
162.459 148.113 162.33 148.089 162.178 148.089 cv
f
166.461 154.064 mo
166.026 154.064 165.725 153.945 165.559 153.705 cv
165.393 153.466 165.308 153.115 165.305 152.653 cv
165.305 148.121 li
164.531 148.121 li
164.531 147.58 li
165.305 147.58 li
165.305 145.601 li
166.115 145.601 li
166.115 147.58 li
167.181 147.58 li
167.181 148.121 li
166.115 148.121 li
166.115 152.577 li
166.115 152.902 166.154 153.125 166.229 153.245 cv
166.305 153.366 166.458 153.427 166.689 153.427 cv
166.836 153.427 166.988 153.412 167.143 153.384 cv
167.143 153.994 li
166.902 154.041 166.674 154.064 166.461 154.064 cv
f
168.139 155.276 mo
167.971 154.919 li
168.162 154.812 168.298 154.685 168.379 154.541 cv
168.46 154.397 168.5 154.211 168.5 153.984 cv
168.014 153.984 li
168.014 152.777 li
168.922 152.777 li
168.922 153.897 li
168.922 154.258 168.863 154.542 168.744 154.749 cv
168.625 154.956 168.423 155.132 168.139 155.276 cv
f
173.899 154.086 mo
173.606 154.086 173.356 154.043 173.147 153.957 cv
172.938 153.87 172.772 153.758 172.649 153.618 cv
172.526 153.48 172.43 153.297 172.36 153.069 cv
172.289 152.843 172.242 152.612 172.219 152.38 cv
172.196 152.148 172.184 151.873 172.184 151.556 cv
172.184 150.063 li
172.184 149.598 172.209 149.211 172.26 148.902 cv
172.31 148.594 172.399 148.33 172.528 148.11 cv
172.655 147.891 172.83 147.731 173.052 147.632 cv
173.274 147.532 173.554 147.483 173.893 147.483 cv
174.16 147.483 174.391 147.516 174.585 147.58 cv
174.78 147.645 174.938 147.734 175.059 147.848 cv
175.179 147.961 175.275 148.106 175.345 148.283 cv
175.415 148.46 175.464 148.646 175.49 148.843 cv
175.518 149.039 175.531 149.27 175.531 149.532 cv
175.531 149.835 li
174.78 149.835 li
174.78 149.532 li
174.78 148.984 174.715 148.607 174.585 148.4 cv
174.455 148.192 174.229 148.089 173.904 148.089 cv
173.535 148.089 173.293 148.219 173.174 148.48 cv
173.055 148.742 172.994 149.225 172.994 149.928 cv
172.994 151.723 li
172.994 152.379 173.059 152.835 173.188 153.091 cv
173.315 153.348 173.556 153.476 173.908 153.476 cv
174.061 153.476 174.189 153.454 174.293 153.41 cv
174.398 153.367 174.482 153.308 174.545 153.231 cv
174.608 153.156 174.657 153.052 174.694 152.918 cv
174.729 152.785 174.752 152.644 174.764 152.493 cv
174.775 152.344 174.78 152.155 174.78 151.929 cv
174.78 151.577 li
175.531 151.577 li
175.531 151.891 li
175.531 152.172 175.52 152.415 175.496 152.621 cv
175.473 152.826 175.426 153.026 175.356 153.219 cv
175.285 153.411 175.192 153.568 175.075 153.689 cv
174.957 153.81 174.799 153.906 174.602 153.979 cv
174.403 154.051 174.168 154.086 173.899 154.086 cv
f
178.198 154.086 mo
177.869 154.086 177.594 154.034 177.37 153.93 cv
177.147 153.825 176.971 153.666 176.844 153.454 cv
176.715 153.241 176.624 152.991 176.571 152.704 cv
176.516 152.418 176.489 152.072 176.489 151.669 cv
176.489 149.895 li
176.489 149.08 176.615 148.475 176.867 148.078 cv
177.119 147.681 177.563 147.483 178.198 147.483 cv
178.836 147.483 179.281 147.68 179.532 148.075 cv
179.781 148.47 179.906 149.076 179.906 149.895 cv
179.906 151.669 li
179.906 152.072 179.88 152.418 179.826 152.704 cv
179.772 152.991 179.681 153.241 179.553 153.454 cv
179.425 153.666 179.249 153.825 179.026 153.93 cv
178.802 154.034 178.526 154.086 178.198 154.086 cv
178.198 148.089 mo
178.061 148.089 177.942 148.106 177.841 148.143 cv
177.74 148.179 177.657 148.237 177.592 148.318 cv
177.528 148.4 177.475 148.486 177.436 148.578 cv
177.396 148.67 177.365 148.79 177.346 148.938 cv
177.326 149.086 177.314 149.226 177.309 149.356 cv
177.303 149.488 177.3 149.653 177.3 149.852 cv
177.3 151.712 li
177.3 151.91 177.303 152.075 177.309 152.207 cv
177.314 152.339 177.326 152.479 177.346 152.626 cv
177.365 152.775 177.396 152.894 177.436 152.985 cv
177.475 153.078 177.528 153.164 177.592 153.245 cv
177.657 153.326 177.74 153.385 177.841 153.421 cv
177.942 153.457 178.061 153.476 178.198 153.476 cv
178.36 153.476 178.497 153.445 178.61 153.386 cv
178.721 153.326 178.809 153.252 178.871 153.161 cv
178.934 153.071 178.983 152.943 179.015 152.777 cv
179.047 152.611 179.069 152.453 179.076 152.302 cv
179.086 152.15 179.09 151.954 179.09 151.712 cv
179.09 149.852 li
179.09 149.61 179.086 149.413 179.076 149.262 cv
179.069 149.11 179.047 148.952 179.015 148.786 cv
178.983 148.62 178.934 148.492 178.871 148.402 cv
178.809 148.313 178.721 148.237 178.61 148.178 cv
178.497 148.118 178.36 148.089 178.198 148.089 cv
f
184.358 153.984 mo
183.547 153.984 li
183.547 149.019 li
183.547 148.694 183.497 148.464 183.399 148.326 cv
183.299 148.19 183.145 148.121 182.936 148.121 cv
182.586 148.121 182.218 148.317 181.832 148.711 cv
181.832 153.984 li
181.022 153.984 li
181.022 147.58 li
181.832 147.58 li
181.832 148.245 li
182.305 147.737 182.819 147.483 183.373 147.483 cv
183.692 147.483 183.934 147.601 184.104 147.837 cv
184.274 148.073 184.358 148.409 184.358 148.846 cv
184.358 153.984 li
f
187.019 154.086 mo
186.51 154.086 186.104 153.923 185.799 153.594 cv
185.494 153.267 185.321 152.822 185.278 152.264 cv
185.959 152.059 li
186.002 152.545 186.113 152.903 186.294 153.132 cv
186.475 153.36 186.727 153.476 187.051 153.476 cv
187.332 153.476 187.555 153.393 187.717 153.227 cv
187.871 153.067 187.949 152.855 187.949 152.588 cv
187.949 152.551 li
187.938 152.125 187.679 151.699 187.17 151.274 cv
186.299 150.533 li
185.993 150.277 185.77 150.026 185.629 149.781 cv
185.492 149.543 185.424 149.266 185.424 148.948 cv
185.424 148.48 185.565 148.117 185.846 147.861 cv
186.119 147.609 186.489 147.483 186.953 147.483 cv
187.426 147.483 187.789 147.634 188.043 147.938 cv
188.298 148.24 188.44 148.649 188.469 149.165 cv
187.895 149.355 li
187.869 148.925 187.783 148.607 187.633 148.4 cv
187.483 148.192 187.268 148.089 186.987 148.089 cv
186.735 148.089 186.533 148.159 186.381 148.3 cv
186.233 148.437 186.158 148.62 186.158 148.851 cv
186.158 149.061 186.198 149.239 186.273 149.39 cv
186.348 149.539 186.487 149.7 186.69 149.873 cv
187.592 150.685 li
187.754 150.825 187.887 150.948 187.99 151.055 cv
188.092 151.161 188.201 151.293 188.317 151.45 cv
188.432 151.607 188.518 151.776 188.574 151.958 cv
188.629 152.141 188.659 152.336 188.663 152.545 cv
188.663 153.035 188.516 153.415 188.219 153.684 cv
187.924 153.952 187.524 154.086 187.019 154.086 cv
f
191.184 154.086 mo
190.571 154.086 190.129 153.897 189.859 153.519 cv
189.588 153.14 189.453 152.493 189.453 151.577 cv
189.453 149.96 li
189.453 149.336 189.517 148.841 189.645 148.476 cv
189.773 148.109 189.96 147.853 190.207 147.704 cv
190.454 147.557 190.781 147.483 191.19 147.483 cv
191.459 147.483 191.69 147.518 191.881 147.588 cv
192.072 147.658 192.231 147.759 192.358 147.889 cv
192.483 148.019 192.583 148.194 192.658 148.416 cv
192.731 148.638 192.783 148.883 192.811 149.151 cv
192.84 149.42 192.855 149.743 192.855 150.122 cv
192.85 150.701 li
190.264 150.701 li
190.264 151.658 li
190.264 152.321 190.328 152.79 190.456 153.065 cv
190.584 153.338 190.824 153.476 191.178 153.476 cv
191.459 153.476 191.676 153.386 191.827 153.208 cv
191.979 153.029 192.055 152.705 192.055 152.236 cv
192.055 151.793 li
192.85 151.793 li
192.85 152.15 li
192.85 152.771 192.719 153.248 192.46 153.583 cv
192.2 153.919 191.775 154.086 191.184 154.086 cv
191.184 148.089 mo
190.841 148.089 190.602 148.207 190.467 148.445 cv
190.332 148.684 190.264 149.136 190.264 149.803 cv
190.264 150.235 li
192.055 150.235 li
192.055 149.706 li
192.055 149.482 192.049 149.297 192.038 149.148 cv
192.028 149.001 192.004 148.854 191.971 148.708 cv
191.936 148.562 191.889 148.447 191.827 148.364 cv
191.766 148.281 191.682 148.215 191.572 148.164 cv
191.465 148.113 191.335 148.089 191.184 148.089 cv
f
195.543 154.086 mo
195.25 154.086 195 154.043 194.791 153.957 cv
194.582 153.87 194.416 153.758 194.293 153.618 cv
194.17 153.48 194.074 153.297 194.004 153.069 cv
193.934 152.843 193.887 152.612 193.864 152.38 cv
193.84 152.148 193.828 151.873 193.828 151.556 cv
193.828 150.063 li
193.828 149.598 193.854 149.211 193.905 148.902 cv
193.954 148.594 194.043 148.33 194.172 148.11 cv
194.299 147.891 194.475 147.731 194.697 147.632 cv
194.918 147.532 195.199 147.483 195.537 147.483 cv
195.805 147.483 196.035 147.516 196.23 147.58 cv
196.424 147.645 196.582 147.734 196.703 147.848 cv
196.823 147.961 196.919 148.106 196.99 148.283 cv
197.06 148.46 197.109 148.646 197.135 148.843 cv
197.162 149.039 197.176 149.27 197.176 149.532 cv
197.176 149.835 li
196.424 149.835 li
196.424 149.532 li
196.424 148.984 196.36 148.607 196.23 148.4 cv
196.1 148.192 195.873 148.089 195.548 148.089 cv
195.18 148.089 194.938 148.219 194.819 148.48 cv
194.699 148.742 194.639 149.225 194.639 149.928 cv
194.639 151.723 li
194.639 152.379 194.703 152.835 194.832 153.091 cv
194.959 153.348 195.2 153.476 195.553 153.476 cv
195.705 153.476 195.833 153.454 195.938 153.41 cv
196.042 153.367 196.126 153.308 196.19 153.231 cv
196.252 153.156 196.302 153.052 196.338 152.918 cv
196.373 152.785 196.397 152.644 196.408 152.493 cv
196.419 152.344 196.424 152.155 196.424 151.929 cv
196.424 151.577 li
197.176 151.577 li
197.176 151.891 li
197.176 152.172 197.164 152.415 197.141 152.621 cv
197.117 152.826 197.071 153.026 197 153.219 cv
196.93 153.411 196.836 153.568 196.719 153.689 cv
196.602 153.81 196.444 153.906 196.246 153.979 cv
196.047 154.051 195.813 154.086 195.543 154.086 cv
f
199.772 154.064 mo
199.336 154.064 199.035 153.945 198.869 153.705 cv
198.703 153.466 198.618 153.115 198.616 152.653 cv
198.616 148.121 li
197.842 148.121 li
197.842 147.58 li
198.616 147.58 li
198.616 145.601 li
199.426 145.601 li
199.426 147.58 li
200.491 147.58 li
200.491 148.121 li
199.426 148.121 li
199.426 152.577 li
199.426 152.902 199.464 153.125 199.539 153.245 cv
199.615 153.366 199.769 153.427 199.999 153.427 cv
200.147 153.427 200.299 153.412 200.453 153.384 cv
200.453 153.994 li
200.212 154.041 199.985 154.064 199.772 154.064 cv
f
202.963 154.086 mo
202.35 154.086 201.908 153.897 201.639 153.519 cv
201.367 153.14 201.233 152.493 201.233 151.577 cv
201.233 149.96 li
201.233 149.336 201.297 148.841 201.424 148.476 cv
201.553 148.109 201.741 147.853 201.987 147.704 cv
202.235 147.557 202.561 147.483 202.969 147.483 cv
203.238 147.483 203.47 147.518 203.66 147.588 cv
203.852 147.658 204.01 147.759 204.137 147.889 cv
204.263 148.019 204.364 148.194 204.438 148.416 cv
204.511 148.638 204.563 148.883 204.591 149.151 cv
204.619 149.42 204.635 149.743 204.635 150.122 cv
204.629 150.701 li
202.043 150.701 li
202.043 151.658 li
202.043 152.321 202.108 152.79 202.237 153.065 cv
202.364 153.338 202.605 153.476 202.957 153.476 cv
203.238 153.476 203.455 153.386 203.608 153.208 cv
203.758 153.029 203.834 152.705 203.834 152.236 cv
203.834 151.793 li
204.629 151.793 li
204.629 152.15 li
204.629 152.771 204.499 153.248 204.24 153.583 cv
203.981 153.919 203.555 154.086 202.963 154.086 cv
202.963 148.089 mo
202.621 148.089 202.382 148.207 202.246 148.445 cv
202.112 148.684 202.043 149.136 202.043 149.803 cv
202.043 150.235 li
203.834 150.235 li
203.834 149.706 li
203.834 149.482 203.828 149.297 203.819 149.148 cv
203.807 149.001 203.784 148.854 203.75 148.708 cv
203.716 148.562 203.668 148.447 203.608 148.364 cv
203.545 148.281 203.461 148.215 203.353 148.164 cv
203.244 148.113 203.115 148.089 202.963 148.089 cv
f
207.246 154.064 mo
206.811 154.064 206.51 153.945 206.344 153.705 cv
206.178 153.466 206.093 153.115 206.09 152.653 cv
206.09 148.121 li
205.317 148.121 li
205.317 147.58 li
206.09 147.58 li
206.09 145.601 li
206.901 145.601 li
206.901 147.58 li
207.966 147.58 li
207.966 148.121 li
206.901 148.121 li
206.901 152.577 li
206.901 152.902 206.939 153.125 207.014 153.245 cv
207.09 153.366 207.243 153.427 207.474 153.427 cv
207.621 153.427 207.774 153.412 207.928 153.384 cv
207.928 153.994 li
207.687 154.041 207.459 154.064 207.246 154.064 cv
f
209.768 154.081 mo
209.447 154.081 209.201 153.962 209.032 153.724 cv
208.862 153.486 208.778 153.149 208.778 152.713 cv
208.778 147.58 li
209.594 147.58 li
209.594 152.545 li
209.594 152.869 209.643 153.101 209.741 153.237 cv
209.838 153.374 209.99 153.442 210.199 153.442 cv
210.565 153.442 210.943 153.233 211.336 152.816 cv
211.336 147.58 li
212.147 147.58 li
212.147 153.984 li
211.336 153.984 li
211.336 153.275 li
210.86 153.813 210.337 154.081 209.768 154.081 cv
f
214.262 153.984 mo
213.45 153.984 li
213.45 147.58 li
214.262 147.58 li
214.262 148.462 li
214.456 148.137 214.684 147.898 214.946 147.742 cv
215.207 147.587 215.471 147.51 215.738 147.51 cv
215.879 147.516 li
215.879 148.392 li
215.764 148.345 215.633 148.321 215.489 148.321 cv
214.97 148.321 214.561 148.57 214.262 149.067 cv
214.262 153.984 li
f
220.054 154.086 mo
219.679 154.086 219.371 153.948 219.129 153.673 cv
218.888 153.397 218.767 153.056 218.767 152.647 cv
218.767 152.436 218.785 152.245 218.82 152.077 cv
218.858 151.909 218.924 151.752 219.024 151.604 cv
219.123 151.456 219.231 151.325 219.348 151.212 cv
219.465 151.099 219.632 150.978 219.848 150.85 cv
220.065 150.722 220.282 150.604 220.498 150.495 cv
220.714 150.387 220.996 150.256 221.347 150.101 cv
221.347 149.641 li
221.347 149.053 221.291 148.648 221.179 148.427 cv
221.067 148.205 220.858 148.094 220.551 148.094 cv
219.96 148.094 219.664 148.46 219.664 149.191 cv
219.664 149.425 li
218.864 149.397 li
218.864 149.293 218.866 149.228 218.869 149.202 cv
218.895 148.601 219.051 148.163 219.34 147.891 cv
219.629 147.619 220.047 147.483 220.595 147.483 cv
221.16 147.483 221.563 147.65 221.801 147.985 cv
222.039 148.321 222.158 148.858 222.158 149.598 cv
222.158 152.713 li
222.158 153.229 222.178 153.652 222.217 153.984 cv
221.498 153.984 li
221.379 153.097 li
221.281 153.378 221.117 153.613 220.885 153.803 cv
220.652 153.992 220.375 154.086 220.054 154.086 cv
221.347 150.636 mo
221.244 150.69 li
221.067 150.784 220.932 150.856 220.838 150.906 cv
220.744 150.957 220.632 151.02 220.5 151.096 cv
220.369 151.171 220.27 151.234 220.205 151.285 cv
219.981 151.469 li
219.797 151.672 li
219.681 151.891 li
219.641 151.974 219.614 152.061 219.6 152.153 cv
219.585 152.245 219.578 152.347 219.578 152.458 cv
219.578 152.773 219.649 153.006 219.789 153.159 cv
219.93 153.313 220.106 153.389 220.319 153.389 cv
220.535 153.389 220.735 153.314 220.916 153.164 cv
221.099 153.015 221.242 152.837 221.347 152.632 cv
221.347 150.636 li
f
224.77 154.086 mo
224.219 154.086 223.823 153.879 223.583 153.465 cv
223.343 153.05 223.223 152.361 223.223 151.398 cv
223.223 150.214 li
223.223 149.86 223.237 149.551 223.262 149.284 cv
223.286 149.017 223.333 148.767 223.403 148.532 cv
223.471 148.298 223.561 148.106 223.672 147.959 cv
223.784 147.811 223.928 147.694 224.105 147.609 cv
224.281 147.525 224.491 147.483 224.733 147.483 cv
225.155 147.486 225.531 147.672 225.862 148.04 cv
225.862 145.017 li
226.674 145.017 li
226.674 153.984 li
225.862 153.984 li
225.862 153.529 li
225.538 153.897 225.174 154.083 224.77 154.086 cv
224.91 148.121 mo
224.569 148.121 224.336 148.265 224.216 148.551 cv
224.095 148.838 224.034 149.306 224.034 149.954 cv
224.034 151.463 li
224.034 152.163 224.096 152.668 224.219 152.978 cv
224.341 153.288 224.578 153.442 224.932 153.442 cv
225.246 153.442 225.557 153.302 225.862 153.021 cv
225.862 148.575 li
225.538 148.272 225.221 148.121 224.91 148.121 cv
f
228.816 153.984 mo
228.004 153.984 li
228.004 147.58 li
228.816 147.58 li
228.816 153.984 li
228.822 146.698 mo
228.004 146.698 li
228.004 145.596 li
228.822 145.596 li
228.822 146.698 li
f
230.99 156.093 mo
230.179 156.093 li
230.179 147.58 li
230.99 147.58 li
230.99 148.115 li
231.332 147.693 231.742 147.483 232.218 147.483 cv
232.455 147.483 232.664 147.531 232.842 147.629 cv
233.021 147.727 233.161 147.853 233.264 148.008 cv
233.367 148.162 233.449 148.356 233.513 148.586 cv
233.576 148.816 233.617 149.045 233.637 149.271 cv
233.657 149.495 233.667 149.751 233.667 150.035 cv
233.667 151.388 li
233.667 151.727 233.653 152.029 233.623 152.296 cv
233.595 152.563 233.545 152.811 233.473 153.04 cv
233.401 153.269 233.306 153.458 233.189 153.607 cv
233.072 153.758 232.924 153.875 232.748 153.959 cv
232.571 154.044 232.365 154.086 232.131 154.086 cv
231.717 154.086 231.336 153.883 230.99 153.476 cv
230.99 156.093 li
231.985 148.121 mo
231.656 148.121 231.325 148.285 230.99 148.613 cv
230.99 152.978 li
231.285 153.288 231.623 153.442 232.002 153.442 cv
232.146 153.442 232.268 153.413 232.369 153.354 cv
232.47 153.294 232.552 153.213 232.615 153.11 cv
232.678 153.008 232.728 152.868 232.764 152.691 cv
232.8 152.515 232.824 152.326 232.837 152.126 cv
232.85 151.926 232.856 151.684 232.856 151.398 cv
232.856 150.035 li
232.856 149.351 232.798 148.86 232.683 148.564 cv
232.568 148.269 232.334 148.121 231.985 148.121 cv
f
235.7 153.984 mo
234.889 153.984 li
234.889 147.58 li
235.7 147.58 li
235.7 153.984 li
235.706 146.698 mo
234.889 146.698 li
234.889 145.596 li
235.706 145.596 li
235.706 146.698 li
f
238.524 154.086 mo
238.016 154.086 237.61 153.923 237.305 153.594 cv
237 153.267 236.825 152.822 236.782 152.264 cv
237.463 152.059 li
237.507 152.545 237.619 152.903 237.799 153.132 cv
237.979 153.36 238.232 153.476 238.557 153.476 cv
238.838 153.476 239.059 153.393 239.221 153.227 cv
239.377 153.067 239.454 152.855 239.454 152.588 cv
239.454 152.551 li
239.444 152.125 239.184 151.699 238.676 151.274 cv
237.805 150.533 li
237.498 150.277 237.275 150.026 237.134 149.781 cv
236.996 149.543 236.928 149.266 236.928 148.948 cv
236.928 148.48 237.069 148.117 237.35 147.861 cv
237.624 147.609 237.994 147.483 238.459 147.483 cv
238.932 147.483 239.295 147.634 239.549 147.938 cv
239.803 148.24 239.945 148.649 239.973 149.165 cv
239.401 149.355 li
239.375 148.925 239.287 148.607 239.138 148.4 cv
238.988 148.192 238.773 148.089 238.491 148.089 cv
238.239 148.089 238.037 148.159 237.885 148.3 cv
237.738 148.437 237.664 148.62 237.664 148.851 cv
237.664 149.061 237.701 149.239 237.778 149.39 cv
237.854 149.539 237.992 149.7 238.194 149.873 cv
239.098 150.685 li
239.26 150.825 239.392 150.948 239.494 151.055 cv
239.598 151.161 239.706 151.293 239.823 151.45 cv
239.938 151.607 240.023 151.776 240.078 151.958 cv
240.135 152.141 240.164 152.336 240.168 152.545 cv
240.168 153.035 240.02 153.415 239.725 153.684 cv
239.429 153.952 239.029 154.086 238.524 154.086 cv
f
242.672 154.086 mo
242.38 154.086 242.129 154.043 241.92 153.957 cv
241.711 153.87 241.545 153.758 241.423 153.618 cv
241.3 153.48 241.203 153.297 241.133 153.069 cv
241.063 152.843 241.016 152.612 240.992 152.38 cv
240.969 152.148 240.957 151.873 240.957 151.556 cv
240.957 150.063 li
240.957 149.598 240.983 149.211 241.033 148.902 cv
241.084 148.594 241.173 148.33 241.301 148.11 cv
241.429 147.891 241.604 147.731 241.826 147.632 cv
242.047 147.532 242.328 147.483 242.666 147.483 cv
242.934 147.483 243.164 147.516 243.36 147.58 cv
243.554 147.645 243.711 147.734 243.832 147.848 cv
243.953 147.961 244.049 148.106 244.119 148.283 cv
244.19 148.46 244.239 148.646 244.265 148.843 cv
244.292 149.039 244.305 149.27 244.305 149.532 cv
244.305 149.835 li
243.554 149.835 li
243.554 149.532 li
243.554 148.984 243.488 148.607 243.36 148.4 cv
243.229 148.192 243.002 148.089 242.678 148.089 cv
242.31 148.089 242.067 148.219 241.948 148.48 cv
241.828 148.742 241.769 149.225 241.769 149.928 cv
241.769 151.723 li
241.769 152.379 241.833 152.835 241.961 153.091 cv
242.089 153.348 242.33 153.476 242.683 153.476 cv
242.834 153.476 242.963 153.454 243.067 153.41 cv
243.172 153.367 243.256 153.308 243.319 153.231 cv
243.381 153.156 243.432 153.052 243.467 152.918 cv
243.503 152.785 243.527 152.644 243.537 152.493 cv
243.549 152.344 243.554 152.155 243.554 151.929 cv
243.554 151.577 li
244.305 151.577 li
244.305 151.891 li
244.305 152.172 244.293 152.415 244.27 152.621 cv
244.246 152.826 244.2 153.026 244.129 153.219 cv
244.059 153.411 243.965 153.568 243.848 153.689 cv
243.731 153.81 243.573 153.906 243.375 153.979 cv
243.177 154.051 242.943 154.086 242.672 154.086 cv
f
246.285 153.984 mo
245.474 153.984 li
245.474 147.58 li
246.285 147.58 li
246.285 153.984 li
246.291 146.698 mo
245.474 146.698 li
245.474 145.596 li
246.291 145.596 li
246.291 146.698 li
f
250.98 153.984 mo
250.168 153.984 li
250.168 149.019 li
250.168 148.694 250.119 148.464 250.02 148.326 cv
249.92 148.19 249.766 148.121 249.557 148.121 cv
249.207 148.121 248.84 148.317 248.453 148.711 cv
248.453 153.984 li
247.643 153.984 li
247.643 147.58 li
248.453 147.58 li
248.453 148.245 li
248.926 147.737 249.44 147.483 249.995 147.483 cv
250.313 147.483 250.556 147.601 250.725 147.837 cv
250.895 148.073 250.98 148.409 250.98 148.846 cv
250.98 153.984 li
f
253.933 156.088 mo
253.594 156.088 253.295 156.069 253.037 156.033 cv
252.78 155.997 252.551 155.938 252.354 155.855 cv
252.155 155.772 252.004 155.659 251.899 155.517 cv
251.795 155.374 251.742 155.204 251.742 155.006 cv
251.742 154.695 251.845 154.412 252.051 154.154 cv
252.256 153.897 252.506 153.69 252.803 153.535 cv
252.608 153.48 252.44 153.402 252.299 153.3 cv
252.159 153.196 252.088 153.086 252.088 152.967 cv
252.088 152.628 252.342 152.197 252.851 151.674 cv
252.317 151.285 252.051 150.632 252.051 149.717 cv
252.051 149.406 252.086 149.119 252.159 148.854 cv
252.231 148.589 252.338 148.353 252.481 148.146 cv
252.623 147.938 252.809 147.775 253.04 147.658 cv
253.271 147.541 253.535 147.483 253.835 147.483 cv
254.481 147.483 254.94 147.748 255.215 148.277 cv
255.284 148.159 255.399 148.03 255.561 147.891 cv
255.723 147.752 255.896 147.644 256.08 147.564 cv
256.247 147.493 li
256.463 148.062 li
256.287 148.105 256.09 148.183 255.871 148.294 cv
255.654 148.406 255.499 148.514 255.408 148.618 cv
255.463 148.748 255.511 148.929 255.553 149.159 cv
255.594 149.391 255.615 149.583 255.615 149.738 cv
255.615 150.427 255.473 150.972 255.19 151.374 cv
254.906 151.776 254.459 151.978 253.846 151.978 cv
253.748 151.978 253.629 151.966 253.489 151.942 cv
253.348 151.919 253.251 151.897 253.197 151.874 cv
253.186 151.893 253.146 151.954 253.076 152.059 cv
253.005 152.163 252.953 152.243 252.918 152.299 cv
252.813 152.505 li
252.759 152.707 li
252.759 152.812 252.938 152.893 253.295 152.95 cv
253.37 152.973 253.551 153.004 253.835 153.045 cv
254.119 153.087 254.282 153.113 254.322 153.124 cv
254.848 153.218 255.246 153.382 255.518 153.616 cv
255.787 153.851 255.923 154.179 255.923 154.601 cv
255.923 155.108 255.744 155.483 255.387 155.726 cv
255.031 155.967 254.545 156.088 253.933 156.088 cv
253.251 153.643 mo
252.71 153.979 252.44 154.344 252.44 154.741 cv
252.44 154.986 252.555 155.163 252.785 155.273 cv
253.017 155.384 253.395 155.439 253.922 155.439 cv
254.34 155.439 254.67 155.371 254.914 155.235 cv
255.157 155.101 255.28 154.896 255.28 154.622 cv
255.28 154.388 255.197 154.205 255.031 154.075 cv
254.864 153.945 254.545 153.838 254.073 153.751 cv
253.251 153.643 li
253.852 148.062 mo
253.682 148.062 253.532 148.097 253.401 148.167 cv
253.268 148.237 253.164 148.326 253.086 148.435 cv
253.008 148.543 252.946 148.673 252.897 148.824 cv
252.848 148.976 252.816 149.122 252.799 149.265 cv
252.784 149.407 252.776 149.558 252.776 149.717 cv
252.776 150.834 253.132 151.393 253.846 151.393 cv
254.026 151.393 254.184 151.358 254.317 151.29 cv
254.449 151.222 254.553 151.136 254.625 151.03 cv
254.698 150.926 254.754 150.795 254.798 150.639 cv
254.841 150.482 254.869 150.334 254.881 150.195 cv
254.895 150.057 254.901 149.896 254.901 149.717 cv
254.901 148.613 254.551 148.062 253.852 148.062 cv
f
67.2386 167.378 mo
66.6253 167.378 66.1838 167.189 65.9133 166.811 cv
65.6428 166.432 65.5081 165.784 65.5081 164.869 cv
65.5081 163.252 li
65.5081 162.628 65.5715 162.133 65.6994 161.767 cv
65.8274 161.401 66.0149 161.145 66.2619 160.996 cv
66.509 160.849 66.8362 160.775 67.2444 160.775 cv
67.5139 160.775 67.7443 160.81 67.9358 160.88 cv
68.1272 160.95 68.2853 161.051 68.4124 161.18 cv
68.5374 161.31 68.6379 161.485 68.7122 161.707 cv
68.7854 161.929 68.8372 162.175 68.8654 162.443 cv
68.8947 162.712 68.9094 163.035 68.9094 163.414 cv
68.9045 163.992 li
66.3186 163.992 li
66.3186 164.95 li
66.3186 165.613 66.383 166.082 66.511 166.357 cv
66.639 166.63 66.8791 166.767 67.2327 166.767 cv
67.5139 166.767 67.7306 166.678 67.882 166.499 cv
68.0335 166.321 68.1096 165.997 68.1096 165.528 cv
68.1096 165.085 li
68.9045 165.085 li
68.9045 165.442 li
68.9045 166.063 68.7737 166.54 68.5149 166.875 cv
68.2551 167.211 67.8293 167.378 67.2386 167.378 cv
67.2386 161.38 mo
66.8958 161.38 66.6565 161.499 66.5217 161.737 cv
66.3869 161.976 66.3186 162.428 66.3186 163.095 cv
66.3186 163.527 li
68.1096 163.527 li
68.1096 162.997 li
68.1096 162.773 68.1037 162.588 68.0931 162.44 cv
68.0823 162.293 68.0588 162.146 68.0256 161.999 cv
67.9905 161.854 67.9436 161.739 67.882 161.656 cv
67.8206 161.573 67.7365 161.507 67.6272 161.456 cv
67.5198 161.405 67.3898 161.38 67.2386 161.38 cv
f
70.9319 167.275 mo
70.1154 167.275 li
70.1154 158.309 li
70.9319 158.309 li
70.9319 167.275 li
f
73.1447 167.275 mo
72.3332 167.275 li
72.3332 160.872 li
73.1447 160.872 li
73.1447 167.275 li
73.1506 159.99 mo
72.3332 159.99 li
72.3332 158.887 li
73.1506 158.887 li
73.1506 159.99 li
f
76.0217 167.356 mo
75.5862 167.356 75.2844 167.236 75.1184 166.997 cv
74.9533 166.757 74.8674 166.406 74.8646 165.945 cv
74.8646 161.413 li
74.091 161.413 li
74.091 160.872 li
74.8646 160.872 li
74.8646 158.893 li
75.676 158.893 li
75.676 160.872 li
76.7405 160.872 li
76.7405 161.413 li
75.676 161.413 li
75.676 165.869 li
75.676 166.193 75.7131 166.416 75.7894 166.537 cv
75.8655 166.658 76.0178 166.719 76.2482 166.719 cv
76.3968 166.719 76.548 166.704 76.7034 166.675 cv
76.7034 167.286 li
76.4612 167.333 76.2346 167.356 76.0217 167.356 cv
f
77.6985 168.568 mo
77.5314 168.211 li
77.7219 168.103 77.8577 167.977 77.9397 167.832 cv
78.0198 167.689 78.0608 167.503 78.0608 167.275 cv
77.5744 167.275 li
77.5744 166.069 li
78.4827 166.069 li
78.4827 167.189 li
78.4827 167.55 78.423 167.833 78.305 168.041 cv
78.1857 168.248 77.9827 168.424 77.6985 168.568 cv
f
83.3284 167.378 mo
82.8206 167.378 82.4143 167.214 82.1096 166.886 cv
81.8049 166.558 81.6301 166.114 81.5871 165.556 cv
82.2678 165.35 li
82.3118 165.837 82.424 166.194 82.6038 166.424 cv
82.7835 166.652 83.0364 166.767 83.3616 166.767 cv
83.6428 166.767 83.8636 166.685 84.0257 166.519 cv
84.1819 166.359 84.2591 166.147 84.2591 165.88 cv
84.2591 165.842 li
84.2483 165.417 83.9885 164.991 83.4807 164.566 cv
82.6097 163.825 li
82.303 163.569 82.0793 163.318 81.9387 163.073 cv
81.801 162.835 81.7326 162.558 81.7326 162.24 cv
81.7326 161.772 81.8732 161.409 82.1546 161.153 cv
82.429 160.9 82.7991 160.775 83.264 160.775 cv
83.7365 160.775 84.0999 160.926 84.3537 161.229 cv
84.6077 161.531 84.7493 161.941 84.7776 162.456 cv
84.2053 162.646 li
84.1799 162.217 84.092 161.898 83.9426 161.692 cv
83.7933 161.484 83.5774 161.38 83.2961 161.38 cv
83.0432 161.38 82.842 161.45 82.6897 161.591 cv
82.5431 161.729 82.4689 161.912 82.4689 162.143 cv
82.4689 162.352 82.506 162.531 82.5823 162.681 cv
82.6585 162.831 82.7971 162.992 82.9983 163.165 cv
83.9026 163.977 li
84.0647 164.117 84.1966 164.24 84.299 164.347 cv
84.4025 164.453 84.511 164.585 84.6272 164.741 cv
84.7424 164.899 84.8274 165.068 84.883 165.25 cv
84.9396 165.432 84.9689 165.628 84.9728 165.837 cv
84.9728 166.327 84.8244 166.707 84.5296 166.976 cv
84.2337 167.244 83.8332 167.378 83.3284 167.378 cv
f
87.4925 167.378 mo
86.8801 167.378 86.4387 167.189 86.1682 166.811 cv
85.8976 166.432 85.762 165.784 85.762 164.869 cv
85.762 163.252 li
85.762 162.628 85.8264 162.133 85.9544 161.767 cv
86.0822 161.401 86.2698 161.145 86.5168 160.996 cv
86.7639 160.849 87.091 160.775 87.4984 160.775 cv
87.7687 160.775 88.0002 160.81 88.1907 160.88 cv
88.382 160.95 88.5403 161.051 88.6662 161.18 cv
88.7933 161.31 88.8929 161.485 88.9671 161.707 cv
89.0413 161.929 89.092 162.175 89.1213 162.443 cv
89.1497 162.712 89.1643 163.035 89.1643 163.414 cv
89.1584 163.992 li
86.5736 163.992 li
86.5736 164.95 li
86.5736 165.613 86.638 166.082 86.7658 166.357 cv
86.8938 166.63 87.135 166.767 87.4875 166.767 cv
87.7687 166.767 87.9846 166.678 88.137 166.499 cv
88.2883 166.321 88.3635 165.997 88.3635 165.528 cv
88.3635 165.085 li
89.1584 165.085 li
89.1584 165.442 li
89.1584 166.063 89.0295 166.54 88.7698 166.875 cv
88.51 167.211 88.0842 167.378 87.4925 167.378 cv
87.4925 161.38 mo
87.1506 161.38 86.9124 161.499 86.7766 161.737 cv
86.6408 161.976 86.5736 162.428 86.5736 163.095 cv
86.5736 163.527 li
88.3635 163.527 li
88.3635 162.997 li
88.3635 162.773 88.3586 162.588 88.3479 162.44 cv
88.3362 162.293 88.3147 162.146 88.2796 161.999 cv
88.2464 161.854 88.1976 161.739 88.137 161.656 cv
88.0754 161.573 87.9904 161.507 87.883 161.456 cv
87.7737 161.405 87.6448 161.38 87.4925 161.38 cv
f
91.6848 167.378 mo
91.133 167.378 90.7375 167.171 90.4982 166.756 cv
90.2581 166.342 90.1379 165.653 90.1379 164.69 cv
90.1379 163.506 li
90.1379 163.152 90.1507 162.843 90.176 162.575 cv
90.2014 162.309 90.2483 162.059 90.3166 161.823 cv
90.385 161.59 90.4748 161.398 90.5863 161.25 cv
90.6985 161.103 90.8429 160.986 91.0197 160.901 cv
91.1956 160.817 91.4055 160.775 91.6467 160.775 cv
92.0686 160.778 92.4456 160.964 92.7776 161.332 cv
92.7776 158.309 li
93.5881 158.309 li
93.5881 167.275 li
92.7776 167.275 li
92.7776 166.821 li
92.4534 167.189 92.0881 167.375 91.6848 167.378 cv
91.8254 161.413 mo
91.4827 161.413 91.2512 161.556 91.131 161.843 cv
91.01 162.129 90.9494 162.597 90.9494 163.246 cv
90.9494 164.755 li
90.9494 165.455 91.01 165.959 91.133 166.27 cv
91.2562 166.579 91.4933 166.734 91.8469 166.734 cv
92.1604 166.734 92.471 166.594 92.7776 166.313 cv
92.7776 161.867 li
92.4534 161.564 92.135 161.413 91.8254 161.413 cv
f
98.5158 167.378 mo
97.9641 167.378 97.5686 167.171 97.3283 166.756 cv
97.0881 166.342 96.969 165.653 96.969 164.69 cv
96.969 163.506 li
96.969 163.152 96.9816 162.843 97.007 162.575 cv
97.0315 162.309 97.0784 162.059 97.1478 161.823 cv
97.2161 161.59 97.3059 161.398 97.4183 161.25 cv
97.5296 161.103 97.6741 160.986 97.8498 160.901 cv
98.0276 160.817 98.2366 160.775 98.4778 160.775 cv
98.8996 160.778 99.2766 160.964 99.6076 161.332 cv
99.6076 158.309 li
100.42 158.309 li
100.42 167.275 li
99.6076 167.275 li
99.6076 166.821 li
99.2835 167.189 98.9202 167.375 98.5158 167.378 cv
98.6565 161.413 mo
98.3138 161.413 98.0823 161.556 97.9611 161.843 cv
97.84 162.129 97.7795 162.597 97.7795 163.246 cv
97.7795 164.755 li
97.7795 165.455 97.842 165.959 97.9641 166.27 cv
98.0862 166.579 98.3244 166.734 98.678 166.734 cv
98.9924 166.734 99.302 166.594 99.6076 166.313 cv
99.6076 161.867 li
99.2835 161.564 98.967 161.413 98.6565 161.413 cv
f
103.248 167.378 mo
102.92 167.378 102.645 167.326 102.42 167.222 cv
102.197 167.117 102.022 166.958 101.894 166.745 cv
101.766 166.532 101.674 166.283 101.62 165.996 cv
101.567 165.71 101.539 165.364 101.539 164.961 cv
101.539 163.187 li
101.539 162.372 101.665 161.766 101.918 161.369 cv
102.17 160.973 102.614 160.775 103.248 160.775 cv
103.887 160.775 104.33 160.972 104.582 161.367 cv
104.832 161.762 104.957 162.368 104.957 163.187 cv
104.957 164.961 li
104.957 165.364 104.93 165.71 104.876 165.996 cv
104.823 166.283 104.731 166.532 104.604 166.745 cv
104.475 166.958 104.299 167.117 104.076 167.222 cv
103.852 167.326 103.576 167.378 103.248 167.378 cv
103.248 161.38 mo
103.112 161.38 102.992 161.398 102.891 161.435 cv
102.79 161.471 102.707 161.529 102.643 161.61 cv
102.578 161.692 102.526 161.777 102.486 161.87 cv
102.446 161.962 102.416 162.082 102.397 162.23 cv
102.377 162.377 102.364 162.517 102.359 162.648 cv
102.354 162.78 102.35 162.945 102.35 163.144 cv
102.35 165.004 li
102.35 165.202 102.354 165.367 102.359 165.499 cv
102.364 165.631 102.377 165.771 102.397 165.918 cv
102.416 166.065 102.446 166.186 102.486 166.277 cv
102.526 166.369 102.578 166.456 102.643 166.537 cv
102.707 166.618 102.79 166.677 102.891 166.713 cv
102.992 166.749 103.112 166.767 103.248 166.767 cv
103.41 166.767 103.547 166.737 103.659 166.678 cv
103.772 166.618 103.859 166.544 103.922 166.453 cv
103.985 166.363 104.032 166.235 104.065 166.069 cv
104.098 165.903 104.118 165.745 104.127 165.594 cv
104.136 165.442 104.141 165.245 104.141 165.004 cv
104.141 163.144 li
104.141 162.902 104.136 162.705 104.127 162.554 cv
104.118 162.402 104.098 162.244 104.065 162.078 cv
104.032 161.912 103.985 161.784 103.922 161.694 cv
103.859 161.604 103.772 161.529 103.659 161.47 cv
103.547 161.41 103.41 161.38 103.248 161.38 cv
f
109.944 167.378 mo
109.33 167.378 108.889 167.189 108.619 166.811 cv
108.348 166.432 108.213 165.784 108.213 164.869 cv
108.213 163.252 li
108.213 162.628 108.278 162.133 108.404 161.767 cv
108.534 161.401 108.721 161.145 108.967 160.996 cv
109.215 160.849 109.541 160.775 109.949 160.775 cv
110.219 160.775 110.45 160.81 110.641 160.88 cv
110.832 160.95 110.991 161.051 111.117 161.18 cv
111.243 161.31 111.344 161.485 111.418 161.707 cv
111.491 161.929 111.543 162.175 111.572 162.443 cv
111.6 162.712 111.616 163.035 111.616 163.414 cv
111.61 163.992 li
109.024 163.992 li
109.024 164.95 li
109.024 165.613 109.088 166.082 109.217 166.357 cv
109.344 166.63 109.585 166.767 109.938 166.767 cv
110.219 166.767 110.436 166.678 110.588 166.499 cv
110.738 166.321 110.815 165.997 110.815 165.528 cv
110.815 165.085 li
111.61 165.085 li
111.61 165.442 li
111.61 166.063 111.48 166.54 111.221 166.875 cv
110.961 167.211 110.535 167.378 109.944 167.378 cv
109.944 161.38 mo
109.602 161.38 109.362 161.499 109.227 161.737 cv
109.092 161.976 109.024 162.428 109.024 163.095 cv
109.024 163.527 li
110.815 163.527 li
110.815 162.997 li
110.815 162.773 110.809 162.588 110.799 162.44 cv
110.787 162.293 110.765 162.146 110.731 161.999 cv
110.697 161.854 110.649 161.739 110.588 161.656 cv
110.526 161.573 110.442 161.507 110.333 161.456 cv
110.225 161.405 110.096 161.38 109.944 161.38 cv
f
113.611 167.275 mo
112.799 167.275 li
112.799 160.872 li
113.611 160.872 li
113.611 167.275 li
113.616 159.99 mo
112.799 159.99 li
112.799 158.887 li
113.616 158.887 li
113.616 159.99 li
f
115.909 167.373 mo
115.588 167.373 115.344 167.254 115.174 167.016 cv
115.004 166.777 114.92 166.441 114.92 166.005 cv
114.92 160.872 li
115.737 160.872 li
115.737 165.837 li
115.737 166.161 115.785 166.392 115.883 166.529 cv
115.98 166.666 116.133 166.734 116.342 166.734 cv
116.706 166.734 117.084 166.525 117.478 166.108 cv
117.478 160.872 li
118.289 160.872 li
118.289 167.275 li
117.478 167.275 li
117.478 166.567 li
117.002 167.105 116.479 167.373 115.909 167.373 cv
f
120.992 167.378 mo
120.485 167.378 120.078 167.214 119.774 166.886 cv
119.469 166.558 119.295 166.114 119.252 165.556 cv
119.933 165.35 li
119.977 165.837 120.088 166.194 120.268 166.424 cv
120.448 166.652 120.701 166.767 121.026 166.767 cv
121.307 166.767 121.529 166.685 121.691 166.519 cv
121.846 166.359 121.924 166.147 121.924 165.88 cv
121.924 165.842 li
121.912 165.417 121.653 164.991 121.145 164.566 cv
120.274 163.825 li
119.967 163.569 119.744 163.318 119.604 163.073 cv
119.466 162.835 119.398 162.558 119.398 162.24 cv
119.398 161.772 119.538 161.409 119.82 161.153 cv
120.094 160.9 120.463 160.775 120.928 160.775 cv
121.401 160.775 121.764 160.926 122.018 161.229 cv
122.272 161.531 122.414 161.941 122.443 162.456 cv
121.869 162.646 li
121.844 162.217 121.756 161.898 121.608 161.692 cv
121.457 161.484 121.242 161.38 120.961 161.38 cv
120.708 161.38 120.506 161.45 120.355 161.591 cv
120.207 161.729 120.133 161.912 120.133 162.143 cv
120.133 162.352 120.171 162.531 120.246 162.681 cv
120.323 162.831 120.461 162.992 120.663 163.165 cv
121.567 163.977 li
121.729 164.117 121.862 164.24 121.964 164.347 cv
122.067 164.453 122.176 164.585 122.291 164.741 cv
122.406 164.899 122.492 165.068 122.548 165.25 cv
122.604 165.432 122.633 165.628 122.637 165.837 cv
122.637 166.327 122.49 166.707 122.194 166.976 cv
121.899 167.244 121.498 167.378 120.992 167.378 cv
f
129.491 167.275 mo
128.722 167.275 li
128.722 162.245 li
128.722 161.895 128.668 161.652 128.56 161.516 cv
128.451 161.379 128.296 161.31 128.094 161.31 cv
127.687 161.317 127.285 161.539 126.889 161.976 cv
126.896 162.083 126.899 162.166 126.899 162.224 cv
126.899 167.275 li
126.142 167.275 li
126.142 162.245 li
126.142 161.895 126.086 161.652 125.975 161.516 cv
125.863 161.379 125.705 161.31 125.504 161.31 cv
125.096 161.317 124.698 161.539 124.309 161.976 cv
124.309 167.275 li
123.546 167.275 li
123.546 160.872 li
124.309 160.872 li
124.309 161.521 li
124.737 161.013 125.241 160.758 125.818 160.758 cv
126.352 160.758 126.686 161.039 126.824 161.602 cv
127.271 161.039 127.797 160.758 128.403 160.758 cv
128.72 160.758 128.981 160.873 129.184 161.102 cv
129.388 161.331 129.491 161.705 129.491 162.224 cv
129.491 167.275 li
f
132.27 167.378 mo
131.942 167.378 131.666 167.326 131.442 167.222 cv
131.219 167.117 131.043 166.958 130.915 166.745 cv
130.787 166.532 130.696 166.283 130.642 165.996 cv
130.588 165.71 130.561 165.364 130.561 164.961 cv
130.561 163.187 li
130.561 162.372 130.687 161.766 130.94 161.369 cv
131.192 160.973 131.635 160.775 132.27 160.775 cv
132.908 160.775 133.352 160.972 133.604 161.367 cv
133.854 161.762 133.979 162.368 133.979 163.187 cv
133.979 164.961 li
133.979 165.364 133.951 165.71 133.898 165.996 cv
133.844 166.283 133.752 166.532 133.625 166.745 cv
133.496 166.958 133.321 167.117 133.098 167.222 cv
132.873 167.326 132.598 167.378 132.27 167.378 cv
132.27 161.38 mo
132.133 161.38 132.014 161.398 131.912 161.435 cv
131.812 161.471 131.729 161.529 131.664 161.61 cv
131.6 161.692 131.547 161.777 131.507 161.87 cv
131.467 161.962 131.438 162.082 131.418 162.23 cv
131.399 162.377 131.385 162.517 131.38 162.648 cv
131.375 162.78 131.371 162.945 131.371 163.144 cv
131.371 165.004 li
131.371 165.202 131.375 165.367 131.38 165.499 cv
131.385 165.631 131.399 165.771 131.418 165.918 cv
131.438 166.065 131.467 166.186 131.507 166.277 cv
131.547 166.369 131.6 166.456 131.664 166.537 cv
131.729 166.618 131.812 166.677 131.912 166.713 cv
132.014 166.749 132.133 166.767 132.27 166.767 cv
132.432 166.767 132.569 166.737 132.681 166.678 cv
132.793 166.618 132.88 166.544 132.944 166.453 cv
133.006 166.363 133.054 166.235 133.086 166.069 cv
133.119 165.903 133.14 165.745 133.149 165.594 cv
133.157 165.442 133.162 165.245 133.162 165.004 cv
133.162 163.144 li
133.162 162.902 133.157 162.705 133.149 162.554 cv
133.14 162.402 133.119 162.244 133.086 162.078 cv
133.054 161.912 133.006 161.784 132.944 161.694 cv
132.88 161.604 132.793 161.529 132.681 161.47 cv
132.569 161.41 132.432 161.38 132.27 161.38 cv
f
136.521 167.378 mo
135.969 167.378 135.573 167.171 135.334 166.756 cv
135.094 166.342 134.974 165.653 134.974 164.69 cv
134.974 163.506 li
134.974 163.152 134.987 162.843 135.012 162.575 cv
135.037 162.309 135.084 162.059 135.153 161.823 cv
135.221 161.59 135.311 161.398 135.422 161.25 cv
135.534 161.103 135.679 160.986 135.856 160.901 cv
136.031 160.817 136.241 160.775 136.483 160.775 cv
136.905 160.778 137.281 160.964 137.614 161.332 cv
137.614 158.309 li
138.424 158.309 li
138.424 167.275 li
137.614 167.275 li
137.614 166.821 li
137.289 167.189 136.924 167.375 136.521 167.378 cv
136.661 161.413 mo
136.319 161.413 136.087 161.556 135.967 161.843 cv
135.846 162.129 135.785 162.597 135.785 163.246 cv
135.785 164.755 li
135.785 165.455 135.846 165.959 135.969 166.27 cv
136.092 166.579 136.329 166.734 136.683 166.734 cv
136.996 166.734 137.307 166.594 137.614 166.313 cv
137.614 161.867 li
137.289 161.564 136.971 161.413 136.661 161.413 cv
f
143.444 167.356 mo
143.008 167.356 142.706 167.236 142.54 166.997 cv
142.375 166.757 142.289 166.406 142.286 165.945 cv
142.286 161.413 li
141.513 161.413 li
141.513 160.872 li
142.286 160.872 li
142.286 158.893 li
143.098 158.893 li
143.098 160.872 li
144.162 160.872 li
144.162 161.413 li
143.098 161.413 li
143.098 165.869 li
143.098 166.193 143.135 166.416 143.211 166.537 cv
143.287 166.658 143.44 166.719 143.67 166.719 cv
143.819 166.719 143.97 166.704 144.125 166.675 cv
144.125 167.286 li
143.883 167.333 143.657 167.356 143.444 167.356 cv
f
146.635 167.378 mo
146.022 167.378 145.58 167.189 145.31 166.811 cv
145.039 166.432 144.905 165.784 144.905 164.869 cv
144.905 163.252 li
144.905 162.628 144.968 162.133 145.096 161.767 cv
145.224 161.401 145.411 161.145 145.658 160.996 cv
145.906 160.849 146.233 160.775 146.641 160.775 cv
146.91 160.775 147.141 160.81 147.332 160.88 cv
147.524 160.95 147.682 161.051 147.809 161.18 cv
147.934 161.31 148.034 161.485 148.109 161.707 cv
148.182 161.929 148.234 162.175 148.262 162.443 cv
148.291 162.712 148.306 163.035 148.306 163.414 cv
148.301 163.992 li
145.715 163.992 li
145.715 164.95 li
145.715 165.613 145.78 166.082 145.908 166.357 cv
146.035 166.63 146.276 166.767 146.629 166.767 cv
146.91 166.767 147.127 166.678 147.279 166.499 cv
147.43 166.321 147.506 165.997 147.506 165.528 cv
147.506 165.085 li
148.301 165.085 li
148.301 165.442 li
148.301 166.063 148.17 166.54 147.911 166.875 cv
147.652 167.211 147.226 167.378 146.635 167.378 cv
146.635 161.38 mo
146.292 161.38 146.053 161.499 145.918 161.737 cv
145.783 161.976 145.715 162.428 145.715 163.095 cv
145.715 163.527 li
147.506 163.527 li
147.506 162.997 li
147.506 162.773 147.5 162.588 147.489 162.44 cv
147.479 162.293 147.455 162.146 147.422 161.999 cv
147.387 161.854 147.34 161.739 147.279 161.656 cv
147.217 161.573 147.133 161.507 147.024 161.456 cv
146.916 161.405 146.786 161.38 146.635 161.38 cv
f
155.342 167.275 mo
154.574 167.275 li
154.574 162.245 li
154.574 161.895 154.52 161.652 154.412 161.516 cv
154.304 161.379 154.149 161.31 153.947 161.31 cv
153.539 161.317 153.137 161.539 152.74 161.976 cv
152.748 162.083 152.752 162.166 152.752 162.224 cv
152.752 167.275 li
151.994 167.275 li
151.994 162.245 li
151.994 161.895 151.939 161.652 151.826 161.516 cv
151.715 161.379 151.559 161.31 151.356 161.31 cv
150.949 161.317 150.551 161.539 150.16 161.976 cv
150.16 167.275 li
149.399 167.275 li
149.399 160.872 li
150.16 160.872 li
150.16 161.521 li
150.59 161.013 151.093 160.758 151.67 160.758 cv
152.203 160.758 152.539 161.039 152.676 161.602 cv
153.123 161.039 153.65 160.758 154.255 160.758 cv
154.572 160.758 154.833 160.873 155.037 161.102 cv
155.24 161.331 155.342 161.705 155.342 162.224 cv
155.342 167.275 li
f
157.349 169.385 mo
156.537 169.385 li
156.537 160.872 li
157.349 160.872 li
157.349 161.407 li
157.692 160.985 158.101 160.775 158.576 160.775 cv
158.815 160.775 159.023 160.823 159.201 160.921 cv
159.379 161.018 159.52 161.145 159.623 161.299 cv
159.726 161.454 159.809 161.648 159.871 161.878 cv
159.935 162.108 159.977 162.337 159.996 162.562 cv
160.016 162.787 160.026 163.042 160.026 163.327 cv
160.026 164.68 li
160.026 165.019 160.012 165.321 159.983 165.588 cv
159.953 165.855 159.903 166.103 159.831 166.332 cv
159.76 166.561 159.664 166.75 159.547 166.9 cv
159.43 167.049 159.283 167.166 159.107 167.251 cv
158.93 167.336 158.725 167.378 158.491 167.378 cv
158.075 167.378 157.695 167.175 157.349 166.767 cv
157.349 169.385 li
158.344 161.413 mo
158.016 161.413 157.684 161.577 157.349 161.905 cv
157.349 166.27 li
157.645 166.579 157.982 166.734 158.361 166.734 cv
158.504 166.734 158.627 166.705 158.729 166.646 cv
158.828 166.586 158.91 166.505 158.975 166.402 cv
159.037 166.299 159.086 166.159 159.123 165.983 cv
159.158 165.807 159.184 165.618 159.196 165.418 cv
159.209 165.218 159.215 164.975 159.215 164.69 cv
159.215 163.327 li
159.215 162.643 159.157 162.152 159.041 161.856 cv
158.926 161.561 158.694 161.413 158.344 161.413 cv
f
162.746 167.378 mo
162.418 167.378 162.143 167.326 161.918 167.222 cv
161.696 167.117 161.52 166.958 161.392 166.745 cv
161.264 166.532 161.172 166.283 161.118 165.996 cv
161.065 165.71 161.037 165.364 161.037 164.961 cv
161.037 163.187 li
161.037 162.372 161.163 161.766 161.416 161.369 cv
161.668 160.973 162.112 160.775 162.746 160.775 cv
163.385 160.775 163.828 160.972 164.08 161.367 cv
164.33 161.762 164.455 162.368 164.455 163.187 cv
164.455 164.961 li
164.455 165.364 164.428 165.71 164.374 165.996 cv
164.321 166.283 164.229 166.532 164.102 166.745 cv
163.973 166.958 163.797 167.117 163.574 167.222 cv
163.35 167.326 163.074 167.378 162.746 167.378 cv
162.746 161.38 mo
162.61 161.38 162.49 161.398 162.389 161.435 cv
162.288 161.471 162.205 161.529 162.141 161.61 cv
162.076 161.692 162.024 161.777 161.984 161.87 cv
161.944 161.962 161.914 162.082 161.895 162.23 cv
161.875 162.377 161.862 162.517 161.857 162.648 cv
161.852 162.78 161.848 162.945 161.848 163.144 cv
161.848 165.004 li
161.848 165.202 161.852 165.367 161.857 165.499 cv
161.862 165.631 161.875 165.771 161.895 165.918 cv
161.914 166.065 161.944 166.186 161.984 166.277 cv
162.024 166.369 162.076 166.456 162.141 166.537 cv
162.205 166.618 162.288 166.677 162.389 166.713 cv
162.49 166.749 162.61 166.767 162.746 166.767 cv
162.908 166.767 163.045 166.737 163.158 166.678 cv
163.27 166.618 163.357 166.544 163.42 166.453 cv
163.483 166.363 163.53 166.235 163.563 166.069 cv
163.596 165.903 163.616 165.745 163.625 165.594 cv
163.634 165.442 163.639 165.245 163.639 165.004 cv
163.639 163.144 li
163.639 162.902 163.634 162.705 163.625 162.554 cv
163.616 162.402 163.596 162.244 163.563 162.078 cv
163.53 161.912 163.483 161.784 163.42 161.694 cv
163.357 161.604 163.27 161.529 163.158 161.47 cv
163.045 161.41 162.908 161.38 162.746 161.38 cv
f
166.446 167.275 mo
165.635 167.275 li
165.635 160.872 li
166.446 160.872 li
166.446 161.753 li
166.641 161.429 166.868 161.19 167.129 161.034 cv
167.391 160.879 167.654 160.802 167.922 160.802 cv
168.063 160.807 li
168.063 161.684 li
167.948 161.637 167.818 161.613 167.673 161.613 cv
167.155 161.613 166.744 161.861 166.446 162.359 cv
166.446 167.275 li
f
537.66 6.10352e-05 mo
534.232 17.0655 539.512 35.4561 553.23 48.1348 cv
566.285 60.2012 583.897 64.2422 600 60.502 cv
600 6.10352e-05 li
537.66 6.10352e-05 li
cp
.147219 .0154116 0 0 cmyk
f
411.761 362.735 mo
409.196 362.735 406.747 362.217 404.917 361.161 cv
262.152 278.734 li
258.113 276.403 258.619 272.33 263.284 269.638 cv
270.611 265.409 li
405.498 343.285 li
405.514 343.294 405.53 343.303 405.545 343.312 cv
407.444 344.393 409.972 344.923 412.619 344.923 cv
415.841 344.923 419.239 344.138 421.894 342.606 cv
511.436 290.926 li
519.018 295.304 li
523.057 297.635 522.55 301.708 517.887 304.4 cv
420.674 360.508 li
418.124 361.98 414.858 362.735 411.761 362.735 cv
.477638 .319829 .131411 0 cmyk
f
559.02 136.022 mo
410.465 50.2529 li
408.74 49.2569 406.987 49.1036 405.431 49.6357 cv
405.441 49.6201 li
405.17 49.7227 li
405.105 49.7472 li
399.737 51.8018 li
404.555 54.1602 li
404.532 54.2491 404.505 54.3322 404.486 54.4229 cv
380.288 164.567 li
379.077 170.079 381.502 176.515 385.704 178.94 cv
530.687 262.646 li
530.17 268.79 li
536.037 266.516 li
538.008 265.594 539.587 263.509 540.239 260.539 cv
564.437 150.395 li
565.648 144.883 563.222 138.447 559.02 136.022 cv
1 .866484 .240818 .0951247 cmyk
f
559.02 136.022 mo
410.465 50.2529 li
408.74 49.2569 406.987 49.1036 405.431 49.6357 cv
405.441 49.6201 li
405.17 49.7227 li
405.105 49.7472 li
399.737 51.8018 li
404.555 54.1602 li
404.532 54.2491 404.505 54.3322 404.486 54.4229 cv
388.538 127.015 li
461.224 183.644 li
563.712 141.942 li
562.727 139.389 561.091 137.217 559.02 136.022 cv
.827268 .57586 .071809 .00112917 cmyk
f
553.418 152.952 mo
564.727 148.138 li
564.934 143.758 563.121 139.233 560.146 136.814 cv
542.245 144.344 li
553.418 152.952 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
525.009 268.206 mo
376.454 182.438 li
372.251 180.012 369.826 173.576 371.037 168.065 cv
395.235 57.9199 li
396.445 52.4082 400.834 49.9063 405.036 52.3321 cv
553.591 138.101 li
557.793 140.527 560.219 146.962 559.008 152.475 cv
534.811 262.618 li
533.6 268.131 529.211 270.633 525.009 268.206 cv
.147219 .0154116 0 0 cmyk
f
555.018 137.578 mo
406.462 51.8106 li
404.427 50.6358 402.354 50.6368 400.614 51.5567 cv
402.011 51.251 403.532 51.4639 405.036 52.3331 cv
553.591 138.1 li
557.793 140.526 560.219 146.963 559.008 152.475 cv
534.811 262.618 li
534.187 265.46 532.71 267.482 530.858 268.459 cv
533.365 267.911 535.459 265.637 536.237 262.097 cv
560.434 151.953 li
561.645 146.44 559.22 140.005 555.018 137.578 cv
cp
0 0 0 0 cmyk
f
521.788 260.013 mo
382.075 179.39 li
378.23 177.169 376.011 171.28 377.119 166.236 cv
399.261 65.4454 li
400.369 60.4014 404.385 58.1123 408.231 60.3321 cv
547.944 140.956 li
551.789 143.176 554.008 149.066 552.901 154.109 cv
530.758 254.9 li
529.65 259.944 525.634 262.233 521.788 260.013 cv
f
521.788 260.013 mo
382.075 179.39 li
378.23 177.169 376.011 171.28 377.119 166.236 cv
399.261 65.4454 li
400.369 60.4014 404.385 58.1123 408.231 60.3321 cv
547.944 140.956 li
551.789 143.176 554.008 149.066 552.901 154.109 cv
530.758 254.9 li
529.65 259.944 525.634 262.233 521.788 260.013 cv
1 .866484 .240818 .0951247 cmyk
f
523.006 259.518 mo
383.293 178.894 li
379.448 176.674 377.229 170.784 378.336 165.741 cv
400.479 64.9493 li
401.04 62.3965 402.348 60.5587 403.999 59.6436 cv
401.784 60.2139 399.954 62.2901 399.261 65.4454 cv
377.119 166.235 li
376.011 171.28 378.23 177.169 382.075 179.39 cv
521.788 260.014 li
523.688 261.11 525.626 261.099 527.238 260.206 cv
525.91 260.548 524.447 260.35 523.006 259.518 cv
cp
.657221 .328313 0 0 cmyk
f
527.06 271.941 mo
506.753 269.26 li
375.671 193.58 li
371.469 191.153 364.128 191.458 359.276 194.26 cv
266.392 247.866 li
254.113 246.245 li
254.113 253.212 li
254.124 253.214 li
254.044 254.824 254.961 256.372 256.944 257.518 cv
405.498 343.285 li
409.701 345.712 417.041 345.407 421.894 342.606 cv
523.049 284.224 li
525.779 282.647 527.14 280.617 527.06 278.71 cv
527.06 271.941 li
1 .866484 .240818 .0951247 cmyk
f
428.57 224.12 mo
419.256 218.743 li
316.867 218.743 li
266.392 247.866 li
254.113 246.245 li
254.113 253.212 li
254.124 253.214 li
254.044 254.824 254.961 256.372 256.944 257.518 cv
405.498 343.285 li
407.719 344.567 410.817 345.079 413.96 344.871 cv
428.57 224.12 li
.827268 .57586 .071809 .00112917 cmyk
f
259.562 246.965 mo
254.113 246.245 li
254.113 253.212 li
254.124 253.214 li
254.044 254.824 254.961 256.372 256.944 257.518 cv
259.562 259.028 li
259.562 246.965 li
cp
.657221 .328313 0 0 cmyk
f
406.994 343.981 mo
410.978 345.491 416.673 345.162 420.925 343.115 cv
420.925 327.575 li
406.994 327.575 li
406.994 343.981 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
405.498 336.326 mo
256.944 250.559 li
252.741 248.132 253.269 243.895 258.121 241.093 cv
359.276 182.71 li
364.128 179.909 371.469 179.605 375.671 182.03 cv
524.226 267.799 li
528.428 270.226 527.902 274.463 523.049 277.265 cv
421.894 335.647 li
417.041 338.448 409.701 338.753 405.498 336.326 cv
.147219 .0154116 0 0 cmyk
f
523.049 274.72 mo
421.894 333.103 li
417.041 335.903 409.701 336.208 405.498 333.782 cv
256.944 248.014 li
255.566 247.219 254.706 246.227 254.331 245.156 cv
253.674 247.144 254.512 249.154 256.944 250.559 cv
405.498 336.326 li
409.701 338.753 417.041 338.448 421.894 335.647 cv
523.049 277.265 li
526.311 275.382 527.608 272.852 526.838 270.656 cv
526.36 272.105 525.093 273.54 523.049 274.72 cv
0 0 0 0 cmyk
f
320.126 222.164 mo
313.405 218.283 li
312.865 217.972 312.933 217.428 313.556 217.068 cv
321.49 212.487 li
322.113 212.128 323.056 212.089 323.595 212.4 cv
330.317 216.28 li
330.857 216.593 330.788 217.137 330.165 217.496 cv
322.232 222.077 li
321.609 222.437 320.666 222.476 320.126 222.164 cv
cp
.657221 .328313 0 0 cmyk
f
330.506 228.157 mo
323.784 224.276 li
323.245 223.965 323.313 223.421 323.936 223.061 cv
331.869 218.481 li
332.492 218.12 333.436 218.081 333.975 218.393 cv
340.697 222.273 li
341.237 222.585 341.168 223.13 340.545 223.489 cv
332.612 228.069 li
331.989 228.43 331.046 228.469 330.506 228.157 cv
cp
f
340.886 234.15 mo
334.165 230.27 li
333.625 229.958 333.693 229.413 334.316 229.054 cv
342.249 224.474 li
342.873 224.113 343.816 224.074 344.355 224.386 cv
351.076 228.267 li
351.616 228.578 351.549 229.122 350.926 229.482 cv
342.991 234.063 li
342.368 234.423 341.426 234.462 340.886 234.15 cv
cp
f
355.242 229.201 mo
348.521 225.32 li
347.982 225.009 348.049 224.464 348.672 224.105 cv
355.332 220.26 li
355.955 219.899 356.898 219.86 357.438 220.172 cv
364.159 224.053 li
364.698 224.364 364.631 224.908 364.008 225.269 cv
357.348 229.113 li
356.725 229.474 355.782 229.513 355.242 229.201 cv
cp
f
365.622 235.193 mo
358.901 231.314 li
358.362 231.002 358.429 230.457 359.052 230.098 cv
365.712 226.252 li
366.335 225.893 367.278 225.854 367.818 226.165 cv
374.539 230.046 li
375.078 230.357 375.011 230.901 374.388 231.262 cv
367.728 235.107 li
367.105 235.466 366.162 235.505 365.622 235.193 cv
cp
f
376.002 241.187 mo
369.281 237.306 li
368.741 236.994 368.809 236.45 369.432 236.091 cv
376.092 232.245 li
376.715 231.886 377.657 231.847 378.198 232.158 cv
384.919 236.039 li
385.459 236.351 385.391 236.895 384.768 237.254 cv
378.108 241.1 li
377.485 241.459 376.542 241.498 376.002 241.187 cv
cp
f
386.383 247.18 mo
379.661 243.299 li
379.121 242.987 379.189 242.443 379.812 242.083 cv
386.472 238.238 li
387.095 237.878 388.038 237.839 388.577 238.151 cv
395.299 242.031 li
395.839 242.343 395.771 242.888 395.148 243.247 cv
388.489 247.092 li
387.865 247.452 386.922 247.491 386.383 247.18 cv
cp
f
396.763 253.173 mo
390.041 249.292 li
389.501 248.981 389.57 248.436 390.193 248.076 cv
396.852 244.232 li
397.475 243.871 398.418 243.832 398.957 244.144 cv
405.679 248.024 li
406.219 248.336 406.152 248.88 405.528 249.24 cv
398.868 253.085 li
398.245 253.445 397.302 253.484 396.763 253.173 cv
cp
f
407.143 259.165 mo
400.421 255.285 li
399.881 254.973 399.949 254.429 400.573 254.069 cv
407.233 250.224 li
407.856 249.864 408.798 249.825 409.338 250.137 cv
416.059 254.018 li
416.599 254.329 416.531 254.873 415.908 255.233 cv
409.248 259.078 li
408.625 259.438 407.682 259.477 407.143 259.165 cv
cp
f
417.523 265.158 mo
410.801 261.277 li
410.262 260.966 410.329 260.422 410.952 260.063 cv
417.613 256.217 li
418.236 255.857 419.178 255.818 419.718 256.13 cv
426.44 260.011 li
426.979 260.322 426.911 260.866 426.288 261.226 cv
419.628 265.071 li
419.005 265.431 418.063 265.47 417.523 265.158 cv
cp
f
427.903 271.151 mo
421.181 267.271 li
420.642 266.959 420.709 266.415 421.332 266.055 cv
427.992 262.21 li
428.615 261.85 429.558 261.811 430.098 262.123 cv
436.82 266.003 li
437.359 266.315 437.291 266.859 436.668 267.219 cv
430.008 271.064 li
429.385 271.424 428.443 271.463 427.903 271.151 cv
cp
f
438.282 277.145 mo
431.561 273.264 li
431.022 272.952 431.089 272.407 431.712 272.048 cv
438.372 268.203 li
438.995 267.843 439.938 267.804 440.478 268.115 cv
447.199 271.996 li
447.739 272.308 447.671 272.852 447.048 273.212 cv
440.388 277.057 li
439.765 277.417 438.823 277.456 438.282 277.145 cv
cp
f
448.662 283.137 mo
441.942 279.257 li
441.402 278.944 441.469 278.4 442.092 278.041 cv
448.752 274.195 li
449.375 273.836 450.319 273.797 450.858 274.108 cv
457.579 277.989 li
458.119 278.301 458.051 278.845 457.428 279.205 cv
450.768 283.05 li
450.145 283.409 449.202 283.448 448.662 283.137 cv
cp
f
370.536 226.363 mo
363.816 222.482 li
363.276 222.171 363.343 221.627 363.966 221.268 cv
370.626 217.422 li
371.249 217.063 372.193 217.023 372.732 217.335 cv
379.453 221.216 li
379.993 221.527 379.925 222.071 379.302 222.432 cv
372.642 226.276 li
372.019 226.636 371.076 226.675 370.536 226.363 cv
cp
f
360.002 220.281 mo
353.281 216.4 li
352.74 216.089 352.808 215.545 353.432 215.185 cv
360.091 211.34 li
360.714 210.981 361.657 210.941 362.197 211.253 cv
368.918 215.133 li
369.458 215.444 369.391 215.989 368.767 216.349 cv
362.108 220.194 li
361.485 220.554 360.541 220.593 360.002 220.281 cv
cp
f
349.449 214.189 mo
334.973 205.831 li
334.434 205.52 334.501 204.975 335.124 204.615 cv
341.784 200.771 li
342.407 200.41 343.35 200.371 343.89 200.683 cv
358.366 209.041 li
358.906 209.353 358.838 209.897 358.215 210.257 cv
351.555 214.102 li
350.932 214.461 349.99 214.5 349.449 214.189 cv
cp
f
356.825 206.78 mo
345.077 199.997 li
344.538 199.686 344.606 199.142 345.229 198.781 cv
351.889 194.937 li
352.512 194.577 353.454 194.538 353.994 194.85 cv
365.742 201.632 li
366.281 201.943 366.214 202.487 365.591 202.848 cv
358.931 206.692 li
358.308 207.053 357.365 207.092 356.825 206.78 cv
cp
f
380.917 232.357 mo
374.196 228.476 li
373.656 228.164 373.723 227.62 374.347 227.26 cv
381.006 223.415 li
381.629 223.056 382.573 223.017 383.112 223.328 cv
389.833 227.208 li
390.373 227.521 390.305 228.065 389.682 228.424 cv
383.023 232.27 li
382.4 232.629 381.456 232.668 380.917 232.357 cv
cp
f
391.297 238.35 mo
384.575 234.469 li
384.035 234.157 384.104 233.613 384.727 233.253 cv
391.386 229.408 li
392.01 229.048 392.952 229.009 393.491 229.32 cv
400.213 233.201 li
400.753 233.513 400.686 234.058 400.063 234.417 cv
393.403 238.262 li
392.78 238.622 391.836 238.661 391.297 238.35 cv
cp
f
401.677 244.343 mo
394.955 240.462 li
394.415 240.15 394.484 239.606 395.107 239.246 cv
401.767 235.401 li
402.39 235.041 403.332 235.002 403.872 235.314 cv
410.593 239.194 li
411.133 239.506 411.066 240.05 410.443 240.41 cv
403.782 244.255 li
403.159 244.615 402.217 244.654 401.677 244.343 cv
cp
f
412.057 250.335 mo
405.335 246.454 li
404.796 246.143 404.864 245.599 405.487 245.239 cv
412.147 241.394 li
412.77 241.034 413.712 240.995 414.252 241.307 cv
420.974 245.188 li
421.513 245.499 421.446 246.043 420.823 246.402 cv
414.162 250.248 li
413.539 250.607 412.597 250.647 412.057 250.335 cv
cp
f
422.437 256.328 mo
415.715 252.447 li
415.176 252.136 415.243 251.592 415.866 251.232 cv
422.527 247.387 li
423.15 247.027 424.092 246.988 424.632 247.3 cv
431.354 251.18 li
431.893 251.492 431.825 252.036 431.202 252.396 cv
424.542 256.241 li
423.919 256.601 422.977 256.64 422.437 256.328 cv
cp
f
432.817 262.321 mo
426.096 258.44 li
425.556 258.129 425.623 257.585 426.246 257.225 cv
432.906 253.38 li
433.53 253.02 434.472 252.981 435.012 253.292 cv
441.734 257.173 li
442.274 257.484 442.205 258.029 441.582 258.389 cv
434.922 262.233 li
434.299 262.594 433.357 262.633 432.817 262.321 cv
cp
f
443.198 268.314 mo
436.476 264.434 li
435.936 264.122 436.003 263.577 436.626 263.218 cv
443.286 259.373 li
443.909 259.013 444.853 258.974 445.392 259.285 cv
452.114 263.166 li
452.654 263.478 452.585 264.022 451.962 264.382 cv
445.303 268.227 li
444.679 268.587 443.737 268.626 443.198 268.314 cv
cp
f
453.577 274.307 mo
446.856 270.426 li
446.316 270.114 446.384 269.57 447.007 269.211 cv
453.666 265.365 li
454.29 265.006 455.233 264.967 455.772 265.278 cv
462.493 269.159 li
463.033 269.471 462.966 270.015 462.342 270.374 cv
455.683 274.22 li
455.06 274.579 454.116 274.618 453.577 274.307 cv
cp
f
463.957 280.3 mo
457.236 276.419 li
456.696 276.107 456.764 275.564 457.387 275.203 cv
464.047 271.358 li
464.67 270.999 465.613 270.96 466.153 271.272 cv
472.873 275.151 li
473.413 275.463 473.346 276.008 472.723 276.367 cv
466.063 280.213 li
465.44 280.572 464.496 280.611 463.957 280.3 cv
cp
f
482.41 290.954 mo
467.744 282.486 li
467.205 282.175 467.273 281.631 467.896 281.271 cv
474.556 277.426 li
475.179 277.066 476.121 277.027 476.661 277.339 cv
491.327 285.806 li
491.866 286.117 491.799 286.662 491.176 287.022 cv
484.516 290.866 li
483.893 291.227 482.95 291.266 482.41 290.954 cv
cp
f
502.619 279.286 mo
490.24 272.14 li
489.701 271.828 489.769 271.284 490.392 270.924 cv
497.052 267.079 li
497.675 266.719 498.617 266.68 499.157 266.992 cv
511.535 274.139 li
512.075 274.45 512.008 274.994 511.385 275.355 cv
504.725 279.199 li
504.102 279.559 503.158 279.598 502.619 279.286 cv
cp
f
399.095 231.184 mo
392.373 227.303 li
391.833 226.991 391.901 226.447 392.524 226.088 cv
399.184 222.242 li
399.807 221.883 400.75 221.844 401.289 222.155 cv
408.011 226.036 li
408.551 226.348 408.483 226.892 407.86 227.252 cv
401.2 231.097 li
400.576 231.456 399.634 231.495 399.095 231.184 cv
cp
f
388.456 225.042 mo
381.735 221.161 li
381.196 220.85 381.263 220.306 381.886 219.945 cv
388.546 216.101 li
389.169 215.741 390.112 215.701 390.652 216.014 cv
397.373 219.894 li
397.912 220.205 397.845 220.75 397.222 221.109 cv
390.562 224.955 li
389.939 225.315 388.996 225.354 388.456 225.042 cv
cp
f
377.818 218.899 mo
371.097 215.02 li
370.557 214.708 370.624 214.163 371.247 213.804 cv
377.907 209.959 li
378.531 209.599 379.474 209.56 380.013 209.871 cv
386.735 213.752 li
387.275 214.064 387.206 214.607 386.583 214.968 cv
379.923 218.813 li
379.3 219.173 378.358 219.212 377.818 218.899 cv
cp
f
367.18 212.758 mo
360.458 208.877 li
359.918 208.565 359.987 208.022 360.61 207.662 cv
367.27 203.816 li
367.893 203.457 368.835 203.418 369.375 203.73 cv
376.096 207.61 li
376.636 207.922 376.569 208.466 375.946 208.825 cv
369.285 212.671 li
368.662 213.03 367.719 213.069 367.18 212.758 cv
cp
f
409.475 237.177 mo
402.753 233.296 li
402.213 232.984 402.281 232.44 402.905 232.08 cv
409.564 228.235 li
410.188 227.876 411.13 227.837 411.669 228.148 cv
418.391 232.029 li
418.931 232.341 418.864 232.885 418.24 233.244 cv
411.58 237.09 li
410.957 237.449 410.014 237.488 409.475 237.177 cv
cp
f
419.855 243.17 mo
413.133 239.289 li
412.593 238.978 412.661 238.434 413.284 238.073 cv
419.945 234.229 li
420.568 233.868 421.51 233.829 422.05 234.141 cv
428.771 238.022 li
429.311 238.333 429.243 238.878 428.62 239.237 cv
421.96 243.082 li
421.337 243.442 420.394 243.482 419.855 243.17 cv
cp
f
430.235 249.163 mo
423.513 245.282 li
422.974 244.971 423.041 244.426 423.664 244.066 cv
430.324 240.222 li
430.948 239.861 431.89 239.822 432.43 240.134 cv
439.152 244.015 li
439.691 244.326 439.623 244.87 439 245.231 cv
432.34 249.075 li
431.717 249.436 430.775 249.475 430.235 249.163 cv
cp
f
440.615 255.155 mo
433.893 251.274 li
433.354 250.963 433.421 250.419 434.044 250.06 cv
440.704 246.214 li
441.327 245.855 442.27 245.815 442.81 246.127 cv
449.531 250.008 li
450.071 250.319 450.003 250.863 449.38 251.224 cv
442.72 255.068 li
442.097 255.428 441.155 255.467 440.615 255.155 cv
cp
f
450.994 261.148 mo
444.273 257.268 li
443.734 256.956 443.801 256.412 444.424 256.052 cv
451.084 252.207 li
451.707 251.848 452.65 251.809 453.19 252.12 cv
459.911 256 li
460.451 256.313 460.383 256.857 459.76 257.216 cv
453.1 261.062 li
452.477 261.421 451.534 261.46 450.994 261.148 cv
cp
f
461.374 267.142 mo
454.654 263.261 li
454.114 262.949 454.181 262.405 454.804 262.045 cv
461.464 258.2 li
462.087 257.84 463.031 257.801 463.57 258.112 cv
470.291 261.993 li
470.831 262.305 470.763 262.85 470.14 263.209 cv
463.48 267.054 li
462.857 267.414 461.914 267.453 461.374 267.142 cv
cp
f
471.755 273.135 mo
465.033 269.254 li
464.493 268.942 464.561 268.398 465.185 268.038 cv
471.844 264.193 li
472.467 263.833 473.41 263.794 473.949 264.106 cv
480.671 267.986 li
481.211 268.298 481.144 268.842 480.52 269.202 cv
473.861 273.047 li
473.238 273.407 472.294 273.446 471.755 273.135 cv
cp
f
482.135 279.127 mo
475.413 275.246 li
474.873 274.935 474.942 274.391 475.565 274.031 cv
482.224 270.186 li
482.848 269.826 483.79 269.787 484.33 270.099 cv
491.051 273.98 li
491.591 274.291 491.524 274.835 490.901 275.195 cv
484.24 279.04 li
483.617 279.399 482.674 279.439 482.135 279.127 cv
cp
f
492.515 285.12 mo
485.793 281.239 li
485.253 280.928 485.322 280.384 485.945 280.023 cv
492.605 276.179 li
493.228 275.819 494.17 275.78 494.71 276.092 cv
501.432 279.972 li
501.971 280.284 501.904 280.828 501.281 281.188 cv
494.62 285.033 li
493.997 285.393 493.055 285.432 492.515 285.12 cv
cp
f
393.629 216.36 mo
386.907 212.481 li
386.367 212.169 386.435 211.624 387.059 211.265 cv
393.718 207.419 li
394.341 207.06 395.284 207.021 395.823 207.332 cv
402.545 211.213 li
403.085 211.524 403.018 212.068 402.394 212.429 cv
395.735 216.273 li
395.112 216.633 394.168 216.673 393.629 216.36 cv
cp
f
383.3 210.398 mo
376.579 206.517 li
376.039 206.205 376.107 205.661 376.73 205.302 cv
383.39 201.456 li
384.013 201.097 384.955 201.058 385.495 201.369 cv
392.217 205.25 li
392.757 205.562 392.689 206.106 392.066 206.465 cv
385.406 210.311 li
384.782 210.67 383.84 210.709 383.3 210.398 cv
cp
f
372.972 204.435 mo
366.25 200.554 li
365.711 200.242 365.779 199.698 366.402 199.338 cv
373.062 195.493 li
373.685 195.134 374.627 195.095 375.167 195.406 cv
381.889 199.286 li
382.428 199.599 382.361 200.143 381.738 200.502 cv
375.077 204.348 li
374.454 204.707 373.512 204.746 372.972 204.435 cv
cp
f
362.644 198.472 mo
355.922 194.591 li
355.382 194.279 355.45 193.735 356.073 193.375 cv
362.734 189.53 li
363.357 189.17 364.299 189.131 364.839 189.442 cv
371.56 193.323 li
372.1 193.635 372.032 194.18 371.409 194.539 cv
364.749 198.384 li
364.126 198.744 363.183 198.783 362.644 198.472 cv
cp
f
373.264 192.34 mo
366.543 188.459 li
366.003 188.148 366.071 187.604 366.694 187.243 cv
368.896 185.973 li
369.519 185.612 370.461 185.573 371.001 185.885 cv
377.723 189.766 li
378.262 190.077 378.195 190.621 377.572 190.982 cv
375.369 192.252 li
374.746 192.612 373.804 192.651 373.264 192.34 cv
cp
f
386.742 200.121 mo
380.022 196.241 li
379.482 195.93 379.549 195.385 380.172 195.025 cv
382.374 193.754 li
382.997 193.395 383.94 193.356 384.48 193.667 cv
391.201 197.548 li
391.74 197.859 391.673 198.403 391.05 198.763 cv
388.848 200.034 li
388.225 200.394 387.282 200.433 386.742 200.121 cv
cp
f
397.029 206.06 mo
390.307 202.179 li
389.767 201.867 389.834 201.323 390.458 200.964 cv
392.659 199.692 li
393.282 199.333 394.225 199.294 394.765 199.606 cv
401.487 203.485 li
402.027 203.797 401.958 204.342 401.335 204.701 cv
399.134 205.973 li
398.511 206.332 397.568 206.371 397.029 206.06 cv
cp
f
407.314 211.998 mo
400.592 208.117 li
400.052 207.806 400.12 207.262 400.743 206.901 cv
402.945 205.631 li
403.568 205.271 404.511 205.232 405.05 205.543 cv
411.772 209.424 li
412.312 209.735 412.243 210.28 411.62 210.64 cv
409.419 211.911 li
408.796 212.271 407.853 212.31 407.314 211.998 cv
cp
f
417.599 217.937 mo
410.877 214.056 li
410.338 213.744 410.406 213.2 411.029 212.84 cv
413.23 211.568 li
413.854 211.209 414.796 211.17 415.336 211.482 cv
422.057 215.362 li
422.597 215.674 422.53 216.218 421.906 216.578 cv
419.704 217.849 li
419.081 218.209 418.139 218.248 417.599 217.937 cv
cp
f
475.021 251.089 mo
468.299 247.208 li
467.759 246.897 467.827 246.353 468.45 245.992 cv
470.652 244.721 li
471.275 244.361 472.218 244.322 472.757 244.634 cv
479.479 248.515 li
480.019 248.826 479.95 249.37 479.327 249.731 cv
477.126 251.001 li
476.503 251.361 475.56 251.4 475.021 251.089 cv
cp
f
485.306 257.026 mo
478.584 253.147 li
478.044 252.835 478.113 252.29 478.736 251.931 cv
480.937 250.659 li
481.56 250.3 482.503 250.261 483.042 250.572 cv
489.764 254.453 li
490.304 254.765 490.237 255.309 489.613 255.668 cv
487.411 256.94 li
486.788 257.3 485.846 257.339 485.306 257.026 cv
cp
f
495.591 262.965 mo
488.869 259.084 li
488.33 258.773 488.398 258.229 489.021 257.869 cv
491.223 256.598 li
491.846 256.238 492.788 256.199 493.328 256.511 cv
500.049 260.391 li
500.589 260.703 500.522 261.247 499.899 261.607 cv
497.697 262.878 li
497.073 263.237 496.131 263.276 495.591 262.965 cv
cp
f
505.876 268.903 mo
499.156 265.023 li
498.615 264.711 498.683 264.167 499.306 263.807 cv
501.508 262.536 li
502.131 262.176 503.073 262.137 503.614 262.448 cv
510.335 266.329 li
510.874 266.641 510.807 267.186 510.184 267.545 cv
507.982 268.816 li
507.359 269.176 506.416 269.215 505.876 268.903 cv
cp
f
404.009 222.354 mo
397.287 218.473 li
396.747 218.161 396.816 217.617 397.439 217.258 cv
404.098 213.412 li
404.722 213.053 405.664 213.014 406.204 213.325 cv
412.925 217.206 li
413.465 217.518 413.398 218.062 412.775 218.421 cv
406.115 222.267 li
405.491 222.626 404.548 222.665 404.009 222.354 cv
cp
f
414.389 228.347 mo
407.667 224.466 li
407.127 224.154 407.196 223.61 407.819 223.25 cv
414.479 219.405 li
415.102 219.046 416.044 219.007 416.584 219.318 cv
423.306 223.198 li
423.845 223.51 423.778 224.055 423.155 224.414 cv
416.494 228.26 li
415.871 228.619 414.929 228.658 414.389 228.347 cv
cp
f
424.769 234.34 mo
418.047 230.459 li
417.508 230.148 417.575 229.604 418.198 229.243 cv
424.859 225.398 li
425.482 225.038 426.424 224.999 426.964 225.311 cv
433.686 229.191 li
434.225 229.503 434.157 230.048 433.534 230.407 cv
426.874 234.252 li
426.251 234.612 425.309 234.651 424.769 234.34 cv
cp
f
435.149 240.332 mo
428.427 236.452 li
427.888 236.141 427.955 235.596 428.578 235.236 cv
435.239 231.391 li
435.862 231.031 436.804 230.992 437.344 231.304 cv
444.066 235.185 li
444.605 235.496 444.537 236.04 443.914 236.4 cv
437.254 240.245 li
436.631 240.605 435.689 240.644 435.149 240.332 cv
cp
f
445.529 246.325 mo
438.808 242.444 li
438.268 242.133 438.335 241.589 438.958 241.23 cv
445.618 237.384 li
446.241 237.024 447.185 236.985 447.724 237.297 cv
454.446 241.178 li
454.986 241.489 454.917 242.033 454.294 242.393 cv
447.634 246.238 li
447.011 246.598 446.069 246.637 445.529 246.325 cv
cp
f
455.909 252.318 mo
449.188 248.438 li
448.648 248.126 448.715 247.582 449.339 247.222 cv
455.998 243.377 li
456.621 243.018 457.565 242.979 458.104 243.29 cv
464.825 247.17 li
465.365 247.482 465.297 248.026 464.674 248.386 cv
458.015 252.232 li
457.391 252.591 456.448 252.63 455.909 252.318 cv
cp
f
466.289 258.312 mo
459.568 254.431 li
459.028 254.119 459.096 253.574 459.719 253.215 cv
466.378 249.37 li
467.002 249.01 467.945 248.971 468.484 249.282 cv
475.205 253.163 li
475.745 253.475 475.678 254.019 475.054 254.379 cv
468.395 258.224 li
467.772 258.584 466.828 258.623 466.289 258.312 cv
cp
f
476.669 264.304 mo
469.948 260.424 li
469.407 260.112 469.476 259.567 470.099 259.208 cv
476.759 255.362 li
477.382 255.003 478.324 254.964 478.865 255.275 cv
485.585 259.156 li
486.125 259.468 486.058 260.012 485.435 260.372 cv
478.775 264.217 li
478.152 264.576 477.208 264.615 476.669 264.304 cv
cp
f
487.049 270.297 mo
480.327 266.416 li
479.788 266.105 479.856 265.561 480.479 265.201 cv
487.139 261.356 li
487.762 260.996 488.704 260.957 489.244 261.269 cv
495.966 265.149 li
496.505 265.461 496.438 266.005 495.815 266.364 cv
489.155 270.21 li
488.531 270.569 487.589 270.608 487.049 270.297 cv
cp
f
344.664 223.094 mo
324.869 211.665 li
324.329 211.354 324.397 210.809 325.02 210.449 cv
331.68 206.604 li
332.303 206.244 333.245 206.205 333.785 206.517 cv
353.581 217.945 li
354.12 218.257 354.053 218.802 353.43 219.161 cv
346.77 223.006 li
346.147 223.366 345.204 223.405 344.664 223.094 cv
cp
f
472.186 296.718 mo
452.39 285.289 li
451.851 284.978 451.918 284.434 452.541 284.073 cv
459.201 280.229 li
459.824 279.868 460.767 279.829 461.307 280.141 cv
481.102 291.57 li
481.642 291.882 481.574 292.426 480.951 292.785 cv
474.291 296.631 li
473.668 296.99 472.726 297.029 472.186 296.718 cv
cp
f
430.674 285.989 mo
423.953 282.108 li
423.413 281.797 423.481 281.253 424.104 280.893 cv
432.038 276.313 li
432.661 275.952 433.604 275.913 434.144 276.226 cv
440.865 280.106 li
441.405 280.417 441.337 280.962 440.714 281.321 cv
432.78 285.902 li
432.156 286.262 431.214 286.301 430.674 285.989 cv
cp
f
355.294 242.469 mo
344.545 236.263 li
344.005 235.95 344.073 235.406 344.696 235.047 cv
352.63 230.466 li
353.253 230.107 354.196 230.067 354.736 230.379 cv
365.485 236.585 li
366.025 236.897 365.957 237.441 365.333 237.801 cv
357.4 242.381 li
356.777 242.741 355.834 242.78 355.294 242.469 cv
cp
f
420.673 280.215 mo
409.924 274.009 li
409.384 273.697 409.451 273.153 410.074 272.793 cv
418.008 268.213 li
418.632 267.853 419.574 267.814 420.114 268.125 cv
430.864 274.331 li
431.404 274.644 431.335 275.188 430.712 275.547 cv
422.779 280.128 li
422.156 280.487 421.213 280.526 420.673 280.215 cv
cp
f
370.271 251.115 mo
359.521 244.909 li
358.982 244.597 359.049 244.053 359.672 243.693 cv
367.606 239.112 li
368.229 238.753 369.172 238.714 369.711 239.025 cv
380.461 245.232 li
381 245.543 380.933 246.088 380.31 246.447 cv
372.376 251.027 li
371.753 251.388 370.81 251.427 370.271 251.115 cv
cp
f
369.784 239.067 mo
416.521 266.051 li
417.1 266.385 417.1 266.928 416.521 267.263 cv
408.43 271.934 li
407.85 272.269 406.909 272.269 406.33 271.934 cv
359.594 244.951 li
369.784 239.067 li
cp
f
459.685 296.856 mo
467.172 301.178 li
467.615 301.433 467.559 301.879 467.048 302.174 cv
463.803 304.048 li
463.292 304.343 462.519 304.375 462.076 304.119 cv
454.59 299.797 li
454.148 299.541 454.203 299.096 454.714 298.801 cv
457.959 296.927 li
458.47 296.632 459.242 296.6 459.685 296.856 cv
cp
f
449.219 290.813 mo
456.706 295.135 li
457.149 295.391 457.093 295.837 456.582 296.132 cv
453.336 298.005 li
452.825 298.3 452.053 298.332 451.611 298.077 cv
444.123 293.754 li
443.681 293.499 443.737 293.053 444.247 292.758 cv
447.493 290.884 li
448.004 290.589 448.777 290.557 449.219 290.813 cv
cp
f
438.839 284.819 mo
446.326 289.143 li
446.768 289.398 446.713 289.844 446.202 290.139 cv
442.956 292.013 li
442.446 292.308 441.673 292.339 441.231 292.084 cv
433.743 287.761 li
433.301 287.506 433.357 287.06 433.867 286.765 cv
437.113 284.891 li
437.624 284.596 438.397 284.565 438.839 284.819 cv
cp
f
454.951 287.503 mo
462.438 291.825 li
462.88 292.081 462.824 292.527 462.314 292.822 cv
459.069 294.696 li
458.558 294.99 457.785 295.023 457.343 294.768 cv
449.856 290.444 li
449.413 290.19 449.469 289.743 449.98 289.448 cv
453.225 287.574 li
453.736 287.279 454.509 287.248 454.951 287.503 cv
cp
f
495.953 170.565 mo
440.041 138.284 li
440.761 134.649 li
496.672 166.931 li
495.953 170.565 li
cp
.147219 .0154116 0 0 cmyk
f
475.928 176.698 mo
436.899 154.165 li
437.618 150.53 li
476.648 173.064 li
475.928 176.698 li
cp
f
472.236 165.719 mo
438.47 146.225 li
439.19 142.59 li
472.954 162.084 li
472.236 165.719 li
cp
0 0 0 0 cmyk
f
494.382 178.506 mo
477.499 168.759 li
478.219 165.124 li
495.102 174.871 li
494.382 178.506 li
cp
0 .912535 0 0 cmyk
f
434.087 106.571 mo
417.204 96.8243 li
417.924 93.1895 li
434.806 102.937 li
434.087 106.571 li
cp
.147219 .0154116 0 0 cmyk
f
432.255 115.019 mo
415.372 105.272 li
416.092 101.637 li
432.974 111.384 li
432.255 115.019 li
cp
0 0 0 0 cmyk
f
515.117 232.187 mo
498.235 222.439 li
498.953 218.805 li
515.836 228.552 li
515.117 232.187 li
.147219 .0154116 0 0 cmyk
f
428.591 131.913 mo
411.709 122.166 li
412.428 118.531 li
429.311 128.278 li
428.591 131.913 li
cp
f
465.069 134.53 mo
464.531 135.704 463.172 136.122 462.033 135.465 cv
460.895 134.808 460.408 133.324 460.947 132.15 cv
461.484 130.977 462.843 130.559 463.982 131.216 cv
465.12 131.873 465.607 133.357 465.069 134.53 cv
cp
0 .912535 0 0 cmyk
f
472.34 138.729 mo
471.802 139.902 470.444 140.321 469.305 139.664 cv
468.166 139.007 467.68 137.523 468.218 136.349 cv
468.756 135.175 470.115 134.757 471.253 135.414 cv
472.392 136.071 472.878 137.556 472.34 138.729 cv
cp
0 0 0 0 cmyk
f
479.612 142.927 mo
479.074 144.101 477.715 144.52 476.576 143.862 cv
475.439 143.205 474.951 141.721 475.49 140.547 cv
476.028 139.373 477.387 138.955 478.525 139.612 cv
479.663 140.27 480.15 141.754 479.612 142.927 cv
cp
.147219 .0154116 0 0 cmyk
f
486.884 147.126 mo
486.346 148.299 484.987 148.718 483.848 148.061 cv
482.71 147.403 482.223 145.919 482.761 144.745 cv
483.299 143.572 484.658 143.153 485.796 143.811 cv
486.935 144.468 487.422 145.952 486.884 147.126 cv
cp
0 .912535 0 0 cmyk
f
366.015 298.427 mo
319.667 271.668 li
318.319 270.889 318.488 269.528 320.045 268.629 cv
348.015 252.481 li
349.573 251.581 351.929 251.483 353.279 252.263 cv
399.626 279.022 li
400.975 279.801 400.806 281.161 399.248 282.061 cv
371.279 298.208 li
369.721 299.108 367.365 299.206 366.015 298.427 cv
cp
0 0 0 0 cmyk
f
gsave
491.873 233.695 mo
514.609 140.874 li
428.698 89.9522 li
478.286 67.0977 li
542.073 91.6954 li
542.073 91.6954 542.46 204.094 542.073 205.226 cv
541.686 206.357 518.444 244.068 518.444 244.068 cv
491.873 233.695 li
clp
464.006 106.022 mo
463.827 105.769 463.56 105.531 463.203 105.325 cv
452.191 98.9669 li
451.474 98.5536 450.538 98.3485 449.601 98.3485 cv
448.779 98.3485 447.956 98.5061 447.28 98.8194 cv
445.441 99.876 li
444.778 99.4831 li
447.186 98.0928 li
447.906 97.6773 448.852 97.4695 449.797 97.4695 cv
450.743 97.4695 451.689 97.6773 452.408 98.0928 cv
463.422 104.451 li
463.919 104.738 464.24 105.088 464.394 105.456 cv
464.66 104.819 464.416 104.124 463.655 103.594 cv
464.651 104.287 464.768 105.263 464.006 106.022 cv
463.649 103.59 mo
463.647 103.588 463.645 103.587 463.643 103.586 cv
463.645 103.587 463.647 103.588 463.649 103.59 cv
463.631 103.577 mo
463.63 103.577 463.63 103.576 463.629 103.576 cv
463.629 103.576 463.63 103.577 463.631 103.577 cv
463.616 103.567 mo
463.615 103.567 463.615 103.567 463.615 103.566 cv
463.615 103.567 463.615 103.567 463.616 103.567 cv
463.44 103.457 mo
463.439 103.456 463.439 103.456 463.438 103.456 cv
463.439 103.456 463.439 103.456 463.44 103.457 cv
.91754 .7149 .150149 .0204166 cmyk
f
465.718 111.895 mo
463.937 110.84 li
466.601 109.302 li
468.414 108.255 469.194 106.835 468.947 105.466 cv
468.975 105.316 468.991 105.166 468.994 105.016 cv
468.994 110.004 li
468.982 110.011 468.97 110.017 468.958 110.024 cv
465.718 111.895 li
463.079 110.33 mo
463.079 110.33 li
466.601 108.297 li
466.607 108.293 466.613 108.29 466.619 108.286 cv
466.613 108.29 466.607 108.293 466.601 108.297 cv
463.079 110.33 li
466.621 108.285 mo
466.626 108.282 466.632 108.279 466.637 108.276 cv
466.632 108.279 466.627 108.282 466.621 108.285 cv
466.639 108.275 mo
466.645 108.271 466.651 108.268 466.656 108.265 cv
466.651 108.268 466.645 108.271 466.639 108.275 cv
466.657 108.264 mo
466.7 108.239 466.742 108.213 466.784 108.188 cv
466.742 108.213 466.7 108.239 466.657 108.264 cv
466.784 108.188 mo
466.802 108.177 466.82 108.166 466.837 108.155 cv
466.82 108.166 466.802 108.177 466.784 108.188 cv
466.84 108.153 mo
466.845 108.15 466.849 108.147 466.854 108.144 cv
466.849 108.147 466.845 108.15 466.84 108.153 cv
466.861 108.139 mo
466.864 108.138 466.867 108.136 466.869 108.135 cv
466.866 108.136 466.864 108.138 466.861 108.139 cv
466.88 108.128 mo
466.881 108.127 466.882 108.126 466.884 108.125 cv
466.882 108.126 466.881 108.127 466.88 108.128 cv
.751583 .534722 .158419 .00924697 cmyk
f
459.941 108.471 mo
445.441 99.876 li
447.28 98.8194 li
447.956 98.5061 448.779 98.3485 449.601 98.3485 cv
450.538 98.3485 451.474 98.5536 452.191 98.9669 cv
463.203 105.325 li
463.56 105.531 463.827 105.769 464.006 106.022 cv
463.849 106.179 463.654 106.327 463.422 106.461 cv
459.941 108.471 li
.696498 .501396 .180179 .0111086 cmyk
f
463.079 110.33 mo
459.941 108.471 li
463.422 106.461 li
463.654 106.327 463.849 106.179 464.006 106.022 cv
464.768 105.263 464.651 104.287 463.655 103.594 cv
463.653 103.593 463.651 103.591 463.649 103.59 cv
463.647 103.588 463.645 103.587 463.643 103.586 cv
463.639 103.583 463.635 103.58 463.631 103.577 cv
463.63 103.577 463.629 103.576 463.629 103.576 cv
463.625 103.573 463.62 103.57 463.616 103.567 cv
463.615 103.567 463.615 103.567 463.615 103.566 cv
463.559 103.529 463.501 103.492 463.44 103.457 cv
463.439 103.456 463.439 103.456 463.438 103.456 cv
463.433 103.453 463.427 103.449 463.422 103.446 cv
463.422 103.446 li
452.408 97.088 li
451.689 96.6719 450.743 96.4639 449.797 96.4639 cv
448.852 96.4639 447.906 96.6719 447.186 97.088 cv
443.919 98.974 li
440.782 97.1143 li
444.007 95.252 li
445.604 94.3306 447.701 93.8699 449.798 93.8699 cv
451.894 93.8699 453.991 94.3306 455.588 95.252 cv
466.601 101.61 li
468.224 102.548 469.022 103.785 468.994 105.016 cv
468.991 105.166 468.975 105.316 468.947 105.466 cv
468.947 105.463 468.946 105.459 468.946 105.456 cv
468.769 106.421 468.083 107.36 466.884 108.125 cv
466.882 108.126 466.881 108.127 466.88 108.128 cv
466.876 108.13 466.873 108.132 466.869 108.135 cv
466.867 108.136 466.864 108.138 466.861 108.139 cv
466.859 108.141 466.856 108.143 466.854 108.144 cv
466.849 108.147 466.845 108.15 466.84 108.153 cv
466.839 108.153 466.838 108.154 466.837 108.155 cv
466.82 108.166 466.802 108.177 466.784 108.188 cv
466.784 108.188 li
466.742 108.213 466.7 108.239 466.657 108.264 cv
466.657 108.264 466.657 108.264 466.656 108.265 cv
466.651 108.268 466.645 108.271 466.639 108.275 cv
466.639 108.275 466.638 108.275 466.637 108.276 cv
466.632 108.279 466.626 108.282 466.621 108.285 cv
466.62 108.286 466.62 108.286 466.619 108.286 cv
466.613 108.29 466.607 108.293 466.601 108.297 cv
463.079 110.33 li
.751583 .534722 .158419 .00924697 cmyk
f
464.394 105.456 mo
464.24 105.088 463.919 104.738 463.422 104.451 cv
452.408 98.0928 li
451.689 97.6773 450.743 97.4695 449.797 97.4695 cv
448.852 97.4695 447.906 97.6773 447.186 98.0928 cv
444.778 99.4831 li
443.919 98.974 li
447.186 97.088 li
447.906 96.6719 448.852 96.4639 449.797 96.4639 cv
450.743 96.4639 451.689 96.6719 452.408 97.088 cv
463.422 103.446 li
463.422 103.446 li
463.427 103.449 463.433 103.453 463.438 103.456 cv
463.439 103.456 463.439 103.456 463.44 103.457 cv
463.501 103.492 463.559 103.529 463.615 103.566 cv
463.615 103.567 463.615 103.567 463.616 103.567 cv
463.62 103.57 463.625 103.573 463.629 103.576 cv
463.63 103.576 463.63 103.577 463.631 103.577 cv
463.635 103.58 463.639 103.583 463.643 103.586 cv
463.645 103.587 463.647 103.588 463.649 103.59 cv
463.651 103.591 463.653 103.593 463.655 103.594 cv
464.416 104.124 464.66 104.819 464.394 105.456 cv
.696498 .501396 .180179 .0111086 cmyk
f
463.937 110.84 mo
463.079 110.33 li
466.601 108.297 li
466.607 108.293 466.613 108.29 466.619 108.286 cv
466.62 108.286 466.62 108.286 466.621 108.285 cv
466.627 108.282 466.632 108.279 466.637 108.276 cv
466.638 108.275 466.639 108.275 466.639 108.275 cv
466.645 108.271 466.651 108.268 466.656 108.265 cv
466.657 108.264 466.657 108.264 466.657 108.264 cv
466.7 108.239 466.742 108.213 466.784 108.188 cv
466.784 108.188 li
466.802 108.177 466.82 108.166 466.837 108.155 cv
466.838 108.154 466.839 108.153 466.84 108.153 cv
466.845 108.15 466.849 108.147 466.854 108.144 cv
466.856 108.143 466.859 108.141 466.861 108.139 cv
466.864 108.138 466.866 108.136 466.869 108.135 cv
466.873 108.132 466.876 108.13 466.88 108.128 cv
466.881 108.127 466.882 108.126 466.884 108.125 cv
468.083 107.36 468.769 106.421 468.946 105.456 cv
468.946 105.459 468.947 105.463 468.947 105.466 cv
469.194 106.835 468.414 108.255 466.601 109.302 cv
463.937 110.84 li
f
488.957 120.794 mo
488.778 120.541 488.511 120.303 488.154 120.097 cv
477.142 113.738 li
476.426 113.326 475.49 113.121 474.553 113.121 cv
473.731 113.121 472.908 113.278 472.231 113.592 cv
470.377 114.657 li
469.714 114.264 li
472.137 112.865 li
472.857 112.449 473.803 112.241 474.749 112.241 cv
475.695 112.241 476.64 112.449 477.36 112.864 cv
488.373 119.223 li
488.87 119.51 489.192 119.859 489.345 120.229 cv
489.629 119.549 489.333 118.805 488.45 118.264 cv
489.588 118.962 489.758 119.996 488.957 120.794 cv
488.447 118.262 mo
488.442 118.259 488.438 118.256 488.433 118.253 cv
488.438 118.256 488.442 118.259 488.447 118.262 cv
488.427 118.249 mo
488.424 118.248 488.422 118.247 488.42 118.245 cv
488.422 118.247 488.424 118.248 488.427 118.249 cv
488.41 118.24 mo
488.409 118.239 488.407 118.238 488.405 118.237 cv
488.407 118.238 488.409 118.239 488.41 118.24 cv
488.392 118.229 mo
488.391 118.228 488.389 118.227 488.388 118.226 cv
488.389 118.227 488.391 118.228 488.392 118.229 cv
.854459 1 .130526 .0289006 cmyk
f
491.861 127.391 mo
488.873 125.62 li
491.552 124.073 li
493.365 123.027 494.145 121.607 493.898 120.238 cv
493.924 120.1 493.94 119.961 493.945 119.823 cv
493.945 126.188 li
491.861 127.391 li
488.014 125.111 mo
488.014 125.111 li
491.552 123.068 li
491.557 123.065 491.563 123.062 491.568 123.059 cv
491.563 123.062 491.557 123.065 491.552 123.068 cv
488.014 125.111 li
491.583 123.05 mo
491.584 123.05 491.584 123.05 491.584 123.05 cv
491.584 123.05 491.583 123.05 491.583 123.05 cv
.77734 .931426 .133486 .0261845 cmyk
f
484.877 123.251 mo
470.377 114.657 li
472.231 113.592 li
472.908 113.278 473.731 113.121 474.553 113.121 cv
475.49 113.121 476.426 113.326 477.142 113.738 cv
488.154 120.097 li
488.511 120.303 488.778 120.541 488.957 120.794 cv
488.8 120.951 488.605 121.099 488.372 121.233 cv
484.877 123.251 li
.696498 .501396 .180179 .0111086 cmyk
f
488.014 125.111 mo
484.877 123.251 li
488.372 121.233 li
488.605 121.099 488.8 120.951 488.957 120.794 cv
489.758 119.996 489.588 118.962 488.45 118.264 cv
488.449 118.263 488.448 118.262 488.447 118.262 cv
488.442 118.259 488.438 118.256 488.433 118.253 cv
488.431 118.252 488.429 118.251 488.427 118.249 cv
488.424 118.248 488.422 118.247 488.42 118.245 cv
488.417 118.243 488.413 118.241 488.41 118.24 cv
488.409 118.239 488.407 118.238 488.405 118.237 cv
488.401 118.234 488.397 118.231 488.392 118.229 cv
488.391 118.228 488.389 118.227 488.388 118.226 cv
488.383 118.224 488.378 118.221 488.373 118.218 cv
488.373 118.218 li
477.36 111.859 li
476.64 111.444 475.694 111.236 474.749 111.236 cv
473.803 111.236 472.857 111.444 472.137 111.859 cv
468.855 113.754 li
465.718 111.895 li
468.958 110.024 li
468.97 110.017 468.982 110.011 468.994 110.004 cv
470.586 109.096 472.668 108.642 474.749 108.642 cv
476.846 108.642 478.943 109.103 480.539 110.024 cv
491.552 116.383 li
493.191 117.329 493.989 118.58 493.945 119.823 cv
493.94 119.961 493.924 120.1 493.898 120.238 cv
493.898 120.235 493.897 120.232 493.897 120.229 cv
493.708 121.259 492.939 122.259 491.584 123.05 cv
491.584 123.05 491.584 123.05 491.583 123.05 cv
491.578 123.053 491.573 123.056 491.568 123.059 cv
491.563 123.062 491.557 123.065 491.552 123.068 cv
488.014 125.111 li
.77734 .931426 .133486 .0261845 cmyk
f
489.345 120.229 mo
489.192 119.859 488.87 119.51 488.373 119.223 cv
477.36 112.864 li
476.64 112.449 475.695 112.241 474.749 112.241 cv
473.803 112.241 472.857 112.449 472.137 112.865 cv
469.714 114.264 li
468.855 113.754 li
472.137 111.859 li
472.857 111.444 473.803 111.236 474.749 111.236 cv
475.694 111.236 476.64 111.444 477.36 111.859 cv
488.373 118.218 li
488.373 118.218 li
488.378 118.221 488.383 118.224 488.388 118.226 cv
488.389 118.227 488.391 118.228 488.392 118.229 cv
488.397 118.231 488.401 118.234 488.405 118.237 cv
488.407 118.238 488.409 118.239 488.41 118.24 cv
488.413 118.241 488.417 118.243 488.42 118.245 cv
488.422 118.247 488.424 118.248 488.427 118.249 cv
488.429 118.251 488.431 118.252 488.433 118.253 cv
488.438 118.256 488.442 118.259 488.447 118.262 cv
488.448 118.262 488.449 118.263 488.45 118.264 cv
489.333 118.805 489.629 119.549 489.345 120.229 cv
.696498 .501396 .180179 .0111086 cmyk
f
488.873 125.62 mo
488.014 125.111 li
491.552 123.068 li
491.557 123.065 491.563 123.062 491.568 123.059 cv
491.573 123.056 491.578 123.053 491.583 123.05 cv
491.583 123.05 491.584 123.05 491.584 123.05 cv
492.939 122.259 493.708 121.259 493.897 120.229 cv
493.897 120.232 493.898 120.235 493.898 120.238 cv
494.145 121.607 493.365 123.027 491.552 124.073 cv
488.873 125.62 li
f
492.992 229.129 mo
493.608 226.615 li
499.565 223.207 li
501.407 224.271 li
492.992 229.129 li
504.914 222.246 mo
503.088 221.192 li
519.583 211.757 li
519.583 211.721 li
519.626 212.962 518.828 214.212 517.191 215.158 cv
504.914 222.246 li
.751583 .534722 .158419 .00924697 cmyk
f
501.407 224.271 mo
499.565 223.207 li
503.088 221.192 li
504.914 222.246 li
501.407 224.271 li
.147219 .0154116 0 0 cmyk
f
514.596 136.582 mo
514.417 136.328 514.149 136.09 513.793 135.885 cv
502.78 129.526 li
502.064 129.113 501.128 128.908 500.19 128.908 cv
499.369 128.908 498.546 129.066 497.869 129.379 cv
496.522 130.153 li
495.858 129.76 li
497.776 128.652 li
498.496 128.237 499.442 128.029 500.387 128.029 cv
501.333 128.029 502.279 128.237 502.998 128.652 cv
514.012 135.011 li
514.509 135.298 514.83 135.648 514.984 136.016 cv
515.248 135.383 515.009 134.693 514.261 134.165 cv
515.242 134.857 515.354 135.826 514.596 136.582 cv
514.261 134.165 mo
514.255 134.161 514.25 134.157 514.245 134.154 cv
514.25 134.157 514.255 134.161 514.261 134.165 cv
514.238 134.149 mo
514.237 134.148 514.235 134.147 514.233 134.145 cv
514.235 134.147 514.237 134.148 514.238 134.149 cv
514.221 134.137 mo
514.22 134.136 514.219 134.136 514.219 134.136 cv
514.219 134.136 514.22 134.136 514.221 134.137 cv
514.206 134.127 mo
514.205 134.126 514.205 134.126 514.204 134.126 cv
514.205 134.126 514.205 134.126 514.206 134.127 cv
514.029 134.016 mo
514.029 134.016 514.028 134.016 514.028 134.015 cv
514.028 134.016 514.029 134.016 514.029 134.016 cv
.91754 .7149 .150149 .0204166 cmyk
f
493.608 226.615 mo
502.125 191.842 li
505.265 190.029 li
505.265 179.022 li
514.472 141.431 li
517.191 139.861 li
519.004 138.814 519.784 137.395 519.537 136.025 cv
519.563 135.886 519.578 135.747 519.583 135.607 cv
519.583 211.721 li
519.583 211.757 li
503.088 221.192 li
498.953 218.805 li
498.235 222.439 li
499.565 223.207 li
493.608 226.615 li
514.158 140.607 mo
514.158 140.607 li
517.191 138.856 li
517.197 138.853 517.203 138.849 517.209 138.846 cv
517.203 138.849 517.197 138.853 517.191 138.856 cv
514.158 140.607 li
517.211 138.845 mo
517.216 138.842 517.222 138.838 517.227 138.835 cv
517.222 138.838 517.216 138.842 517.211 138.845 cv
517.229 138.834 mo
517.235 138.831 517.241 138.827 517.246 138.824 cv
517.241 138.827 517.235 138.831 517.229 138.834 cv
517.247 138.824 mo
517.29 138.798 517.332 138.773 517.374 138.747 cv
517.332 138.773 517.29 138.799 517.247 138.824 cv
517.374 138.747 mo
517.392 138.736 517.41 138.725 517.427 138.714 cv
517.41 138.725 517.392 138.736 517.374 138.747 cv
517.43 138.713 mo
517.434 138.71 517.439 138.707 517.444 138.704 cv
517.439 138.707 517.434 138.71 517.43 138.713 cv
517.451 138.699 mo
517.454 138.698 517.456 138.696 517.459 138.694 cv
517.456 138.696 517.454 138.697 517.451 138.699 cv
517.47 138.687 mo
517.471 138.686 517.472 138.686 517.474 138.685 cv
517.472 138.686 517.471 138.686 517.47 138.687 cv
.751583 .534722 .158419 .00924697 cmyk
f
499.565 223.207 mo
498.235 222.439 li
498.953 218.805 li
503.088 221.192 li
499.565 223.207 li
.147219 .0154116 0 0 cmyk
f
511.02 138.747 mo
496.522 130.153 li
497.869 129.379 li
498.546 129.066 499.369 128.908 500.19 128.908 cv
501.128 128.908 502.064 129.113 502.78 129.526 cv
513.793 135.885 li
514.149 136.09 514.417 136.328 514.596 136.582 cv
514.438 136.739 514.243 136.886 514.011 137.021 cv
511.02 138.747 li
.696498 .501396 .180179 .0111086 cmyk
f
514.158 140.607 mo
511.02 138.747 li
514.011 137.021 li
514.243 136.886 514.438 136.739 514.596 136.582 cv
515.354 135.826 515.242 134.857 514.261 134.165 cv
514.261 134.165 li
514.255 134.161 514.25 134.157 514.245 134.154 cv
514.243 134.152 514.241 134.151 514.238 134.149 cv
514.237 134.148 514.235 134.147 514.233 134.145 cv
514.229 134.143 514.225 134.14 514.221 134.137 cv
514.22 134.136 514.219 134.136 514.219 134.136 cv
514.215 134.133 514.21 134.13 514.206 134.127 cv
514.205 134.126 514.205 134.126 514.204 134.126 cv
514.149 134.088 514.09 134.052 514.029 134.016 cv
514.029 134.016 514.028 134.016 514.028 134.015 cv
514.023 134.012 514.017 134.009 514.012 134.006 cv
514.012 134.006 li
502.998 127.648 li
502.279 127.232 501.333 127.024 500.387 127.024 cv
499.442 127.024 498.496 127.232 497.776 127.648 cv
494.999 129.251 li
491.861 127.391 li
493.945 126.188 li
494.597 125.812 li
496.193 124.89 498.29 124.429 500.387 124.429 cv
502.484 124.429 504.581 124.89 506.178 125.812 cv
517.191 132.17 li
518.828 133.116 519.626 134.365 519.583 135.607 cv
519.578 135.747 519.563 135.886 519.537 136.025 cv
519.536 136.022 519.536 136.019 519.535 136.016 cv
519.358 136.98 518.673 137.92 517.474 138.685 cv
517.472 138.686 517.471 138.686 517.47 138.687 cv
517.466 138.69 517.462 138.692 517.459 138.694 cv
517.456 138.696 517.454 138.698 517.451 138.699 cv
517.449 138.701 517.446 138.702 517.444 138.704 cv
517.439 138.707 517.434 138.71 517.43 138.713 cv
517.429 138.713 517.428 138.714 517.427 138.714 cv
517.41 138.725 517.392 138.736 517.374 138.747 cv
517.374 138.747 li
517.332 138.773 517.29 138.798 517.247 138.824 cv
517.246 138.824 517.246 138.824 517.246 138.824 cv
517.241 138.827 517.235 138.831 517.229 138.834 cv
517.228 138.835 517.228 138.835 517.227 138.835 cv
517.222 138.838 517.216 138.842 517.211 138.845 cv
517.21 138.845 517.21 138.846 517.209 138.846 cv
517.203 138.849 517.197 138.853 517.191 138.856 cv
514.158 140.607 li
.751583 .534722 .158419 .00924697 cmyk
f
502.125 191.842 mo
505.265 179.022 li
505.265 190.029 li
502.125 191.842 li
.696498 .501396 .180179 .0111086 cmyk
f
514.984 136.016 mo
514.83 135.648 514.509 135.298 514.012 135.011 cv
502.998 128.652 li
502.279 128.237 501.333 128.029 500.387 128.029 cv
499.442 128.029 498.496 128.237 497.776 128.652 cv
495.858 129.76 li
494.999 129.251 li
497.776 127.648 li
498.496 127.232 499.442 127.024 500.387 127.024 cv
501.333 127.024 502.279 127.232 502.998 127.648 cv
514.012 134.006 li
514.012 134.006 li
514.017 134.009 514.023 134.012 514.028 134.015 cv
514.028 134.016 514.029 134.016 514.029 134.016 cv
514.09 134.052 514.149 134.088 514.204 134.126 cv
514.205 134.126 514.205 134.126 514.206 134.127 cv
514.21 134.13 514.215 134.133 514.219 134.136 cv
514.219 134.136 514.22 134.136 514.221 134.137 cv
514.225 134.14 514.229 134.143 514.233 134.145 cv
514.235 134.147 514.237 134.148 514.238 134.149 cv
514.241 134.151 514.243 134.152 514.245 134.154 cv
514.25 134.157 514.255 134.161 514.261 134.165 cv
514.261 134.165 li
515.009 134.693 515.248 135.383 514.984 136.016 cv
f
514.472 141.431 mo
514.609 140.874 li
514.158 140.607 li
517.191 138.856 li
517.197 138.853 517.203 138.849 517.209 138.846 cv
517.21 138.846 517.21 138.845 517.211 138.845 cv
517.216 138.842 517.222 138.838 517.227 138.835 cv
517.228 138.835 517.228 138.835 517.229 138.834 cv
517.235 138.831 517.241 138.827 517.246 138.824 cv
517.246 138.824 517.246 138.824 517.247 138.824 cv
517.29 138.799 517.332 138.773 517.374 138.747 cv
517.374 138.747 li
517.392 138.736 517.41 138.725 517.427 138.714 cv
517.428 138.714 517.429 138.713 517.43 138.713 cv
517.434 138.71 517.439 138.707 517.444 138.704 cv
517.446 138.702 517.449 138.701 517.451 138.699 cv
517.454 138.697 517.456 138.696 517.459 138.694 cv
517.462 138.692 517.466 138.69 517.47 138.687 cv
517.471 138.686 517.472 138.686 517.474 138.685 cv
518.673 137.92 519.358 136.98 519.535 136.016 cv
519.536 136.019 519.536 136.022 519.537 136.025 cv
519.784 137.395 519.004 138.814 517.191 139.861 cv
514.472 141.431 li
f
grestore
gsave
491.873 233.695 mo
514.609 140.874 li
428.698 89.9522 li
323.951 128.908 li
404.335 233.802 li
404.335 233.802 470.702 271.621 470.316 272.753 cv
469.928 273.885 518.444 244.068 518.444 244.068 cv
491.873 233.695 li
clp
466.601 177.912 mo
469.793 179.756 469.793 182.755 466.601 184.599 cv
412.329 215.932 li
411.451 216.439 410.028 216.439 409.15 215.932 cv
408.273 215.425 408.273 214.604 409.15 214.097 cv
463.422 182.763 li
464.862 181.932 464.862 180.579 463.422 179.747 cv
458.162 176.711 li
458.747 175.832 459.278 174.917 459.796 173.983 cv
466.601 177.912 li
cp
.147219 .0154116 0 0 cmyk
f
389.736 202.888 mo
444.007 171.554 li
447.2 169.711 452.395 169.71 455.588 171.554 cv
459.796 173.983 li
459.278 174.917 458.747 175.832 458.162 176.711 cv
452.408 173.39 li
450.969 172.558 448.626 172.558 447.186 173.39 cv
392.914 204.723 li
392.036 205.23 390.614 205.23 389.736 204.723 cv
388.858 204.217 388.858 203.395 389.736 202.888 cv
cp
.657221 .328313 0 0 cmyk
f
389.082 203.87 mo
389.077 127.556 li
445.951 95.8506 li
453.905 95.3262 li
461.596 100.309 li
466.316 104.416 li
410.903 192.289 li
392.811 202.952 li
389.082 203.87 li
cp
f
410.116 213.509 mo
393.116 203.694 li
393.116 129.94 li
410.641 138.086 li
410.116 213.509 li
cp
.501427 .182498 0 0 cmyk
f
468.994 105.007 mo
468.994 181.197 li
409.288 215.348 li
408.492 215.029 li
408.492 138.727 li
468.994 105.007 li
cp
.147219 .0154116 0 0 cmyk
f
435.414 105.638 mo
447.28 98.8194 li
448.729 98.1485 450.847 98.1915 452.191 98.9669 cv
463.203 105.325 li
464.057 105.817 464.4 106.493 464.242 107.135 cv
434.258 125.052 li
410.174 139.835 li
393.116 129.94 li
435.414 105.638 li
cp
0 0 0 0 cmyk
f
410.641 137.529 mo
410.641 213.236 li
410.641 214.841 li
410.641 216.307 li
410.099 216.293 409.564 216.171 409.15 215.932 cv
408.718 215.683 408.501 215.357 408.494 215.031 cv
408.492 215.029 li
408.492 215.018 li
408.492 215.012 li
408.492 138.727 li
410.641 137.529 li
cp
.657221 .328313 0 0 cmyk
f
389.077 128.508 mo
389.077 127.556 li
389.38 127.556 li
389.473 128.202 li
389.077 128.508 li
cp
0 0 0 0 cmyk
f
408.493 139.716 mo
408.493 138.741 li
408.786 139.154 li
408.493 139.716 li
cp
f
412.329 139.63 mo
466.601 108.297 li
469.793 106.453 469.793 103.454 466.601 101.61 cv
455.588 95.252 li
452.395 93.4092 447.2 93.4092 444.007 95.252 cv
389.736 126.586 li
388.858 127.093 388.858 127.915 389.736 128.422 cv
390.614 128.928 392.036 128.928 392.914 128.422 cv
447.186 97.088 li
448.626 96.2559 450.969 96.2559 452.408 97.088 cv
463.422 103.446 li
464.862 104.277 464.862 105.63 463.422 106.461 cv
409.15 137.795 li
408.273 138.302 408.273 139.124 409.15 139.631 cv
410.028 140.137 411.451 140.137 412.329 139.63 cv
cp
.147219 .0154116 0 0 cmyk
f
426.473 175.752 mo
454.675 159.47 li
454.675 131.198 li
426.473 147.481 li
426.473 175.752 li
cp
0 0 0 0 cmyk
f
389.736 128.422 mo
390.614 128.928 392.036 128.928 392.914 128.422 cv
447.186 97.088 li
448.626 96.2559 450.969 96.2559 452.408 97.088 cv
463.422 103.446 li
464.365 103.99 464.686 104.758 464.394 105.456 cv
464.24 105.088 463.919 104.738 463.422 104.451 cv
452.408 98.0928 li
450.969 97.2618 448.626 97.2618 447.186 98.0928 cv
392.914 129.427 li
392.036 129.934 390.614 129.934 389.736 129.427 cv
389.071 129.043 388.911 128.478 389.255 128.006 cv
389.365 128.157 389.523 128.299 389.736 128.422 cv
cp
f
409.15 139.631 mo
410.028 140.137 411.451 140.137 412.329 139.63 cv
466.601 108.297 li
467.976 107.503 468.755 106.494 468.946 105.456 cv
469.198 106.828 468.418 108.252 466.601 109.302 cv
412.329 140.636 li
411.451 141.143 410.028 141.143 409.15 140.636 cv
408.485 140.252 408.326 139.688 408.669 139.215 cv
408.779 139.366 408.938 139.508 409.15 139.631 cv
cp
f
491.552 192.684 mo
494.744 194.527 494.744 197.527 491.552 199.37 cv
437.281 230.704 li
436.403 231.211 434.979 231.211 434.101 230.704 cv
433.223 230.197 433.223 229.375 434.101 228.868 cv
488.372 197.535 li
489.813 196.703 489.813 195.351 488.373 194.52 cv
483.114 191.483 li
483.698 190.605 484.229 189.69 484.747 188.756 cv
491.552 192.684 li
cp
0 .912535 0 0 cmyk
f
414.687 217.66 mo
468.958 186.326 li
472.152 184.482 477.346 184.482 480.539 186.326 cv
484.747 188.756 li
484.229 189.69 483.698 190.605 483.114 191.483 cv
477.36 188.161 li
475.92 187.33 473.577 187.33 472.137 188.161 cv
417.865 219.495 li
416.988 220.002 415.565 220.002 414.687 219.495 cv
413.809 218.988 413.809 218.166 414.687 217.66 cv
cp
.139773 1 .00201419 0 cmyk
f
414.033 218.643 mo
414.029 142.328 li
470.903 110.623 li
478.856 110.099 li
486.547 115.08 li
491.267 119.189 li
435.854 207.061 li
417.762 217.724 li
414.033 218.643 li
cp
f
435.068 228.28 mo
418.068 218.466 li
418.068 144.712 li
435.592 152.857 li
435.068 228.28 li
cp
.0699779 .680964 0 0 cmyk
f
493.945 119.779 mo
493.945 195.969 li
434.24 230.12 li
433.444 229.801 li
433.444 153.499 li
493.945 119.779 li
cp
0 .912535 0 0 cmyk
f
460.365 120.409 mo
472.231 113.592 li
473.68 112.921 475.798 112.964 477.142 113.738 cv
488.155 120.097 li
489.007 120.59 489.351 121.265 489.194 121.906 cv
459.209 139.823 li
435.125 154.607 li
418.068 144.712 li
460.365 120.409 li
cp
0 0 0 0 cmyk
f
435.592 152.302 mo
435.592 228.008 li
435.592 229.612 li
435.592 231.079 li
435.05 231.065 434.515 230.943 434.101 230.704 cv
433.669 230.455 433.452 230.13 433.446 229.803 cv
433.444 229.801 li
433.444 229.789 li
433.444 229.783 li
433.444 153.499 li
435.592 152.302 li
cp
.139773 1 .00201419 0 cmyk
f
414.029 143.279 mo
414.029 142.328 li
414.331 142.328 li
414.424 142.974 li
414.029 143.279 li
cp
0 0 0 0 cmyk
f
433.445 154.488 mo
433.445 153.513 li
433.738 153.927 li
433.445 154.488 li
cp
f
437.281 154.402 mo
491.552 123.068 li
494.744 121.226 494.744 118.226 491.552 116.383 cv
480.539 110.024 li
477.346 108.181 472.152 108.181 468.958 110.024 cv
414.687 141.358 li
413.809 141.865 413.809 142.687 414.687 143.193 cv
415.565 143.7 416.988 143.7 417.865 143.193 cv
472.137 111.859 li
473.577 111.028 475.92 111.028 477.36 111.859 cv
488.373 118.218 li
489.813 119.05 489.813 120.401 488.372 121.233 cv
434.101 152.567 li
433.224 153.074 433.223 153.896 434.101 154.402 cv
434.979 154.909 436.403 154.909 437.281 154.402 cv
cp
0 .912535 0 0 cmyk
f
451.424 190.524 mo
479.626 174.242 li
479.626 145.97 li
451.424 162.252 li
451.424 190.524 li
cp
0 0 0 0 cmyk
f
414.687 143.193 mo
415.565 143.7 416.988 143.7 417.865 143.193 cv
472.137 111.859 li
473.577 111.028 475.92 111.028 477.36 111.859 cv
488.373 118.218 li
489.316 118.763 489.637 119.529 489.345 120.229 cv
489.192 119.859 488.87 119.51 488.373 119.223 cv
477.36 112.864 li
475.92 112.033 473.577 112.033 472.137 112.865 cv
417.865 144.198 li
416.988 144.705 415.565 144.705 414.687 144.198 cv
414.022 143.815 413.863 143.25 414.206 142.778 cv
414.316 142.929 414.474 143.07 414.687 143.193 cv
cp
f
434.101 154.402 mo
434.979 154.909 436.403 154.909 437.281 154.402 cv
491.552 123.068 li
492.927 122.274 493.706 121.267 493.897 120.229 cv
494.149 121.601 493.369 123.024 491.552 124.073 cv
437.281 155.407 li
436.403 155.914 434.979 155.914 434.101 155.407 cv
433.436 155.023 433.278 154.459 433.62 153.987 cv
433.73 154.138 433.889 154.279 434.101 154.402 cv
cp
f
517.191 208.472 mo
520.383 210.315 520.383 213.315 517.191 215.158 cv
462.918 246.491 li
462.041 246.998 460.617 246.998 459.74 246.491 cv
458.862 245.984 458.862 245.163 459.74 244.656 cv
514.011 213.322 li
515.451 212.491 515.451 211.139 514.012 210.307 cv
508.752 207.271 li
509.337 206.392 509.867 205.477 510.386 204.543 cv
517.191 208.472 li
cp
.147219 .0154116 0 0 cmyk
f
440.325 233.447 mo
494.597 202.113 li
497.789 200.271 502.985 200.27 506.178 202.113 cv
510.386 204.543 li
509.867 205.477 509.337 206.392 508.752 207.271 cv
502.998 203.949 li
501.559 203.117 499.216 203.117 497.776 203.949 cv
443.504 235.282 li
442.626 235.789 441.203 235.789 440.325 235.282 cv
439.448 234.776 439.448 233.954 440.325 233.447 cv
cp
.657221 .328313 0 0 cmyk
f
439.672 234.43 mo
439.667 158.115 li
496.541 126.41 li
504.494 125.886 li
512.186 130.868 li
516.906 134.976 li
461.492 222.849 li
443.401 233.512 li
439.672 234.43 li
cp
f
460.706 244.068 mo
443.706 234.254 li
443.706 160.499 li
461.231 168.646 li
460.706 244.068 li
cp
.501427 .182498 0 0 cmyk
f
519.583 135.566 mo
519.583 211.757 li
459.878 245.907 li
459.082 245.589 li
459.082 169.286 li
519.583 135.566 li
cp
.147219 .0154116 0 0 cmyk
f
486.003 136.197 mo
497.869 129.379 li
499.318 128.708 501.437 128.751 502.781 129.526 cv
513.793 135.885 li
514.646 136.377 514.99 137.053 514.832 137.694 cv
484.848 155.611 li
460.764 170.395 li
443.706 160.499 li
486.003 136.197 li
cp
0 0 0 0 cmyk
f
461.231 168.089 mo
461.231 243.796 li
461.231 245.4 li
461.231 246.866 li
460.689 246.853 460.154 246.731 459.74 246.491 cv
459.308 246.242 459.091 245.917 459.084 245.591 cv
459.082 245.589 li
459.082 245.576 li
459.082 245.571 li
459.082 169.286 li
461.231 168.089 li
cp
.657221 .328313 0 0 cmyk
f
439.667 159.067 mo
439.667 158.115 li
439.97 158.115 li
440.063 158.762 li
439.667 159.067 li
cp
0 0 0 0 cmyk
f
459.083 170.275 mo
459.083 169.3 li
459.376 169.714 li
459.083 170.275 li
cp
f
462.918 170.19 mo
517.191 138.857 li
520.383 137.013 520.383 134.014 517.191 132.17 cv
506.178 125.812 li
502.985 123.969 497.789 123.969 494.597 125.812 cv
440.325 157.146 li
439.448 157.652 439.448 158.475 440.325 158.982 cv
441.203 159.487 442.626 159.487 443.504 158.981 cv
497.776 127.648 li
499.216 126.815 501.559 126.815 502.998 127.648 cv
514.012 134.006 li
515.451 134.837 515.451 136.19 514.011 137.021 cv
459.74 168.355 li
458.862 168.861 458.862 169.684 459.74 170.19 cv
460.617 170.696 462.041 170.696 462.918 170.19 cv
cp
.147219 .0154116 0 0 cmyk
f
477.063 206.312 mo
505.265 190.029 li
505.265 161.758 li
477.063 178.04 li
477.063 206.312 li
cp
0 0 0 0 cmyk
f
440.325 158.981 mo
441.203 159.487 442.626 159.487 443.504 158.981 cv
497.776 127.648 li
499.216 126.815 501.559 126.815 502.998 127.648 cv
514.012 134.006 li
514.954 134.55 515.276 135.317 514.984 136.016 cv
514.83 135.648 514.509 135.298 514.012 135.011 cv
502.998 128.652 li
501.559 127.821 499.216 127.821 497.776 128.652 cv
443.504 159.986 li
442.626 160.493 441.203 160.493 440.325 159.986 cv
439.66 159.602 439.501 159.037 439.844 158.565 cv
439.954 158.717 440.113 158.858 440.325 158.981 cv
cp
f
459.74 170.19 mo
460.617 170.696 462.041 170.696 462.918 170.19 cv
517.191 138.857 li
518.566 138.063 519.345 137.054 519.535 136.016 cv
519.787 137.388 519.008 138.812 517.191 139.861 cv
462.918 171.195 li
462.041 171.702 460.617 171.702 459.74 171.195 cv
459.074 170.811 458.916 170.246 459.259 169.774 cv
459.368 169.926 459.528 170.067 459.74 170.19 cv
cp
f
grestore
436.234 394.311 mo
434.828 394.311 433.421 394.002 432.348 393.382 cv
430.201 392.144 430.201 390.135 432.348 388.896 cv
532.589 330.999 li
533.662 330.379 535.068 330.07 536.474 330.07 cv
537.881 330.07 539.287 330.379 540.361 330.999 cv
542.506 332.238 542.507 334.247 540.361 335.485 cv
440.119 393.383 li
439.046 394.002 437.64 394.311 436.234 394.311 cv
.477638 .319829 .131411 0 cmyk
f
557.491 299.637 mo
557.491 299.637 li
557.395 299.473 557.205 299.39 557.02 299.43 cv
550.956 300.745 li
553.344 304.808 li
557.443 300.148 li
557.568 300.007 557.587 299.8 557.491 299.637 cv
cp
.147219 .0154116 0 0 cmyk
f
555.1 302.633 mo
555.093 301.759 554.471 300.699 553.709 300.269 cv
553.358 300.068 553.041 300.045 552.8 300.156 cv
545.793 300.099 538.902 301.943 532.861 305.494 cv
532.422 305.752 li
539.954 318.565 li
542.178 317.09 li
546.885 313.969 550.853 309.856 553.802 305.038 cv
554.754 303.483 li
554.97 303.327 555.103 303.038 555.1 302.633 cv
cp
.657221 .328313 0 0 cmyk
f
541.467 315.151 mo
541.441 311.8 539.056 307.744 536.141 306.091 cv
533.226 304.438 530.884 305.815 530.909 309.165 cv
530.936 312.517 533.321 316.573 536.236 318.226 cv
539.151 319.879 541.492 318.502 541.467 315.151 cv
cp
.147219 .0154116 0 0 cmyk
f
495.253 346.413 mo
539.954 318.565 li
532.422 305.752 li
486.354 331.273 li
495.253 346.413 li
cp
f
497.041 342.38 mo
497.01 338.42 494.193 333.627 490.748 331.674 cv
487.303 329.721 484.536 331.347 484.567 335.307 cv
484.598 339.267 487.415 344.06 490.86 346.013 cv
494.304 347.966 497.072 346.339 497.041 342.38 cv
cp
f
494.49 343.878 mo
494.46 339.919 491.643 335.126 488.198 333.173 cv
484.753 331.22 481.986 332.846 482.017 336.806 cv
482.048 340.765 484.865 345.559 488.31 347.512 cv
491.754 349.465 494.522 347.838 494.49 343.878 cv
cp
f
433.566 382.673 mo
492.703 347.912 li
483.804 332.772 li
424.666 367.533 li
433.566 382.673 li
cp
f
435.353 378.64 mo
435.323 374.68 432.505 369.887 429.06 367.934 cv
425.615 365.981 422.848 367.607 422.879 371.566 cv
422.909 375.526 425.728 380.319 429.172 382.273 cv
432.616 384.226 435.384 382.599 435.353 378.64 cv
cp
f
433.12 377.374 mo
432.985 375.036 431.081 372.125 428.869 370.871 cv
426.657 369.617 424.975 370.495 425.112 372.832 cv
425.247 375.17 427.151 378.081 429.363 379.335 cv
431.574 380.589 433.257 379.711 433.12 377.374 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
497.49 342.115 mo
497.459 338.156 494.642 333.362 491.198 331.409 cv
489.81 330.623 488.536 330.426 487.508 330.719 cv
488.625 329.551 490.459 329.413 492.547 330.596 cv
495.991 332.549 498.81 337.343 498.84 341.302 cv
498.859 343.667 497.874 345.19 496.349 345.625 cv
497.075 344.865 497.502 343.676 497.49 342.115 cv
cp
0 0 0 0 cmyk
f
497.49 342.115 mo
497.459 338.155 494.642 333.362 491.198 331.409 cv
489.475 330.433 487.922 330.352 486.803 331.009 cv
483.452 332.979 li
485.049 335.694 li
485.341 339.296 487.751 343.397 490.755 345.402 cv
492.352 348.118 li
495.703 346.149 li
496.822 345.491 497.506 344.095 497.49 342.115 cv
cp
.657221 .328313 0 0 cmyk
f
494.14 344.085 mo
494.109 340.125 491.291 335.332 487.847 333.379 cv
484.402 331.426 481.635 333.053 481.665 337.012 cv
481.697 340.972 484.514 345.765 487.958 347.718 cv
491.403 349.671 494.17 348.044 494.14 344.085 cv
cp
.147219 .0154116 0 0 cmyk
f
430.337 379.131 mo
426.497 372.599 li
413.963 379.967 li
412.158 381.027 411.556 383.349 412.616 385.152 cv
413.677 386.957 415.998 387.56 417.802 386.499 cv
430.337 379.131 li
cp
0 .912535 0 0 cmyk
f
431.108 377.391 mo
431.095 375.683 429.879 373.614 428.393 372.772 cv
426.906 371.93 425.713 372.631 425.726 374.339 cv
425.74 376.048 426.955 378.116 428.442 378.958 cv
429.927 379.801 431.121 379.1 431.108 377.391 cv
cp
f
445.039 354.332 mo
443.16 353.267 li
442.08 352.654 440.653 352.808 439.14 353.696 cv
432.698 357.482 li
431.483 358.197 430.502 359.926 430.513 361.337 cv
430.538 364.561 li
430.542 365.102 430.278 365.723 429.89 366.18 cv
430.131 367.674 li
428.526 366.754 li
428.53 366.751 li
428.297 366.634 428.149 366.363 428.146 365.967 cv
428.12 362.743 li
428.098 359.803 430.142 356.197 432.677 354.707 cv
439.118 350.921 li
441.27 349.656 443.301 349.44 444.837 350.31 cv
446.716 351.376 li
447.796 351.987 449.224 351.835 450.738 350.945 cv
476.701 335.684 li
477.037 335.486 477.34 335.47 477.56 335.6 cv
477.56 335.598 li
479.161 336.516 li
477.79 337.044 li
477.6 337.62 477.197 338.181 476.723 338.459 cv
450.759 353.721 li
448.607 354.986 446.575 355.203 445.039 354.332 cv
cp
.657221 .328313 0 0 cmyk
f
444.787 354.197 mo
443.707 353.586 442.28 353.738 440.767 354.628 cv
434.325 358.414 li
433.11 359.129 432.129 360.857 432.14 362.268 cv
432.165 365.492 li
432.171 366.258 431.641 367.194 430.98 367.583 cv
430.32 367.971 429.779 367.664 429.773 366.898 cv
429.747 363.674 li
429.725 360.733 431.769 357.129 434.304 355.639 cv
440.745 351.853 li
442.897 350.588 444.928 350.37 446.464 351.24 cv
448.343 352.307 li
449.422 352.919 450.851 352.766 452.365 351.876 cv
478.328 336.614 li
478.99 336.227 479.53 336.533 479.535 337.299 cv
479.541 338.065 479.011 339.002 478.35 339.39 cv
452.386 354.651 li
450.234 355.917 448.202 356.134 446.666 355.264 cv
444.787 354.197 li
cp
f
432.06 362.8 mo
432.084 366.023 li
432.074 366.089 li
432.134 365.887 432.167 365.684 432.165 365.491 cv
432.14 362.268 li
432.14 362.176 432.154 362.08 432.161 361.986 cv
432.1 362.262 432.057 362.537 432.06 362.8 cv
cp
0 0 0 0 cmyk
f
409.559 311.282 mo
404.342 311.282 399.125 310.132 395.145 307.834 cv
387.183 303.237 387.183 295.785 395.144 291.189 cv
399.124 288.891 404.341 287.742 409.558 287.742 cv
414.776 287.742 419.993 288.891 423.974 291.19 cv
431.936 295.785 431.936 303.237 423.975 307.834 cv
419.994 310.132 414.777 311.282 409.559 311.282 cv
.570672 .350164 .106935 0 cmyk
f
432.752 289.445 mo
432.752 282.934 li
431.523 282.934 li
430.418 281.033 428.58 279.243 425.958 277.73 cv
416.902 272.5 402.217 272.5 393.159 277.73 cv
390.537 279.243 388.699 281.033 387.596 282.934 cv
386.368 282.934 li
386.368 289.41 li
386.369 289.41 li
386.354 292.849 388.615 296.29 393.16 298.914 cv
402.217 304.144 416.902 304.144 425.959 298.914 cv
430.488 296.3 432.752 292.872 432.752 289.445 cv
cp
0 .912535 0 0 cmyk
f
425.959 292.402 mo
416.902 297.631 402.217 297.631 393.159 292.401 cv
384.103 287.173 384.102 278.694 393.159 273.465 cv
402.216 268.236 416.902 268.236 425.958 273.466 cv
435.016 278.694 435.016 287.173 425.959 292.402 cv
cp
f
425.959 292.401 mo
416.902 297.631 402.217 297.631 393.16 292.401 cv
388.82 289.896 386.582 286.643 386.402 283.359 cv
386.206 286.927 388.444 290.531 393.16 293.254 cv
402.217 298.483 416.902 298.483 425.959 293.254 cv
430.676 290.531 432.912 286.928 432.717 283.359 cv
432.536 286.643 430.3 289.896 425.959 292.401 cv
cp
0 0 0 0 cmyk
f
398.381 287.367 mo
397.99 287.142 397.769 286.835 397.77 286.513 cv
397.793 277.788 li
397.794 277.123 398.731 276.584 399.883 276.585 cv
401.037 276.585 401.968 277.126 401.967 277.793 cv
401.948 285.026 li
422.943 282.456 li
424.072 282.317 425.179 282.733 425.418 283.385 cv
425.658 284.035 424.937 284.676 423.81 284.814 cv
400.29 287.693 li
399.673 287.769 399.031 287.68 398.541 287.45 cv
398.381 287.367 li
cp
f
289.695 215.323 mo
272.464 205.375 li
289.695 195.427 li
306.926 205.375 li
289.695 215.323 li
.477638 .319829 .131411 0 cmyk
f
306.926 192.745 mo
289.696 202.692 li
289.696 182.797 li
306.926 172.849 li
306.926 192.745 li
cp
.139773 1 .00201419 0 cmyk
f
289.696 182.797 mo
272.465 172.849 li
289.695 162.901 li
306.926 172.85 li
289.696 182.797 li
cp
0 .912535 0 0 cmyk
f
289.696 202.692 mo
272.465 192.745 li
272.465 172.849 li
289.696 182.797 li
289.696 202.692 li
cp
f
283.49 191.944 mo
278.67 189.162 li
278.67 183.598 li
283.49 186.38 li
283.49 191.944 li
cp
0 0 0 0 cmyk
f
182.502 393.696 mo
164.563 383.339 li
182.501 372.982 li
200.44 383.34 li
182.502 393.696 li
.477638 .319829 .131411 0 cmyk
f
200.441 370.19 mo
182.502 380.547 li
182.502 359.834 li
200.441 349.478 li
200.441 370.19 li
cp
1 .866484 .240818 .0951247 cmyk
f
182.502 359.834 mo
164.564 349.478 li
182.501 339.12 li
200.44 349.478 li
182.502 359.834 li
cp
.147219 .0154116 0 0 cmyk
f
182.502 380.547 mo
164.564 370.19 li
164.564 349.478 li
182.502 359.834 li
182.502 380.547 li
cp
.657221 .328313 0 0 cmyk
f
176.041 369.357 mo
171.024 366.46 li
171.024 360.667 li
176.041 363.564 li
176.041 369.357 li
cp
0 0 0 0 cmyk
f
252.013 370.671 mo
250.539 370.671 249.066 370.29 247.745 369.527 cv
180.897 330.932 li
179.395 330.065 179.395 327.897 180.897 327.029 cv
244.458 290.337 li
315.574 331.396 li
317.077 332.263 317.077 334.431 315.574 335.299 cv
256.281 369.527 li
254.961 370.29 253.487 370.671 252.013 370.671 cv
.477638 .319829 .131411 0 cmyk
f
245.817 263.576 mo
245.821 259.332 242.831 257.603 239.154 259.722 cv
176.633 295.743 li
175.621 296.325 174.801 297.744 174.8 298.911 cv
174.799 300.078 175.617 300.552 176.629 299.97 cv
239.15 263.948 li
240.809 262.992 242.156 263.773 242.155 265.687 cv
242.149 272.679 li
243.362 272.603 244.579 272.602 245.809 272.623 cv
245.817 263.576 li
cp
0 .912535 0 0 cmyk
f
176.606 312.542 mo
239.126 289.76 li
242.804 287.641 245.8 282.463 245.804 278.219 cv
245.809 272.623 li
244.579 272.602 243.362 272.603 242.149 272.679 cv
242.142 280.328 li
242.14 282.243 240.789 284.577 239.13 285.533 cv
176.61 308.315 li
175.599 308.898 174.778 310.317 174.777 311.484 cv
174.776 312.65 175.595 313.125 176.606 312.542 cv
cp
.139773 1 .00201419 0 cmyk
f
175.25 312.626 mo
251.304 356.634 li
315.695 318.233 li
320.803 310.608 li
320.273 313.311 li
318.9 306.237 li
199.374 310.797 li
178.315 309.44 li
175.25 312.626 li
cp
f
177.772 299.346 mo
177.751 308.707 li
251.257 351.233 li
253.242 342.312 li
177.772 299.346 li
cp
.0699779 .680964 0 0 cmyk
f
319.856 303.228 mo
243.923 259.297 li
175.462 299.109 li
175.321 300.088 li
251.365 344.083 li
319.856 303.228 li
cp
0 .912535 0 0 cmyk
f
295.648 325.787 mo
313.501 315.197 li
315.005 314.14 316.185 312.004 316.187 310.218 cv
316.199 308.815 li
316.2 307.682 315.726 306.949 314.995 306.737 cv
279.851 326.288 li
251.231 341.768 li
251.257 351.233 li
295.648 325.787 li
cp
0 0 0 0 cmyk
f
253.797 342.632 mo
178.346 298.981 li
176.747 298.055 li
175.286 297.21 li
174.988 297.758 174.8 298.361 174.8 298.911 cv
174.799 299.485 174.998 299.889 175.32 300.084 cv
175.321 300.088 li
175.332 300.095 li
175.338 300.098 li
251.365 344.083 li
253.797 342.632 li
cp
.139773 1 .00201419 0 cmyk
f
250.355 356.085 mo
251.304 356.634 li
251.479 356.332 li
250.888 355.867 li
250.355 356.085 li
cp
0 0 0 0 cmyk
f
250.38 343.511 mo
251.352 344.073 li
251.109 343.543 li
250.38 343.511 li
cp
f
252.677 339.738 mo
315.198 303.717 li
318.875 301.597 321.865 303.326 321.861 307.571 cv
321.848 308.974 li
321.844 313.219 318.848 318.397 315.17 320.516 cv
252.65 356.537 li
251.639 357.119 250.82 356.646 250.821 355.479 cv
250.822 354.312 251.643 352.893 252.654 352.311 cv
315.174 316.289 li
316.833 315.333 318.184 312.998 318.186 311.084 cv
318.198 309.682 li
318.2 307.767 316.852 306.987 315.194 307.942 cv
252.673 343.965 li
251.661 344.547 250.842 344.073 250.844 342.906 cv
250.845 341.739 251.665 340.32 252.677 339.738 cv
cp
0 .912535 0 0 cmyk
f
250.821 355.479 mo
250.822 354.312 251.643 352.893 252.654 352.311 cv
315.174 316.289 li
316.833 315.333 318.184 312.998 318.185 311.084 cv
318.198 309.682 li
318.199 308.428 317.62 307.665 316.756 307.554 cv
317.034 307.919 317.198 308.44 317.197 309.102 cv
317.184 310.505 li
317.182 312.419 315.831 314.754 314.172 315.709 cv
251.652 351.731 li
250.641 352.314 249.82 353.732 249.819 354.899 cv
249.818 355.783 250.289 356.268 250.957 356.197 cv
250.87 356.001 250.821 355.762 250.821 355.479 cv
cp
0 0 0 0 cmyk
f
250.844 342.906 mo
250.845 341.739 251.665 340.32 252.677 339.738 cv
315.198 303.717 li
316.781 302.804 318.236 302.608 319.38 303.017 cv
318.157 301.975 316.289 301.931 314.196 303.137 cv
251.675 339.158 li
250.663 339.741 249.843 341.16 249.842 342.326 cv
249.841 343.211 250.312 343.694 250.98 343.625 cv
250.893 343.429 250.843 343.189 250.844 342.906 cv
cp
f
221.928 304.095 mo
256.423 284.22 li
286.34 301.528 li
251.845 321.402 li
221.928 304.095 li
cp
f
332.239 406.199 mo
323.19 406.198 314.139 404.205 307.236 400.219 cv
293.426 392.246 293.426 379.319 307.237 371.346 cv
314.142 367.359 323.191 365.366 332.242 365.366 cv
341.291 365.366 350.342 367.359 357.246 371.346 cv
371.056 379.318 371.055 392.245 357.245 400.219 cv
350.339 404.206 341.29 406.199 332.239 406.199 cv
332.241 376.398 mo
328.081 376.398 323.921 377.314 320.747 379.146 cv
314.399 382.812 314.399 388.754 320.746 392.419 cv
323.92 394.251 328.08 395.167 332.24 395.167 cv
336.4 395.167 340.561 394.251 343.735 392.418 cv
350.082 388.753 350.083 382.812 343.735 379.146 cv
340.561 377.314 336.401 376.398 332.241 376.398 cv
.477638 .319829 .131411 0 cmyk
f
362.462 366.621 mo
349.848 366.818 li
348.914 365.604 347.589 364.465 345.864 363.469 cv
338.927 359.464 328.02 359.154 320.462 362.534 cv
312.967 355.484 li
301.425 355.665 li
301.995 355.292 302.581 354.924 303.199 354.566 cv
319.239 345.307 345.243 345.306 361.282 354.566 cv
364.233 356.27 366.635 358.168 368.5 360.189 cv
362.462 366.621 li
cp
.293065 1 .0738231 .00131228 cmyk
f
301.425 337.347 mo
301.425 355.665 li
312.967 355.484 li
312.967 337.167 li
301.425 337.347 li
cp
.139773 1 .00201419 0 cmyk
f
320.462 344.216 mo
320.462 362.534 li
312.967 355.484 li
312.967 337.167 li
320.462 344.216 li
cp
.293065 1 .0738231 .00131228 cmyk
f
349.848 348.5 mo
349.848 366.818 li
333.254 353.296 li
320.462 362.534 li
320.462 344.216 li
332.24 338.502 li
332.24 338.502 348.455 343.466 349.298 343.677 cv
350.141 343.888 349.848 348.5 349.848 348.5 cv
cp
f
362.462 348.304 mo
362.462 366.621 li
349.848 366.818 li
349.848 348.5 li
362.462 348.304 li
cp
f
368.5 341.871 mo
368.5 360.189 li
362.462 366.621 li
362.462 348.304 li
368.5 341.871 li
cp
.139773 1 .00201419 0 cmyk
f
362.462 348.304 mo
349.848 348.5 li
348.914 347.285 347.589 346.147 345.864 345.15 cv
338.927 341.146 328.02 340.836 320.462 344.216 cv
312.967 337.167 li
301.425 337.347 li
301.995 336.974 302.581 336.606 303.199 336.249 cv
319.239 326.988 345.243 326.988 361.282 336.248 cv
364.233 337.951 366.635 339.851 368.5 341.871 cv
362.462 348.304 li
cp
0 .912535 0 0 cmyk
f
316.663 346.47 mo
316.663 363.309 li
305.743 360.692 li
305.743 360.692 306.385 350.839 306.617 350.576 cv
306.85 350.313 316.663 346.47 316.663 346.47 cv
cp
.657221 .328313 0 0 cmyk
f
324.926 363.309 mo
324.926 381.627 li
323.746 382.884 li
316.049 378.445 li
316.049 378.445 317.242 364.462 317.383 364.181 cv
317.524 363.9 324.926 363.309 324.926 363.309 cv
cp
1 .866484 .240818 .0951247 cmyk
f
310.062 358.579 mo
316.663 364.787 li
311.164 369.138 311.815 375.272 318.617 379.199 cv
320.481 380.275 322.631 381.084 324.926 381.627 cv
318.103 388.896 li
324.149 394.581 li
316.472 393.695 309.149 391.537 303.198 388.102 cv
289.409 380.141 287.487 367.931 297.406 358.776 cv
310.062 358.579 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
324.149 376.264 mo
324.149 394.581 li
309.18 388.801 li
291.176 371.624 li
291.243 352.173 li
310.29 367.271 li
324.149 376.264 li
cp
f
310.062 340.262 mo
316.663 346.47 li
311.164 350.82 311.815 356.954 318.617 360.881 cv
320.481 361.957 322.631 362.766 324.926 363.309 cv
318.103 370.577 li
324.149 376.264 li
316.472 375.377 309.149 373.219 303.198 369.783 cv
289.409 361.823 287.487 349.613 297.406 340.459 cv
310.062 340.262 li
cp
.147219 .0154116 0 0 cmyk
f
324.198 388.801 mo
330.211 382.394 li
335.794 382.733 341.585 381.67 345.864 379.199 cv
350.283 376.648 352.103 373.165 351.33 369.845 cv
365.652 369.621 li
371.158 363.755 li
375.975 372.022 372.689 381.516 361.282 388.101 cv
352.901 392.94 341.798 395.245 330.818 395.027 cv
324.198 388.801 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
330.818 376.709 mo
330.818 395.027 li
373.302 371.484 li
373.302 353.157 li
367.099 355.665 li
330.818 376.709 li
cp
f
324.198 370.482 mo
324.198 388.801 li
330.818 395.027 li
330.818 376.709 li
324.198 370.482 li
cp
1 .866484 .240818 .0951247 cmyk
f
324.198 370.482 mo
330.211 364.075 li
335.794 364.415 341.585 363.352 345.864 360.881 cv
350.283 358.329 352.103 354.847 351.33 351.526 cv
365.652 351.303 li
371.158 345.437 li
375.975 353.703 372.689 363.197 361.282 369.783 cv
352.901 374.622 341.798 376.927 330.818 376.709 cv
324.198 370.482 li
cp
.657221 .328313 0 0 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (Online_themes_2_04.eps)
%%CreationDate: 1/15/2019 4:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3X+]fC8Z_YA=/jZO$pE_,2kIJn/#;('p".Lp.%B(u'&PhRPj5^\p=Yb`"B!("qZVbrQ=eUFE*"8Y`+.^Y*C%CQ3DMq4G'H
%Tbg`=h:2ju@2)abf22MF@qk1Qm4du#oddV6b;u[m_b_p%+kglP[Gfc2=m952NUB*E=c#52;R>4rGLd+t+&Sf;(S/I+W:2FBf:.7+
%r-D>QKJD>LGnS]nES,)77GWPq<2`YYTu!on0FB/Bn%=(L;5s;inH"T0X'8YE]L,3U'Dc\_GImi7X@h-0p>52Xd&[tHU2@EKVSX.m
%G#d.e0+,)&(KXHCdk32$p]s#Hg8=Pj2Dk1ci7%U;gFE(WnP@!iTC1_hhNl.=4c3H@46kCc%=eOGJCcOr/-PKGe>md2,)*B?I-ocD
%i"R\qr>)h`BTuLnBJ;]n?gO-E,Rrb@WoF&cgYb$gXqgS\_:CV+#]L64Fg.*^@DZH4%o<KH^m8O5P1\3#[]Z@uA`jtPJ`DdNX&_CK
%`["Em@2'//<4/g%MaN9,M4l%51ecH%U<Zh>[%`/i9N*O3XA.*-U6?'[Ke`R5MuR*64HH7Pgu^BT[C\r:s+5&i$;s.Jc%iuYgj[eP
%FTF^dg0DYN]k0.)1SNgG_g6uF-<$DjH&q!aI3*SuQ^[Rg13TeX.,rm;hUQN9,Aq_DK^Qs2.rH=c?PB*5JA:L*(/e!gMl*XZ"g&'c
%[ro%8R\gVueUTkYQ4L5#cA$Cs<GZ4E!N=%f]67LrXK=N+23t+[c.QpbWi>"1>/=WcKMU!Xr`o!6_$2**]5^3rTkYsO]lYSi.IJ5H
%23'>9=/V%VL.'O]Jnl)@"Nlc+Sfm;fd&agY#$h"#_>hn/X]FAPY2d-*iOeF8H`88oFWE\h*KTJH*n>CV1^n(X)eN7*c*Hi*ARRO@
%_JYYSL14'4`BLG_I9cP;_d+(j\Lr'CDto@K8gWh).cJ`P$'1<CfI%*tBGang%1bhm&;G!4".Feb+C],lUGu3mf6%pj+4q%m_KY@$
%GR83>0glB+Yn&%4mtA:q#9/VHiB.$*V!oD&@`2_S,?";3\DnBA7_E\?7T0KlG!jdK*W(L5[L"Pun;PeSQAef<cA"+@)$14o"s$p?
%J/>:"?._C.L,e0S:;n'l0PAEcj7!G"6Q?9-)/7`2`"Cns(F$r]!8fg+fS&_G%<9=1`_7^3N498t>Z8]F!A>]iY`=:UBTLsdnH<\G
%p'^s'Sq4m^Aoe?gYqG#Xp-Ah8N$<j1S70\Q,EDPZh3b8gNf5T,0YV$=6kG(\.2SGkaN)k>OtO[U#`Xp-!hP5W'+1EYK"$^8$pI.-
%[PB'K!A>97n71Bd2mGQ9Sk["\Z[Ws>VPm1o)=JGofG#M-A"oK.58s^BL%_Bi-A[rP!L%W!"0!Qon5Pj0k,6uMZqe/_0F;dJn<>1"
%>QM-4R8(n[WiADcn<9>6Q2f;iFt!<"rsXPY:-[Dr(iGeD.K*fWCn(Au5M89A@D<g1=l&':4HCLT5M89YB>;nkp()l_!Gb:lftVQq
%rD#T15:--Gm6'qNh\gpsDt/a6,*&*h1<_HEi2>aup^G'UdKeOSM'Ymc$:k,Q$03uaSo*ICO8@q$nDA&,J(NIP%'InU`m=`60SeR=
%J*)>**4\+c?jnVp$A2;f1pJCDJG.dbB1I.DO]2T;S#nl]b?2t/7\AYLO6!j&T8r0(?5TX"2>Ia"*KI)Y\QW[5&bnUC,lga'I:2hY
%kSSK29:]R[Sn#P]6)#DFTjWLmA]<(aPN2'jL'F;b.N@/u2Zc_CBqa\K0F_('US`eRlg]ODR'%%\6!OM!369V:1'2=X-60KPS;qR/
%q;ac(JI2D:7(+;Al`dA,-On*2JJG?N!'eZZ)+,4/b3f'7&H^:thU&aM<Q6bu6ajW%N@cDB/n,6AI"<(4_/MMQQSfRNJd4si^EI8]
%%D^O;\/_r[!$1qji/s&,!g&*HeQgSb@-U!ZSR`15&9pIh'q`Eg)!]abC^L>h0$4oXa*'S*hlqgBHR(SHEN7r2.-Sbe-4CTPJ9Sse
%c!_MV,U?t8j0/UeNo*P&es7=aMd7Y:37rhu@LKVi+j'gu*-DZ$CEs<"d:'A^,hjaq1a\%^',*)Ygju./daQ^.Le);"%[;Je%c`7P
%Tu;ZWaWs,b*-DXg_5"0C-@TD3s5e!kTVbB1c6*4'+lI>u&.)5EKq%"`kEeh2a[_d:!Fgr-i@u0=4]+S'F<1IC#Va\@%[%=d_"a"S
%%O"+dQu31pJM4"(On<Vn5meVbIt;&R\OsSO!`VYK@6KTN%[f;>&E-5&MCMA`dXY';aN#-U\<BTP2j-<<71Orc13.YSGP\G*mK]c4
%2%D2ck:$M[!4)EZN$[?lg_)rOOblF&;eq:Xl\2^#>mA(bHq2jVBla\N`H7O/i?u;?r6=.fA&[N`+R9p!^^^L-N$l)X"7i>b!GFCh
%B&OilZ%:US.kMVGZKOhKP7'+tAJ:Ej*Ytud@BddaB+pPXAoUE&aFoY/FdNJ$<)IU.LO3,;"=/_u0Z*Un+!ec\n@PU?#a"hkbZHl!
%"[#Zn!n/<DE=knBZcae>`"b\)pltW!QN8KC-8SB7?X1oC5'UuALKsBiAut2-1I:@]&km[c/G-IJ6C-"@)0Y)Q.r6VCO5QHJaYcp+
%`<JTX;Y-1K5a\&lXDHXZ:$4e%HN!>d.BLb:TF#]GRo%+d%i*oaWJ!NN+gZ<]_Bt)"lP&/Il:J9tiH6$ZLg''U3Ugj-R+5f>W3_Zr
%&i^9(%9/UQ$dt^uAk@bspgkfu%a.59@"J5;$DZs4&P%Gk?kEUc@7iBQSkt5)WKc;!/1>!2@)t#rWT./Q*Iu@g`@5.%ck,o+TZh,G
%/mDiJ4A[Wlm?eHii<Eqa,?Vic`T*j]"X<dDW"E\ioF;bf:eKAZ;^Rf'?o#u"@TuSa;HB?&)^!A<.V]oU6lP<S9eTK#120oGM@+#L
%3$Ff6<@R9'X+G/QKnZM8aWbJ)dF\/N)G]@[dhRR!=:.g[O!;PcbXdVY%`O')4=LQR.#uqpUDC_i_`tGLltcVCEs+InD`[rk>Cu<m
%)RptbD"Wb(0M2TO#(Ibo@"i$(2Ao1>0GAt>SF."9L4:EI;&Wh%#_Rn!i;c061'r]U'E]nTaZbJ.'>/DER5O)ZZ^=FkJ4*K_;tl[#
%!oYDm0KA=,F$Pm+B\c&m0!OP/Lk&#_@OkMbM0+]F_oQMj$pKN,/E692Yt?="I&\fMWGtoEadIE<nf?]]Yan=??&6gM8pMUk8<1hb
%#\iKFJ\$Qm(a0RN1GgZi+\`57[Z3eKZ?:cXW7)Ff+h2)1AU^$IB-]%G-Z9g0#`lkGTBWu4oGT<OJir`=RZrd07Z*=kX,J`0+j]3d
%J?l-uWT7(bLh6oG97.O_Z_%Y"oW]`3I2LFXaV'uV+;q`>knZ'Xij3!q;5m^jjX%>V-fkASC:ukpJa]O&L;?nd9I<h?R*=acnPdI'
%lk@Jb^<>S0aZ*,+@I]L3IAY1e`'BGVnf45T&[LbaYKdu^>DuuOpNFG&OIER&rTC8FX;a20'ICXkrK!<[j[A*T.O%Q.7iO!FF_8-@
%(*3b)`A>!16K$"r$H=iMUY9)p%``0X&;X;r$'O[O3XmhtAM@\<A1huHf^6K^MIR!Z,!,s$KgqH8X^b'mD$tQI86er$G3"!P5Rt6A
%(fU9>nspM1U]ECj]#)NsWu*;/AqKti%`d3n)&/JGP^aAtFHK$j.2hq1/-/t=Xc7fIgX+POim:7)kn[9X`&13\"Un5K=97jT38Cii
%BIIR<-.R3nYH8A'-723`%H0j'T4[nXpEXke#ce.Hg8Ol$YYQG6ITGllIelb3H-R53N.sZo1hOSfNT<>4=\_,2%_V-QlrRX''M27<
%U]c.`Dhl0E,$GbD]=]WTV84%GQq7iQ66\f9aF4JY8GPK/$@3>/UI$9G7Su^NL^gT?bNQ7I4U!CqeX3E$_d9?CMYpU4&rAFNMD3E]
%RG]cnb#ka-eOGZl=t$C;HAVH?&T*a@(:r]\gC0o602FZSaUnZ^cV]k9k`Z4R1;Yce:4QC>aW1Tl?Q,<J5@3YH9&+,8<@Mtr31bjP
%4R`kk%%.mJBTURf`kat1ECF&lN&CE5EnHd>)tQ^T=]tsK0n%.QPj"<0!t:]UnHYd]()kS%f>jloWu9(XAUuOh.mZ(8-O26!N8]Np
%;cr"Fr.tkrk`1I3P),9No$oN&#h$jL?!Yj&d#qcfciE'k0ZU&$`+.=*,YmVAKHhUTj"a1KKdKn)p]>Z--iqdS3Aa7n`0(pV5k9IO
%o1[je/4)/pNhoeI0gN\-1QlZ&<@4#^;cu!)D8o602c%5fkX98%.\[?E]X,0iQ[(5U2(0G'\:=c#R"ljgo4;';"@\qM5)uG.7F7Js
%#<!/gLnUc>9"pC5!hP[a&t>5@IP+!?6:I[TV7qdD5l>mub[%GGj[PTeCO"MUd)s91bmF429Pc+W,^l##<kf&h<b>bY97aDZ!p(&i
%/J`KVl;Ue"&VVC0X@EFX<Z.cb/?*27J`:<r#WN@bFNV>!;#rDtAK48JM$=Y/R9*!<.W9\4VcJTX-CkI9!aFPb,-nu-7H3P=*dCV.
%-?9nDEOh$UJ?@(*9I)+p2_u7<fgH:[n7$PWM#*q3E_G:kiCGFGI?A"f]I9gTMmS"g`b@YT/hhb+nI2mfi@hKj1<*#9$W7cf<hHdd
%WVD","Z'U(%gaHD^uAD,S0@,f#9A+iG!o)`.2]7p0ciW<,na$e`'"f3]-NV7dY0L^XQ[]a86HY:H"83N_n\N)92942M.l*7$V2-q
%M=P\],PsRY@&XF)iBXJ]1)Nl6"S%WhR+Y\EP9o5q-4@)Sm+"DFRh4(D/`)S1ckmaZ1D,&jmQ7hSoAIP]Wo'g,&g3Z7BlTMr>aU$s
%YNKV;#uubD:pR4M!M,I:04>L26k3A=>+CjcrOC4/X@gngZE/Wb5ggNgS=J]I+HqbG!V)]gBRg6i'M]>JAe&[)Gi_ECG;D64P/\7g
%jl!^FNY3e#Tt9EaJRKs9)[7-V;s/OP:`bu`0hk0D#str'(\-<50tBYd,1*Ut(8#8(`An<*,Sm?LP=g).6_rF0*68ibE%r%=0:hgP
%GTRYI',E>,82/#93tqj2VC$msr59g@Oci)_-F>ldG,;Rb$>dR+QN\pbg+=%E#%`sV8D5Up/;.W!7&3le0F7sFk);Y]36)Kh2`m7-
%1]WpdA:H#Y5\-'/XC.2f&,]rO+=n];c`HT@?G+@<HHi/iedXdOYU>UjWQ9@@2^CO[C`T>g7LGk')M&13\`u/[),5dM`M^!T8lqk)
%JP)F`^(C+HW7I07UX[V%B6]+D&@)fQ\]9rWo&YC]9u)PU;eUE5_&R&0=UuQ/gE@Fb%g#7`8V)S.nO-9O@X@1B.^bSIod%7cr[s=h
%eHR$PLrGPqRW-Yd'C5""/kikO\TLM`1#6?(Ag"EOa]XOtNTJNQ'N*n_cD^#`ljT:mkCdM/]KVk9\3M?1a<k=CXQaO<T%"5&BiNS>
%6r>)LCKBdUiU*=s`c+&ZQ>%CS(fefAPXK*&MOc/ib>:l="Xf5F:)C7Ei3t#d.I+eb!<Y,Y%qUX>,bCXJ.h2=iC6M%EOZJa[:XDG:
%._T(=o,BnsTZ0-hcSR8:E5F76AS30joU3*#Wm&h#k/(MNZ"lMT.dT++CkMjWIa6[U`>R\-Eh+A?`A"sXl!eheJ;fH-\YPFF)]Fd=
%F=pdK37A:eTJd?e:_K!R&(BX;P&XOD<,0DL]Xa6&H9um#(:l6%:4]F]]WF/Q8q!i#d03idj+QBQcmZ-#I^g#Y\*ZJ9Gp<NiMu5SS
%M&KU1^Un1JRi68gkg$cfge6`u'sCKt?VAWo]WhI?:hSC`+1.O1juGYprh*akEOXQrP?jJM%4<ft0VI"4CZPNnirqO,S/g%*E,`/>
%m'X8?B?`[@=SAc>e%"m.Y&p0#g4/-t@K5sMr4$*9rhsVd8$E:AFT_UoQ2R*XCGRPULZ>7d`s_6a@IjS93mb\"-FB8DO);eiaa1q)
%f"+'H\D:=50!Ks33_I2e#_^M&Cl8BD")NheBEB$W<K3dG/tb<W+'lnBb/HSKRn`EOX,$AH/J*[Dkbn4"1HpW@@'+O&O'l92+-7SQ
%P4HOjOb!^L*dh,m3MXCP.Q>)^ok"T`B@GuDi1M,KU:*J!T3qUO(^rg@og*$hOdY8JJh)^0RX`/r#Y<a!Rg\Agh._F^f"M[9gr']N
%Tj15Zh2?klNuQWp5GsNVZ[kLZr%pil,eu$_`)b#,p-5]TS+TtJ.M[+_96Z!'8/9n-\DSkDaD<@$8iE@c)$H3j7Uo+STGCG[6F1F.
%#NBFd2H)mC8*t2r;NHlfFLlHE&M-BDHL8?c[4Z3ZK&?!=/dfYDB)NOm>E]1b#b<T9!/'#u_&$)W,aVX2@4E^/D.8_<07f&.jqO\1
%ghuI;QrO#N9Jnsjm$>FX8U3K()mA(/!<$,!8OiY^g#F^9f!kp!$rWO5J];B8<[#TM7m[q'+W399D)5;@kqIdD>r%(9iu%Aia;-[-
%@n=K'I*%i`-<JY_\QXVfDM5>9gZReh#\'Rbg?AaDKT&*q26&p*UL(&AZf"g-P/@i;T9Fl;(.5COgcF29Jp'3F;$ql"!qEZ<5Hh6h
%q1i;G)fg>>foE'i#g_*&'O0O?CkHH,@;3<:gU?nuga6qAcI`,OD;d)&ph,E;]3-LS/#Xd[n8%2;-j?a2=9&3Y_k2E@rppXJE6@e[
%?,]h&"o5=%_om!.W_&V]"Y\VQk_9%!qX[r6?6sn$n1(crT7??K+oSZI3I(dr="/FjaigIT?!,:)(T\'%+qt:n_PI9l$GNGE<!N+j
%nFGQ"!J$2?_i%g0TK@BY]':\eBOg_/">:9lOS."H<Qd:OTUN":O:&n+Cm?R/nmG&0Z7OH[Y_6IOMJea)^atnfM3n+lVF@tm)5_!q
%7VJ$G_!qC%_slRf.Bm4uVI:<L`XG9Hos.oPIGN?m&2FoP:'Zit$428adQB!3fUAY))MkSoW0"Ef*jEKVo+0AP@<!%A$<:*K$;gFF
%ED62Is,n7"G\N&<Qul&VUNh[""A5VGWX;Q>!"BK<p!l<;\+U[>[0%9@nA9L_#5B(/;uf!f>g`^;0GL14!>MfCAn7-V>+qnqj`J/W
%c_QJeJ@9"s-3n:TQ4;@<J.$oC!aiaO"-79X(tMjl3s6+FR)!,L\F$'`P2,=J,<"DoM/q`-T'#:/M<kFto":,%G_*'nWiop_cj-NO
%O`>d[?6q]u:f?5JQ?9bJZ"/Ea3*>^J=/f.OKm6I-!2q,?n1k(G0sC`bVhJ2$J8Ch54;`ae//;K[i#(t5kC;_Hi.%TaW1SH`r0KpZ
%@&#j"b8,RQ)^^Zji"BLLN#;&@ZD%r?<;KQo@Oc=nqL_k;rlW%4')e(\#(S\OEVsn:*>Aq]Cj<GQcXp84^aFqdnqXh!)#R=QV8OJ"
%.";,03W4pn'#t^+1aKJ%X?]7?eI]Z*"gQZNn1@I@'RgRG^BD\Q-^9,`)Q:.HWc!C)4(,6S:k)FJ:gZ@2FjNBHQqH#('J?><%uLs<
%ePJgt$r@Im.gT1b9;j+J#kV37,_6U2<<3[9F`Fq.PX$;5TJR"SNQ)\<%au^L/nfeH`XbjpKoQ5?Uk&jj?mJU/*)Imk<2nr/#UbWt
%,8Xa.e*iI109MY56+Krm0*ADd"pK'=`I+On?J,]Xd54ZW"4RaDNQr63ZM@2Ir/d.;lVfa'X':)]-`NTW<R!sD"#VT?'J30<n7$PY
%Lep"Q7ThB[UkD>O6I,YOPX%r+R)=KcCm`V'RF+K<Y`8bl?A;M]X5g`boLWH1!%s24(GPnf%3Pj\n_#co-+\rc"0Cus(bbsZ1]V$m
%L+6k6#]r=HP^kCQ</BRciW?eeoFsPR%B,)/(6VlQET`ZL5*HtX`Z-&13p,drULUG:A,n8giQb3[cE>B^SWD&+rF+^P%$1nNi<A<5
%K[W;>6)e=rO.;i=JGVt[+J*L[:6<"P]_`;87Z^eqL!1F_=[YO&`N,ZZ+bFbl\Pq!CrkU;rNhKfL5]@#L*eMG.lEgmOAuS+AiBL]o
%18mlJCqttJ'+XP;E8:X70SoJEI8*64aT+q!RH0)oJkshQ;&nR@14`>3P(Df%!Rc_n!>7^S_P@=r,bY&7g&1qV?Kbsabb3Gk\O"?b
%8:!gU5U/UY+hBFhGo//,*^r=hEd!^>(!77`QB3\G.3r=M@j#>*<@DL%aZ<"_O>hsMT+*Pgd<Ql^G<3he8tV20&Yb,D%!8R('Q](?
%7UbQ"Dc>_q'G[il%W5q?J2l2/ruUq9L=(Z-&0/6jEsl(]`HEBb1mNZ((DTS%E>I?$jl@LXicbq@e'qeOND^K];qY5k>cMSe`_*D/
%i)WK!hO4m0(iE3kNF3G,MLR;d6:'f1H'TSYJDZq9(l%m&;ZiPo0/k#]&a#8p:LQNc<CJ-BX\,Tk:/o.F5s?,bVC8mK-E3.677do)
%@b@)'<t]c#P"D:AaNVS<13<LdWle#'KgH0']onVMLo>h-#3=9f>6i3/2N'Y?k1Z5E([dhSGi@YMP8A,.*;uLZ,gN!lHfjh.bNDW-
%\:&>o8Q=sF\<+[a2WY>5A^ZKQ/Ob@;1=X6C*?m,sY;49SP^pLs(oE*#j$ECu8Jcm0GR#OI,DT2>n'Xk71GA')`$$GBPDL.!j/"iQ
%n8^P-<!:O,Jti=OJEq_f-1hC9'+uAZ(&T<;*SdUWb_CXSCEW=aF$QdG)`k8S5RbaWr8\"),WRb.,&"Y0#bP+\O+t0le6FaZ3!q%2
%/XP+'H1@LG5<VAEBtr:3_1[5kLggLF7g^eN0R9amnn<THSEGCK,/k"*jP[ASJRV%[4.&-:PU"1E1,1(m?5tD7m#)K):=-=:L;s[1
%-=.6<K:bOA_U(9*=enh7II^JaM3rb^5AA+;_@d8,*)J2F`\\H`&KLtJ+,1^EO0VJ/d`TL1PQmHeZRcM@1WiaQH7?gDH4@ep5RE9J
%JeF/n@G/SLN!p(A+]"t`ShaM\!*Sh;jJf<.doqZ-=$<%Cr\)^C?TVaa$%j%Tb!6'$S:]#AJALad\QK^_?maYQ8si3HXt(F).!<kM
%IOX'eink#6"I+c'MlrbI(\<+pA`c$bk6>M]-=uG/Vq[H:4-Zp)kDnsN?Jt0!2W9\1ba^i,H\H`HEr$]DP.Q1,]714hC^L5G(k@0f
%7tj8F%[8@e#^BHJ`q5$Q",2#=#S:*oTX-*Cc<(j9$8rD2kc/MA1gnto-Ug@GjNG+-MjurE?fP]lHGPR=D<A65LAZW@1VXbQnlJ'H
%eNP,1)I<<_e38-=@q+6rm+^SDamTb(`W\qAeYOs68:Y72WAKQPY^e"Y)\]sO(h'?i[ANcF@"@lj'<hJY[D4KD/tYS_KFABHJ1@NV
%%Y8g+'>^DpnI>b3#";_u@F@B.,u:a%oQhrd@0_j"DhbZG(UnO8P^G-c_6:=p].]W'R(`g5$?!Zu[=:k0ZsHl6cW.XZ#?R[<[p;)_
%FlUdG_F*PN[G+Q.T?9U)?>[^llCeq6D)Joh6%&"t_!?%!i,Y$ah3.J3^0c,,"=l=SZQm1Soc>2q7``qgZm.UjU+=e2@*8+j3$g,h
%XcngWU50K*ln"d&S>_XVX]9EbM4LMtS$FjgM'"`spbCMON"Sf%L&XgW"gD;nOLU*^k82qoR#$d/NR$FhCA/nW2S@qbHk=VmM:<jc
%U=$U,YB6Q.E?:#dGFfS"]=mq&A@1'1VcV1hY+jt+$qO5M-_k`$FlKVGJ*Y(58fioCf7-uF24@%k)I3q;$,I,E_gUe@aC1t?1^1-c
%#6Mr0d:8puig!4::S:b/5s74rMN9.D,saYbp+pM,C5l*!0bYO8YA),1;7"lW`1-,afK:#46>1]?N!)sDU=kFY;7G6(JP+X=b5,"N
%?F?4B\l(2:])3m'-rlZD^nW#9/$(BZ]33GGN(%?faQs\1h9Vhen&Xj9(l:[n2sngA7u_DKfZd`3GLhd>($[H@[E]u(RjFi=8F71l
%h'07rldX3Z$@$W55,8^1q$a7k[,h8EPd'l;r,.<0k-YkO"/`qRDH6LlY2XnMEVhKJ0#IPJk:l'RNc2riI-g936:B@=%JO&I6&r><
%o__!45-$P1)pV,>hhn1Hd*(GdUqTb8%OY@*R:Tjh(PKY9^1I1;0?qdn>;[53Wmg$.UY3_`=-ZDHWe\ntcGLg)o@2Dk:tIS$TUPAQ
%']<mM^;K+p5-9&b^@X:Db7PbmKkI;`YN92#-)t&9;:7I$9"Rj#-BLU&:?1qN!C-$3/QAJ@hpIK)kd9AF2eqM,fW^sr6E(u42+MuF
%D!Y3K(UV_jSAI[Rg/TcS2M9\sSYrts%H?ia#iWm*?';fq2u345Xc)BIV#I:bOcdFA(2`Z:o;f3\hc7GDN-_$i/Sb'UZ'oMKE:$!F
%ba8<L$J;G\rU6i_9a.5J./!!%7bObjB[>h=O?%)W+@i!d16:F%:/UJ$'Kn*>iL.MJSRUlP!s^t"%f1#5@FWEl$kC;47$'4n'<c%q
%BAPR:m998D.dlGU=Q\1)k-,$h=sl=k-R,_8gZp9H1jQYK\'JP0jttEB1+3q$O;I)A([$m0of;(Q\%"$8+cF-HE=R86%XE%(H#X=^
%4=Hdies,ithK3Y\)rk)]-qB,:ESbq[hKX%sGa(X$S2XcE2kGTl@#OWr;c*H4E8EQE"fkfg46q%K;R6D\UQJ'd#"D9<I*5sWHL3N0
%$'-3NaV3WD]2&g<+*#!Nr-L2>FhA5"3ilANoj"?brW,qjMt1&a]R7opSoNLDlQ1n`pC2.8\M78ea;,MrRAuA1ZLBfG9P,p"A2@I;
%A+@Y:Grq$*lepmaF\oX&H#rq2X]^^slg;3nhJ>]AOluERos7*cCf*F?iLUkYZe5YNX;kjTi]@"[=ZquF:<h*G3H0lT>J'1^g,^YH
%3TW"j:np@qDSH(=*r\o".+-]/;;5?5]m<VX.M/H3i0)4l.6_iWE<W)mp2@S??qQadjNo?9q)&MaK0uN&^u\(jr1=b#8_69_*O7*+
%/.+%g_TS\Co'\!>n1kA%]^RBZeR')GQUTkE;0Z4X?5A6]Isp9eHK!8r\^"i"$:mZLiL0!=dS7>*pKBG2RBNjM\/d)KHc]riQ>+&l
%XN7`i^oVHVO_;"U=l6G-%j)Q+<m9!GBX@.BDqa(82g2ZfHEDN*eOJ-E(X@#T*QtNGa2Mpk$g0LG1i)4oA:D/&n;YoZd:*oiS$e1'
%2>Fc8_.g0,e$R'c?aeRKC%3d6/@MYmmWE&DE6p;k-:kYeOeK$Uh"/VJ)^<t1iiet:f.[ppXK"5;Bs@DpR.]XYRQ'PXYdr+`4:bKR
%)=tK)`QbBj/[i?[i1d(dC<ldd(HJQ^233fu:=2Yp_')UY:n;(&E'nM8BV(c;i\"t540I_YY$l3A(IRWQ(pEmXprp2"3ib3/<Hc@W
%g1`^M>cnlF;mR3=C>BtI8hjCpo-<-u=fgMfj=]VLolHlu3UrLR2%!4Mk#.+d``g^)l%H_?2=&Q[`a+(;USEIe79".'?+O1ImD`Kl
%Yh7ECk3bG5q]aX/P&l!Mq-m"3)>:V!/cC-d:RX.Z@,8VfV=Ya&@,>deR_nZ!ITQ;$1NuLJK^Epun]lO%4#\E?\=rfejA;kehJVKp
%q[*3?\(b$g7Iq**/RkG]%`mW>nki/*E<l<6Jj6(SBMn-q=k5.l+J4X_j;)s$cc/\"M`]!mf.Z"U]AsaQEOMCtiXYP4E/oi<aCiCN
%0('ihpr;"KdD+6kc=7%Rk:Rt'YCtA8m.KclT/Fpl*ht\Zr:mBjbb[__X9X@?3OdW(?0t_)dJ$oC\]^PAL"(+GIG1aBNBE9;R%(G+
%74#u'\^RJjL[Fk@&!5+Y]3\kEC#RWV*d)8Sb,A6qRG3_*hf5ci9,KIuVhNo/3s(,7^M)3h<79F/M3oU<:XbS&e?di:jD%!>Y@6=O
%QH;7YRtk9Sa"YfOle7$>SM=3Fc(gE9MI="8qsqspQ(ZlWp;S76gLfGWDt7mH!nlI\8),qDB^YW9=M5$1A?=pL^h8+_N8I]JRL2+Q
%s.fI"VlBW9]ZJ+<Y\+HkQ!>R-S9YRTE>R9dW<AGFb][lq0pqQj#`<nF6(5i5qKc$uo2\.H-cb%ro;4rt+&Li?%tq7^p+1*:[J"Mg
%k02jW@BGXOge9XfXiIX:efQ]]Vo<KSib"Ic_Hs!X31"6QBGZoM6HnR^bVnW_bg_>$RjTZVVg<=gV)W]mn8UO)FO'G>JRJaorn9:N
%b^@t$H?%Z_LRgB0nA1o<\rlWZoJ):dFNL"RY:hZ$T9\$I-'l=/'$K/8_;aEFoD.l$e`IB:1AJ2<nA.[V_Y9P6q-E(u5Mp<t_='&;
%b\sLX:ZpTE4Jt^c(]+-c0(b];`Ob;G5F4R*[@:6CS31q`Sn50JaCR/g<&UY076>D;UHDU38(D@V>Pk!^bL3QB.n3LuZW\U*2O6UZ
%39g]nc<SM?VhJ:q?R<$QXT!guR*<0Ys(PnUNq-->`IYR%<h1SD)U1_meZ)Sp=1rpEV\G?Z4>!r*[72.tfKutYeLQ!k4INh2F]q=)
%otR7D3Q)COg2>Ec)>g_2dkgDnc&ic'Rp1q'V"H%ap"Y,=mjWlWNS7Ab4o'M[R!HGDl_\OGQn,2.og6Oa4F8hJ-Q*\re&db>77@Y-
%\;l%s.kKEN8);VG6e;b\+5*g'%[PD3`f>P'Eg#IsOdhqmrXWm3S#4&.qbkXlcM_@Gb>BRqkrP/`":Lc)khKjB6WLE,VJDL7:8F:i
%U3iXnkkc0q=:PtNUM?otVuA>1:+I0qBq*:HCL_*@Eus9.2;>6kB"`J]j1O'^o)3UPB.YZA%MC<Dhnnq9/Dn*B5-T:/`\*^cAW(1V
%MeLim/Fa>XCuZee[7&V#K@AKa6W99tUQOa1PUTq%Oq3C3>E_a#B+ib9K>^3Kmt">-a4WrFmohU#e&Q^J3=Q`>gJ?']fT>P&Sb%$B
%`SB>sIhR!rb(IU5D`W#.SmRuTdsgn1I?$7Sb!)YI/a($E45D"SSoDsN9hXVdl6EoZLe5C[^apO>SO;TVO0bFAKEDirpc"U1s33io
%s%Y;P=7`+?lfAF/(Dci4'@Vmp%[sfE;l^]N7K,)53qFN2NS@Oo\&LDVZq'`$Tu>rAS.Z<i#BKfe50UnH3H*'X3,dMbou.S)s1Q]t
%*g>OJ<-iKF[R@IAOi<MDIj5Ycl[]i+6s]\iVr)eddl][N*4L&C0%H>8.(Zof@j_0Oi_kcTV&I)pJ6tDTlmAWC^ZSI;o90s6)J=M/
%iG*h/ZH1Q3\_8UtC;5!pa!k<O@4oh)eK)2^R.ZqEoYo'&,I*[*Rnn([WOf$A9Kh!1<&A2B'R"@Z73`<QMi,Nuk.L;_o8ALGU7sAX
%S68fJ();ft7:R)`)RO?)m^Jmqn"u[W3@p*U3+UdYHEXa@>b=%V[>p`\c%^8F.NQ(Hq0,e!E[3\epK4M7YC1_LDG4&fb2UNFF89@J
%m\K"V8Ed<U'Ce[AT4SMFGcnnKN&8eK-M#j%R4n1`Suf0;pD3S]cf]X8JqQS,2]F.ro"E^DkMMEjjg\96Omc"+hoij37CkF)l/(lW
%&Fq%(>9nTSKQ!"B/J>deSa`%`6[_Z!nC')djidGr7dQ_=lT3K4:\%P)_Y))2D"E$sOl[mr.-A%i@EtIPF&T5FrnUB(REdud2^n^O
%,@nQ67u,t:M-feq7gh+2D7NgeYA%5iItN\]T";_SGl;ROS==I.aUPIWV`D'Fq9eX[lo4UL'RYo_]on9_Z`Y-*/f9tfF+L67,0"n*
%FsTr^]/UK!D`\UlZ\gUnNb?X5BBH_/Vj$kC=AsYc<Z[s'rU[9Q+rWGc+]`[E3V+@Lo4Q2UF.?\h>ssZA>X+,3E@"u*AT5_tnFL[j
%#/!-KK0uO&D1Yrh<KAX"<SZg+7BO+B3D)TM$3OYcbh's!V6>/23RMiDNQB>5oc.PA\M<DO&PSPOifEnkW,loi?6\YI5(Rlq*-Z#L
%^?'Y8k<*YWPtT,/hLsu=<6^C/bCe#5IpbMOD*)MlYOYr-8):&]b8dVM2Y6^;k4EV+`tY%=`[%QbCYd_=4FT0T3\@FR(i(!HZ1n\n
%@PWDcr_jKF;*hR:L,%"$JumS2ctG6TH,Qmal!<u%>^_]BOOSPZB[pmX36JK,?R;^Rp6p:#UQW2`$RmBWaIU?6\O$Y[Dd')-otR7D
%3RE>-Tc:C\L)-lRZqrf!a74Y#kgEV9?I*gmI!s/*7F\8Aj\ko0^C,W4YT`>tNS)MJ"sbshRrfrK*b=E0HniZCU?#e$X=K$oUMN&:
%Q_IGsetjdQ9un+%U<H0i4HF+!MsHf&CJf,*Q?.'u8hQg+rG,8J6p+;V8_9]t6"Y*gb2QThs+RqmOk6>+s+5#`EZ("-2sZB;;._\[
%?<iCD1\U45?Ajt>`b+(\h5"g`nfT_A>5p,!d`g`/27[sW%IKT20B`5K=h1^)>&[sMG2/H,7f6:8V?t(ug=;;YqpS9J\NB3OBE,,i
%GKlmQb>SM5Qb@ltj22S/Jkt/CD2RJ'pXX+t40pV_s3/jOGguRa2fq&NYV:/,6anak@-Eoh/QFe[2l__NUG`dT:0oar#;Ade-<a^:
%m64if/0F]ZNu'B/k-/>#ocCd7dgji?X/aFn\DXiCSVt?ke;2DdV!b^m!99l-"a76eea'VaV?"9pEO/et"Rj%H`K7uumMCa#+@%+Y
%c>Psb"FQ$A-j]>[SlsI"JuU6kLG+XXC&.G[]Bkp:mN-M#eDh$P_bR!&GCt@<8h>=KAtu$1-D$7<RkRBCNbVXtHCT(T$N'TFc3E7n
%D1jJjDgV?`Ir3*4YL)u%i)SD[I/'KOWdhn%6e:pI'kTXc!(%C7eDUl>82Esb#=(^ZeP+d5B;pcgXdOnO?S#3b/b=0RC$8S=.0"L%
%1Gs:f4@gg>Z4+d(0:JRoWWQTBf*"^o(I`Hu4J]TXMI-eH1%bJHjS!CedPN>g;fjj#Z]KR3D)t3<`E!u_j\J`Q<PpJYVOR4s&77!d
%BE*GUh9#.jVQFP\&A%#fWm5!$l38^K@:^<7abta+n@Lupm"mW6p4W1X7pEAcg87mFBNmNF1%5GG_067s(^bXLi=A+hldO2$p`Zob
%FYq',nZ`P@6M)kcYnY.1em1Y`6`LXY%pN"-2(b0/TK.Dc>ml"%2"p!-^^Ea5A?o]+M!Auh)`-Ob:(\H"E,?4MbB?mPYd"pV6]8+G
%L1t^2Oh@.*-u*FS\cu![<nXCDXC20AM/3-&4NT\KcT_mh_l1<Id8iYZi1u@&<CQA+`XFc;B!^/B/g$JrQ:k#(.Id'ArcXkuP`RGu
%R$sc5.+p:'M)^k;_^+%ADho=$\j'0QFO@uRRViftT)^hSs+tJmae[iQ>m'81>g:(2"Eb$5,`GF?Z#j-J<7E['9WGZb9FAQ5-^p;5
%[&=!o<1H30'b_=JV?MWidU%jrWdkLK"d"9`!+`M@R/sB7K;tApb/:#!)ClamEXB>\'FfA)!g\Waba@teqK<?\F)1sckR!G%.7dk2
%i?q">eVR8*Ai#Q$)M7IEMIaUb!DCC'LntZS-C`LZ-N0j6"K"'`>Z_=^QjSdf-l*F*.1]8sZHlNN*Ef$P%O8+`o,0q<`H;kWA2<E2
%;sQ&0D7_d6DY':rM('cK'LJR0>0:a="\iCqVeBHE(qVY%'f',bP<kZ,>D62oP%I],]c9mX,'*sFS=/pa\B.f^3oqc?!Ib&3JB$j5
%VLlYhWg==+5uSt._KWQVJY-,l`("&dT&6Ym\j,/,"q<S^kU2Q&80dBWd>t?WAf[fGIr]kgf/dXMN`sf2o^J<\+R0$uQ;/KX#5"&Q
%1K1H,#-!nCjRDB=!-CsC"95E9IaKX?$4'9P@nSLK-d-]QSWiM>]<a]+&-JKn^r/iJ!_k'>F7)VB>,+Su9tl>fq>s6Libk>N%gXAi
%qnnge2V64Td')<->fIG8a97@`qC@9ZT+b[MNG[o*+0TJ-Bo^r6&<&a,SN?AGD\Ud:k;Ne$G;b*onZ;@Dh<*5rR(qN.U2-;*F%c/!
%?tf+(lMj1hN[EX)r4e!LAuTh6m-bgRml@W5SU.DYF3OEZV<__j;]nk_F;RO@0o/Uf9grIfQk?sDW^3'[=g)F36u:jol3rUh6-N;-
%]4`&qZ-)h!8-22*FQ<kgV\o\>'%DaTk'E==6'=E+Er,P3?@K4@%^4>n(SZoFpoM*bY3"<ZM1?H`1c'[d=\O!I!^/kp2BiNJGV]B@
%<SWS6&9@^N@,-5?bj?m`S)f_mWAc[`6=p+A**5uQ?V?UK8oi_AEXVcXDQDA@*(HK:gogUBDN6.c`gp_TQeWqjoJJFWp>XB:U`mo'
%53eTZ/p9"ooEih8h(8$t$G-X;FL(]iFu8I\-]%u_QDt^`OqP]^]iH;XK0mP:\6V(-a.9_EO>:n-iLC`CE&VO%pS.8hE6rFo>!a&&
%m?!q7X]AE'p=kU&X!nXO[70alVn_UKl<Nm<K7d-;f%VrMW3P'V'iVhm>6V4^D'jq%9XC$ojqa\7pTtgGX+^o;nl=$DV^](g&;UHU
%:^WNu8FW+ap[`Pa6%7h+kO!LZis%U9%[Mr_gl\qBKm$@%R+PD*BHiQ&[$oLHgQ!2C<n,,0<WJ1a[EqJO3cTQcnIZJ;JbVak(dO([
%oJG4T/[V5faD%PAHSS49Q'mcQ\G\QC*68*D(<Y022`e(kCL%P"WKuu9$*Zap92X_re2`\F7*+b-]m1OH&*$]ohFZ>Cg5&*)4Cf\!
%4ac%$aTlC%mD;`(eH1goKf9f*^jlB2ghpP?=MWl@Eui3d:+NL*QDg:gJJ5Cajo9G_4FIOQ9P6_%(cMM0,[U0g,Z\>4rZ9[H!3?m[
%&rQbtJD4!<3o+uN1@`E.RT`[Jnm0_2hH&:0f*/9`")L4o3''GQL<\TZ:6%(`IGXuPY!7uYYS,k0\$pr!*?H7N,^jm+Q)K^d0@O.n
%EK&!p/j5H64p<Ndr(f#P,`JHe[oNJ18!8]B(03LW!cuG#4)J$Y;$[8+a_:f9oVh\[<jUUNpq.*hn'4]+@fkC7oi_`&'8n.9!HgV^
%f`a?YWlCGMD).fcheDt=!pE!>43`^iVBlq].7?3kUOd`VB"Js_LEK`EoV1$`*lg'l%'Ek9`8fuk.i@E3_$#u5NXEBH37&=0?=g!A
%]Mmt12Y"pkZq!*7\`s*%g"!G2\=%+c7\b"*FaXe%ap,3"9Sm,T22LMA:9Bug8g!cdC9;\+/_h-q&>8&mKWLuEb=*$;:rH9_Y"DTP
%IJ3Oa6C&e[;*l-PE>^nZ.AMi9beZMic(rf1.@mR75.<"3)69V+6Qir\VoD55RJMkH3(k)nGSk"VOl/gsWr33!VVc><-hEhP5E=]d
%FB)GM7qn^kk\KdsGZsE>7;*@?&tWcjgqRu\F]ggqe(QoG/$b[A`#9lt?UaA*c9Ql%#WUN%H^tufM[Xl$<q1`Ls(N5&"7Qhj+$*Gk
%%H(*MGt-Hi%-r;4HWJLNhj5DV/_7ukq%tA'pH50[ZW1^7l;?r.mt%VtasrH1]P!!i<.ACCeSIr`\2,D:b=G:(fXZg<EBET4gAS_E
%/pb8:/3U^W>t%+#N?]A6!pXsnbiH9/NVGV.p;e=3eJ1ql]RW;gdi.NER*!Vl?(gY#8&29g^efn07nlpa\(YK>e;!)3m']mO)hnB_
%p*u&nEm34%-"N/fOo`WYG9%n"'\oCVeL*)MegfP-A>'@rnASf03goKnZC+;moju`S%T?_*]Pso"i4#6%&#!+'>;'%;Z`$soP!b'p
%9Kmi1m*>K"k$^s@<Y`/BDrc\J<Ll*"4-,g'*%LW`2X`S"ih7#m=(Fb22O%(c0iMD%MT2TD[4@'TACbOV1TIW`d@E7..]Jm((5IfT
%dTMl86dmE*chP^qO?jR@46p4oF6Jbl6'$UAWYS\AiGqW]98:GIML5"i@t^d)$s?Xf#\U!+<hk"Q\2:'ePOI$aC!fVh@1ENP)cDMk
%?5+G0Ou+<s;T<gql)Ja$G2A<R*5b@'I4':("M3_uXe)S'e7"Kn3(3'!U1@e)F\,Jlds>!(*7q`,/N2@N$:WXhE9OYQ[";gk&CMOQ
%.4%%hAqY&7&6<'ng]&9E%0Y^:;+R?@4BTC:Zib#^]VtDS^5k!DCoU)Pn[0$sr&t/-:8Lsor0Ra+:q%LR-I12EeMDKppt7:>bXP>`
%DI<o`]^_n[bc4GMBBn0dX#h\)#bp4YFXKsT;1Rk0eBF'S+']."?[W,opnV#AJLk5mi%rU3A#!2ldfO;kCRd9&nKf.'8=jSgb#joi
%NS9s$drrdKg9.kGI4QJnmB"p<N/OE4-_@Ve3oa3)W[OlFQ)c!:9iB]OftBqNU(NS]`c/K<N4P)YL\mQrT'd@X/oMct(KAX7lr@ms
%;\\9PrD>j"Xsr,i@I==\@JH*'Lkj;F1l3-1Ar^bs0ZbAJ9-I*Rf)4*_@QRVV4OLJXPt2,f04S`X'+9>#4]]6Kc8]pc@S7s8DVM+0
%52Io":GJd&H^*^3GWY1clIEGH[D3S:0#pMHN7EUGg5ojQ4)pJP*$3+dmH3XKR"@Z5E%SSo.;;*<T_>"fILs!7i^*Pa258Zk$]rLU
%E&*iM?Jk:dk'&e4dYZ:ic@ODCdP#9(J*31(''+roorY"QHb9RaHO[na<.[2<SSsN=>Ec<:dSQ:1-lU:-0YFe&ILGj8&>F)V[^o.1
%ZZT+fDIK.XP07@Dj%)&^CcCVNda(n?C5pD_V[Kf]99`fQH`M-h^q1$O'JMP`doSPI7?,-I48l(9O<4O-^Et)rN_3M[NYqi(<P"H6
%a`t7DpVY/62c&kD7rKJelZ`))rJgO5e]$6fj48Bulf%EJ;CsAAmT?ZaQ`]"X)m;/lmMX@%G!Fj<gM$=2G$*>hS0c]>DC\=,p_oYe
%<:4S(IkEq;Gl4erg$%d9O'nB8p"`hhd;-A[T0Ih9]CFO0O%Qf-:Fe`9Gjg#fXki8(=O7PpV)A/KAiKM]aZ&([54l"H],cukm`!=I
%lZOoiN&ttUYP!6\@%#qHffgE;gE#$3ZX:KFnBj<M'jm#.<UR?iC#e_pph=6?;nQ9?*\R-&jj!'./49%:^RXZbK!S6kCqm\]J%Kmd
%?Z\pWp3SYaOY:p2MRr\%j70I&DqIGXFJnd,r,WOch>J+*<OZlAX3T<YhU1WU"p<k%<:.LWmapQc9"AEF>V9;!-gQi,-2m7hs5N"(
%Q&X5*=(*QG4a?gLqtA!TV%R(n\(XIMD"iN5XX]AU]3W&?AZbZO]B\"7T&!UfYC,\^]17([+ThBsf!d;S=N4NorFs/b<:4%o4P<qg
%A7'b4;R>a\SMT);=16VDb;D/FZ4^tt?3B<UHa3N==/p&Dd\@)8XR85S?@<[fFo1*SiUC`/Bqr'.q"C3J6eB8g/VC/9f'TAYWVLi$
%na#Iq2=:&0-^sdD@gPtXC-B(dD#%JPZ!K>M<)<J9qpm55d+?fR7K%=T06e0o^)Pp4H/HVQ/3NEiAt^i]N,ndHQ9d`9Sq`=%\&WF0
%403qr@JL;#9m`dTJHW_f<h;K,5Lb9tk>1k@Dk9'tYC:oiRCJYM%.il`VH=%Kq:c2]T2H6MjX5i9.lO?N]]BAG7.)2c4>X)5f%5e'
%*.2#uc5uA#.nA"#42,k6lD8j3o_+QZ?h+_ZZ_Q6`NGkH?c=%UJG^"PP#l<DX^+Z+W/$FB]Xg]AV?f.B<C1")5lXs9lk@*WAJI45]
%qSflRX3G`PkNL[NNjle#?mcBN=*GL("Ke(!TEoXD`Kr+$?:Wli8l%#dg/pT-roG/=GC+t`oat9"KODgSp+8#L&STO?$#e6A^TT8\
%CL8,I$^C/@L/)dYprh\O!#^(OE5cb,TDSGL-*GHs_$hYScRq7AU(^u\PA5GgdlZ5`8T#TQ[+<!Fb@`n*:O.?c?Ft^Mo4%trQ6KAu
%d#Gs)]<1t,$g[;f]Wt`M;gAO0Gh43NF&]<:TPf:'?/5\FDVm+<?^*YGHKE\NB><'To^h&"H2Vkto"R*+Wt/"^@;Kp:j.-f6iuRSg
%=2<HNFT[-fh;p>8WN4Neo:::6b#?k*D:@,V'VFeZGlOGN*X:bRD<:$E(VG_Z71JadS;$(?[!c_4s#&K$UAFf\6Wu?loVM5rs4XS]
%q=VbnVK[FXp(#<OZ]\#/.R.a`d)*Dqp':'Um,B&pqfLH!<d$.+l+A+.h0X#?]Zggr'$IK94r4tT<nR4iXG7bX:YqhZrt:h?(N6rf
%99i8\hd,^?pd<m5>$l\Oeh-P&\4kVM\ZJ!f0:,nNnF<Be/=HA/LCYSs/Ds_Xe#b*t^%1`XDf8P"druK0HF[g`"+]ph5R6Jqb5,0%
%%.&3"[csj+q?QKQbBA^aFhKFIO.Vbrd,iGdYQqdaIJ&$W`&m6))sL5bN&D,KXu>"![C_B/ZD,(I>6!)KlaFJ?h,[<)SfatteZ3=t
%Aa)LZCqk>V_U$d;r-Wdc<f6VQIe:q];eULYSX45ZkSl'?KB/064!i9sFVEW'+4*eEWbc$C"(gZ0HbeOgY9eFoHLQ+G_csLAln#o"
%b(&:BO/NMm@?]TZg5qXE!#aiZ0DVWK*KL17$gp35.3jo"[f#)%]N'B/[(H>T]"E=nD]cW6)+'1Bi:rZm6\lF`,51cRnElMPDf:[3
%K%.@+rfriNWPlTg"0;mHq=9=RNG)8IQRO<5&fBU8KU9(FC7*r^_?iIUg[FUE@)Gac3ruJ+Q5L&o!Kj&l9]#:q/)XY%`Cma7#!#j6
%KAQZLmr.TNOXN/IXp@d[3q/E#)3DQo?^Y$%APstQM)aRJqC`@8_[1^Z""+m/.,`$P'!;Kkba/ZYMN&Iu(JL/5Pk4u*-2L85[2>HJ
%))dZQ]-G_t-Zp\%B%"c`#6GhF05<7@)58+ERH;..0,u<AK$t;\&YKNL##S$IG9R=tn-=f7Kn1h8rP\O@Rpf3[aJ6*XOW_X%l<-/7
%;#&]eds\M,N5EaiPVi15.QXBK8.pS$8EFIJ:6;1.-m?nR'IM103DUA4LB6\(:!"G%<X8h-P-b7*S2'.o0:Z+<I`cnQ"jkPBb_E&,
%]]7U*%9Ot4\/-5SAoacj*mO?ri6T_n__6B*f"tW%MAJm4]&ng!AG$Fc=2F"<S(k-l9=<(nR[!EC0'#;[^3'qf^&'H3+G+0,9Q[r'
%>8bua'a2V?n:XPsU7T".[bD>,oHe7.dL+!.R&sc]q@M)mpQ%+-KQ;G"ot=p$W7H/WO`0Vk`a4/0)g^YdUK>;'ji2.UkM8u[F#<`,
%[9l*f&_M?@CB##bYM;#l)(K17Qqi\K2#Pho+F[/Dc/<mbL*u_6>n@L-3?<V@%^teT6u7TI)u_9ZfN4[$?@Tk#_q`T)1_+pLdU"<<
%V`=(AK)BCQpoqt<#5Nol:MnVE++pMsq$'`imE;`86J?`r\XK6Nmje%Mm<G+SK@YZ#R=FKBCXN)E;Mdf`o#&N0O2W@Z/<3L0;o3LJ
%ND9Xs2VW]R.GbBV??V>MeIFcnR4Nh<0s#NbY7K[">9_9fhINtI2d^\[(9a#VH2*gi&)q[tJOWN@kH"?L0gU)aIqs?lDr0=O2-Tf6
%5e55?*jWRYe=G''=K5]@,JbIT,i0%u08N3A0nolq5NEe-WkNbaR]8](C*TWA&kb1^\omuqc"b\<`7hZ.]$(fuBjM(XRqJR$Ve-*F
%WuhhYqmX&+A!]]5<DWEeXu_ioi)ZT8g6_I;#C'3NX'X<kAU@A3-6q*>?au&r@`S2^qTc^f2HtZ:ge'tB%C;=JmqB'('dW0<>MFCF
%b@QS%nBRd>:R6?2lp!_KHc?O@1@N_NmH<cPjcV]eieAE>p;JOlD=>_*RV5uP[f-HZZ]]@kQF;%OU\AZJgMco6IA>sUlGH\o7!V!3
%_2*R8m()FDX3#p&X:B\0ei[8>3.;DhgX#n'#FZH1ekamMlsI(U/2M,8&PI0SmOo#`mk8UG/jA,qK2hL(,_K0<a1pD6\O0EUi69:5
%iNn$54h6h!8:7*H`4''enE[?_Q>3lmg]Qm-^C6>g(LFXmq<]eS`;SD5_sm8#q-N9ug]D!#q/SL;Uc$?-bAHq,D4e-37sg"54e,bQ
%l]d$Ffi(=(TuNM"Ql;_ER&%jM<thbs6&j]HfK:+M`Y]*UBsJ-UB_(<I;@KSpnhCnGF`k$t;t$=kM]T184n<BbM[q+1GAHY?P2aXU
%B'U-!5!@gs5Q,a/VVqC'`j]TG=>9;PcZ;ickH$uN_JfppEW.RM/)E$!8Y9h.43H-0c,X>u\BcY.D+CKm;0R;Z^fnc/c_#SAjKM("
%rpcS(>hVCLMMKa4NO9Rh[FBo,d`9MHGFotkp$>K)%qO.XHTf]'<.C"T`bUr@<nM=1Ze@mu3.1so=/8*>p[akV@+)dm4$1^[d[*Va
%J,mL@&%3r<0;7bM7=^.!*/'*Do8@S<46eEtjW(D3hNq"[.Hg3o^:*apI(`QE4hgeF)r?[/q;<7M]lOmZgqJ+PSfDu\/@V7KYR?$E
%@%ArV!ZTt1YT3?VVC\3ch0umYKfmR>=c\n.g8f,;HhedDo2jQ'<o9omWcRJpGlQSc(P4-E.`VV&.o1=p<.jJ$q_2:o0O.oga)Uh_
%W:OLDF5YooUPnp=(GS3,*<dL%h?*AOIbsk^X1/`a(ao9*H1b4clK:m=ldN6tDeE^!QS%OXUNLFH9DrO\G]O0`H158>A%D0sXr6SB
%h)]QeQG/(mSaG7:e<LuB6!5\frjlTZI9\9)&:WqR^OY7a(:4/+%j,(n]KU](,H"adjN(t<g&,C<J)m$D5AauL=3c5lk""OZU%ZWU
%\c-24MN0\A?*n=^G3>M!H>XHVQSq("G`BsL;7<(9B4HNpXDYNa+2'`!Ej4^I*cHFi_f?7>,D^,Z+*dM"p!Uk6Rr:/d`dX]KZ$5Ol
%#P:JA0>I>FII"SuGlHW*pc,?s,^F\3`7"IofNEm!o^cQ^<1[quP*Qgslh4Zc7sr$Z2=J3N?S44<e],Me,fY/)6[JCkEoZ]=edLrs
%URfHedsL5u0!A+T5+g["TRZSHj+IP`IQK*+T?cD4ocsqUp9_Xr3Y+0<X2iOPH.FW>4\"FgVDCY"3P-G1oHEu8JVNt%aSk`TAJJ>2
%S`A.Pff]lmh5cu,q3r`93/kaMH0'TG-bZ>6*Ssh$-iW:gf6=g^N8B$J\HgmX5=l-U8_04X=&qq/(<po@]MQ89mY=tbG5$8&P<uUh
%reA]MXiI%E/r%H,KcY(=CsRaG@EE^8?i]p&!^<enNkTmCQ<@DEkQU.Y5JDd*A@YU@=SEnab1#`.$otV6],n`8.`(i8X1)J@T<Ei[
%J(VuFd2M6#LH@'TWk<b"#*<bH+mOIP-.m[@CZWn>Vk8RIj$kbo'UF%B4?.UU#q3<<[;C@J%s!LmKDELZp7%>5qnbJK#.?>u+UBYA
%Ha\9GSlNq:/2Vrs(DM(i)1cr-daPf=!q3@u(R._A:7_kH"'pjsG9;3jo!2MGZf1OlRaQKVSnd9shV<II3Xj\.J$AnZp[04I9#:5'
%1M,c*k54"ah]1&I:L=uNc[9oE)_USq\nPouZ0Blo4Na7Xrqd8`Hr8%Ok^?^94aH/i9KU5coGa@9=hSsGoR?k'7;"L1g;:YhO^AXY
%a.ND&%UQl!!Psr6-i60\]7P"\boNBinC+H,]qa'-=W#Xg?dYI`^75mdONSC$PP<YW[=**=eK=GD0_rV-n+_.l9bLn'1@N<p]_[MR
%l%:$co<JHBZgi/s4R(]d9*;+,o$lRD1*E\@^VK@%/WfdHr]gU,Huo[j1@BZ-qKNm,DSEp)UO9Z<%0e[6.^5MQWc%pAXkR=fNMG[G
%&"blo"BOt$l\AM+F?N*A<3`mYfN\dCilItPrAXRW'^.4Wd/-lBd&2;:DG:o"bq?"iSNE50edKT#Or3*D[:79dP\iri+U_7a;O=Fq
%Vs2fkjgtKblbQ&p<INO0[[3=JD?[I,?6=)STi[:GGTN*]GIMIHV71dq_Ye^/<>d3Rr@;]KpdtA4p9nm@2]b1>*Wg7T.Uf;sV=k'h
%gV#5Y]R3ORW?L6"<\)4+00Z$%_CqOh.gYmAl/TaM%Dr5\?'^#Z=Agb9?lH9YL:_T_lL&bdKI?HP,H3nkd@g*H?MhBU6uc\NOQlKY
%3g^L(nr.qiR]cL!kE4qDdZ0pcU56_IW:>,=h>kE"<i\SXRdZ]-@m;J,7tLLEW*0+8j7,e@1J#gO^QK8o$mt&R;b6:Z&+NWRCW\eW
%A[m<Q`KVa9ohBQrl=W9Yp0]t\PbQ@Z61%N\D/VlC!:"hgamOkV8o,30Vi4=`QTH2"[u\;ZDIXRi$M@Qt@XV09[F3ZdU*HQY#Bs7@
%Gibq/rm#j(S/\(Q6&`Dp;XofjftW;"S+<RjK.BqCr5Fhs-en+!=h5jJr)<%c00?_".GIA^9CHcqQbgA=jnG%hpO-!"Hqi`9]u+&k
%\k3+1aj(:Ih9L$8i;Vjs7J6ULj0cMb')>;[`eU33:S2PHT01atb+(l^\)>,-/)F^JM76.4Y<Ztn+dM9a7eQ)JlLF"`kP1<df\HFW
%;jR;j_CY@kGJY6IiFor17S*uS\"^poX+T[^d)&ipZdi+bd]W't(3uMUBD8"R79b$<hU@??)PrdI_5FJ*^TXuM^\QDQN6V5BFIp4E
%3qTYuXdok"V0BuNND@BsmGh5i8/WAVY<9O#Y4V^F(rPh9TZ_(K(4heoDhB/)*OKPX3tL3+V*d*OUO1h2"d=d<f$=3e4g4+@/^*-#
%-M$jpn!(`JPUbYp';2/;*2abA48W:p[teo!_gnZ998Gh,_L%bFiU]cVJ#dAmr8md$C*Qi@qQTd%9l20H-F5b3Ts*dpdS9C1Cnh?]
%`i`JSbKf)<Zp+*V@4sSLQ]H&:gM^iImmn\=)m$c;T`[aGe\QCo:%=Y:l0Tt<-4(d_Yh?g6?iX7_Hu#KTP]=*@bJ*h#kDI4e4)[aj
%H5J6ASc/;lmOMotX*]p$5(:DL3ekW.7`T2V%83<749UIHXoe<(H6DqE.ncnAIt0KPA>QrJi^2SjIg,L]oesNI]Dqa-Su1*JB!4l:
%B]ku2Q&#=)"+'V4TH5tFh;N11]p<cgeW+`-/)K4(0?$V&EjODX6mc32=kKb+HZZB;ZX$tJ-iK([jG$rdM&0;9"Q9[ScJYVP_%4/0
%=7kn;a^`9%)YQ=38$,fs*C$TU4iOPGj"A7d&1%,hjhU5m?+\h.q\I5i5gUQpUII+UkD-mGF@ULH?Zr3EfC#LPkc4PE1lq\a,04H@
%PjUIdZaVfuN^e=N)VqgP00b32HdQpBP9Co3&nm/\JF=-c6!.N9e,"5;Cpq/uZ,Z5J)iT2]]>+GG;RoP?L/SbR^6T`TTpIe@#a<iN
%cY5nYJfBG$&\i%@%SVWG@=d=Ua/MT@UIs7O`!f#p`"Da6Rt?Nf(l%6*.CGk*]@=guKo1C!f+s]`-P-+';XUdb1(4p,'fR_m&7(G2
%K/;/E`Sb/J^$_@]%0nRiSZlL@'dTLm.<9H1!fZWr3E'u"Aa+p8*L"UX#nmHBP,T-%$L"bF#\!ubhE+8E,CG/%`D9.J6U*qLH'3GF
%9HGSS11LqO[>/OiUo+NoE=PA%UErKFEJ2FL2COACQ$08eBd\ar)*6!u)EQ:R*QI9J.3-qsN&ocRn`f@Cr-*$4NlTuo-+Y-ckODT!
%,M+oUam=Clm!U2%[/@'R8I9?s/>.&5C9a>8C@V(I0Z6q;bso$[d;E:061aOLgN@dL#FhF]'4#O#Toje[mCe9:4Z0eUm*7'Pis3hT
%/\0,'""bLP_Ibn+EK%B8Uj$F0^j,2u:?kqB*VE/hEAq\l\qbO"?OeD+==HsgC5m6-aA(MJCY0sCZH!-I10^Q6V]!H=I7,$0bV1c6
%:`?V)`\mKk*"VERq&F]fHkO<Dc/0\[%KX]/c1Y`:5R'5N8pB+L];gi43-f;IEQZ'3@&m-*`J,Zp=tng!NmOPnU/5U[1i7p2&*(hK
%mR#j&2S\F;-t1$+9"T?eFa'T&E>"BQ\Kk$]N?jDA+jMS![/_Oa7uBYTk*2<o.c&7]<<X`"c>(HQJ(J1kliP3X:);YOXd^lZA+l=[
%BO?KMkVmF+PW8>H4%-OUQ+Vm03RV*mg!k/G_e8kH@,u<tmWNB)AJ.W-ojq$baGbHp%%)t=acr#uNYgeEG-Ce($%(*Z0G0HfN5H#)
%6\o?1rmriTd\mtG2RXKsR1j`JkYJSC`7_hWo"("+A720/"f#s_I*oPeD+(f.KP6Z*HI[jD$BP(mFr28!1/0cpG)&f\9SEsMInE;#
%V/JtE$acdZ*`ia9;83:ipp-"L?n(bI%<hb2hFQL?-<n\@Wsoi0Udm?:4]cD*T?N!J_YtuIh2AoOHN9kaT,3@Q[TcQcVa-;!/=>)$
%H\r=g,WeC#']mLAomU>Y6+&>lMIDQ9GdS8#ed;K]:LG<Ga=/Jjnl;up-%^VucW$YE=MF_qH#W"**Xd4P#@ABqd</^-Y\GSd?8O7a
%/6kKA>r37_%U0BEfeS'^72HH>('E/DiR<M)=)+c5q1muE/OR^'<)outj.d#`Fk<mU[V\!l2H),0RVUkq\_1qZNoFg#eL\;?cJ$L:
%@Oie5l)LITRp%WW#h2K[2JMLF:`Q2%m*@n4[HKRMbc7AK]K78)BLQkc2RYYm;0>REi4-"mL+Th8PgQ92djciYCD5u)UTO[G<4uZ?
%$B@ggW'ESr<XU?18WsR-$H_^4p__pP'NhQ(qoO>fWtue9\>&!S$",@'<)qbKlfso#3]7pG*KZGR<Q-Q<_`+8`LJa(CA_W0<`i(Se
%[@V6c5XZ;*R@(.P!<M[eNA=&!Xcc+<1uk[?>;T>SQ('W7,ZZ]0GpU!QKlfk$]rtFD.]nn2A-bm[`17L[TYFnqWi`CSmHR0#o=FiF
%12PjMI?0FAU/nq8p,m(hlZ%:$?C]XJKJe[rPs/7o1\KI*.E2qZ?';Vtfi;Zahe!g4aC/&Mof?l(\d6-b;i5;ciKONfi^R$h!2Gph
%2,+L,d;3/Yp!L\0HN.B7q@dQ@e3_=(dR*u%e\iSm`V4N2C=I349LpUOVilVe48L>E-e&$"9D6$2%^"71.hD%71%G3&d\oAl;#(Dk
%`#-Mr`<J81NE)=S]XJ8d9\8VCIG[T-4_\;G'n''-kAoXm5+q$C;*2ASN&[=:%`&#&PrjkB!I[aN7:QO.eKG<T*_9ASg<7`U;)c>3
%m:*D&FEMA81O'XVA(5<2FiSXF29V2VlZVZ8boFOTiG^T&pYZe((n271dg%RjRO+U8I&=,^$u%VBB"18c[^hjORktSL(5O(Ur)7m1
%XsbcF,%rkT?*'mWVG:D;b7tDQ&8"1s<`E)Dibb"KnDOpaR&4!-0ejGq2H.'o:*g(9p5<dRBq']p/oZCQ[r'1FbnbOdlKUWb5]'\%
%YoLBjbu?5g$r<>bU11-=,oa`5ej^f'60+KIM4S/"7tW.ugg@(Ab@"C'6g&<@Tf>FMgJpW\GX`*]Yc$ejH9]k5:fB?JE\l(nEeJ@S
%n`e:D+tc%\=s)?I$e1iZ0S*+06/O)H*YcR?BgT'Z&gC2Z&0'/?j^r=M9Z7Ts;M^no5%Rn+[hR@-EhaLW(j-62D<cu^%*f;TFYcb-
%!uloN%o-=PDR-cs$AATH@SM_I&Lb)UpfQhh!usXO?&4Z'0suS08eF\!Th&U]$8Ja><pHFmDseuu8gR&3'r!ENlj;C/`lcOQi2O%S
%+V$DHIDEEZHj-5"THZbiXkB#5[,LLd)^O/XSAYI-3<KHp-:u-_L.#dB`GuN\4qhM-7G$ID0-Ml*9<4PDO=5sJ);6XD5%O*\eP._)
%6WTPB,s)MaS>I68Rq868RW\luK%qnQ@Y:aaK6']111l/XpL.ZJpfr'G+#CH1!m1RmEX*Qc7*->od>Z[fT)5#=hU[4Lk\lb@J4U1$
%ka)\\6oTeMgPTS7\&s+(;=#NZNK:Ah`7hA(>Drh?pa8FH<?_%B/5<M).'qR'fnOIX?p0l[[qo0)Okp<2U4EK'VM#sJ[nLh3`DWKE
%)kAg$BP9A[R:ZOW<,Ao2oJh%o-K%CPCV'"V2L#N/PH-1M-%^2Ki%(\/DMk30N/Y]m41`E_*]/Km'2I*]#K@#n8-clJFV%9gfJOmn
%qad1`-`>oKnmJ2gLGmm``Gie9^kg.gi,(I/7N\e5frfjpY)8JeS-3lb@*1>Q!FB2m6`\<6K=,hqee'/t=C;r5Q"f8h0<rnr1M>/(
%5VoqcCpP\Ci,,WV"Mr&oNhsuM0cVOXiSbC<eZs>_WZ)pS?kuGT0Ogjl&ho<#9Rsckl9Z6q)NDRk0(^/>=+f3>QOb;+!nRQ8EIVjY
%h3uV;Dje^d-LjHFUEV^F@%bDI&tA+ff,P&?P%IcMBHkFRJd0Y[Fhl5^]WK'C;)^A1^T6>W<r\D]X3$:kdC-mq^uiHQ[Q/NZ`l:'t
%\9No<e/*aCeJ<3E=>QX/9<a7^7\ZJ`Li2:e';?i7:eb+3g+6/2LVo&uMJX_-U8b,J4$5p:OKL)!l3d,j@?iG!A@NDAdBjY,%0VTG
%W8+E=>\On-1BPHfSHEEe[]gpDmL0AXb"O0M>n_(`M,?92#f9<mAne\+M!71s-6ag+f/Y2uTlgQ'N/6Q?8jb%.ng*Y#Mee?j\-<^>
%`+PNQpXor2`ePp7Z]6H7Af?NRKP5nC1mR&n6`[%#Fp:KqMH+Nu)/',O1]$W29BR3gL.'[+-;uZt@[jOdrD^gLQ&ECb&G[M%_oGFa
%0t\d%Q6m![DLX1#,&6,5'Z,TARUYs5V$s75@DXD>$7>%k[k;bPd0c\4Y.,>Q_D[OW$9^``$\h;(8^'_+ZImlo+(Z?SBS\-*ib$qq
%?HteGDdrf08KX.`"FIcS@'b\i@#N&eA5T<D>_#Y"\[S-PP2$IcEtYJ,Y05AG/S^S/&2Q>>$MIlOA0\_AJUe!&:+VF\Co;T_U\unN
%fW$V;Epl:dV,7p(G72Ug$ZFp5^[i'F(<dfg5+l<ArulXk3t'd+K)V/0"gU&p&*Y3Gpr0Hd)l>BKC14@f2-3'OJ=.2geKGOSaY5*e
%&8@"Q=[A*9d?(A[0G8F@N(k:UBs\4Xe#AK3U')AD(5Rk2j?J3!^jku3;NhTQ/6J/MYHkK8LuBMI@6,^BK(p/eS'a\qN,;Z=:fs3&
%;u$Sp%hK`0&ccVQ*tBVp`sc<D2O!u'V@5YD.ei-V/;(DtYeu\l:$O$d'c/H+@H>cdh?!uB.3_#D+TVcR"IAOb#b#&JdWmWnI!4'@
%7,?g=X8jKM6F>-Z#O<7RVQ0pn[2b18\LrV')R+gaBL1!&K4j!YJ>m2`F2LF&$uInnGTt#h]%YcUa^/Go7C1q"DI9_9EB?(HY2CsF
%?J(uV>W=9b#a0ZI&Qj49$O6gX/cflp]Z&F:hdMFTl5H!?U-9#e&tW;[RhONjc:Eh3Yt]@03eRQ.JMnl&`8NaqAqI#9/@3O@qOh$5
%EL7)iQgP.T7V&])X$Hb5$,'oSdse`",mnHEdHASlM`-%8&/'2n^FQL685fT7>hbLoVU9A8;8hH*o=EG8#L(htfN;I22TOr9=r8o+
%JhB1X^h*s5K#T_!(>L]fRl+ogC@a@QRYcjcQ7[=lp;a&5g^TC[!s_qtV5q6<Ycq"32[qB5@VqDr?jd*tDI4%o2<KG<<\OmqVsa8f
%C'Ifj7ms^4o+[co)oWZHA>%TJabYckT$8&6Sc[/oX^_3go\o(Q@WbW=_)3'R9F=3/c3Hl&.d1OkT1Q.&gF.:(_hBM.=G/Q"/6^is
%U'>CX`a4fOd8jZgB\CM/]W7Ii/=k3[Tp/V;+K@3n!!W%=qX?4)^taCWJLS$9AgmkKcd's9:BW^GEZND9+*5d40q4Xf1"/VY/dZI8
%RY>SE%Q&5U_GW)>>Tmn0jJ[]/M4eU?_dW\+#['o'ck18@Ys:c+N5S,^l@UHt*Asm/#3^^eqP=OUXK[A?jLT,_,YHMT!D>7#&C\E'
%ktLk,VM>aoYbYlM,8OSn6H1%Qa**F@Ah9;7ghot#iUf'AH@lY_[F))X%R,T1)!.Pn!u&s0/W+8I]X4k&dsDYF^:FuDO:>]M#Z@u;
%.:&cY%M1p@7Z2*R8eGd'V2f8U@3#D@IgK'VK^AeBV.LSn,S/'$7Q&Ai&"1&E9Sn%eVY72G29X0.>QD&hYW@#GgJQ1DEKQ^OhDU*;
%aoJuKAf1crBD@`SR:arZUL.EWekFse*;f&dT_5JE:P?)TL=61.E3'([Q^UbcOtm'8_7D_2)9`&Qehd[M*Qq:"2.P"6&'Qc8<>J@1
%:GiT&9X@Et6$i/8bQV'VlN7ibRUt3_?tEG;B2l2?'*Rbm=#ZX(bqc4b+N_J-BfDFE!EeGq#q-8]WbV27XkYJt;8Zq^2#=bSBhnK&
%T`\[[pQ<],,;XBLD3]s1i&QEHPF<fW%&6?8buF=2[bFS6Lt!TM(n_``A4L&OPME7g`Fo/##7Lkt#%moaQir"IiG`3L7S6>jGShp>
%@^4,AfCWKZ9.*On9LjaKi-B1aAQW@h^]S?.9P`i'@HeuC<-4Fs%\%"MM*t(iJ.Mg;<Gp*D$;W1^rAG8[=;:[sAdqQ1RYmKK`_/J!
%c"/9!.7r#;:=J^F[`'kW`5EC2/EhrPHJUu$3?[#gVbs^Y:/TJJ#eFhVUs*pM"&^fa4r1qA)ND9U[S]>IB`Q+n1u(VG/Vk!5]Wt=#
%LT3F-&oX^p[LMHFXuaY2!co&@Lh>-f@IbR0V^<QpTMOKaF9/to\4q_^<7n(Q$PBVfeng[dTdr0*0P"":/Su>"^I:Ool3#<<&i[%Y
%Q;CF8RFGsPh)0CMF(UFu6'5_ZSd_>WLfp,c!UD=;DWUAt,4jd<-po2C'LkTfWtfG:92g$pe$,pt;[oe+W%N6nPPPcp!fNV;2Xn5b
%AdEZTRdkD0f4:&DZG[Gu"daIo0`l9e</[r^BNcTMGYKfB/f-?\f-qi"MW1RT>H*ZW]XaXL.@g[-("L3&#F&5'QF.@3,LmbfG=Y;`
%8V7]\aj$71Gcdi)i+Jit=\/$=1_6E<c"_!fdP+40cH,JtQ@3B&9$ZI0kTDb+Y[[":;$Xabe1@deAF@1^l!0)"*sp-8nhN*MD8sBV
%&H<S0D3L?K[`X"=/TDRORUlUA]NBHPeMb>pa:&HPk"P50'`3^EilO\p:sW$B_+A]5McJT!Rl(FD1q_i/@[[>OmbheUAgO]SX0@JF
%k#`/rlQU$D?9h:"kbfb-4B6O1D318t@1ebtC'GWM>O7fB9XDPeMh?1?s8VH!9?V0DO<$4qkWdjZTc:)]hYBone@H]M@'DBRR;&h?
%1fR&DBas_'^"8-SSo_W_DO#&AWe06]])1haAn5F_`/4iL!?6##@-X?d+U#ft^/?K+FpRO&^ueJ<I7Z[>?h=W2D*%V.('*8qRsAT.
%k0KY_mCE_D0OWZW\Mktjf91o-36U,ekm6ZdjDR7+e+m0jEBT`f[*M5?beWmll1:&*V1#e<#D)WPgCF'.2joODX75r)]0,p!fMIVY
%Zm<pN#M.u!5NV&<X$6NG=#($=G;+En&mp->>DKN'7r9,?QohEL_9DXQE3A]VDsm",f/%*UKRlVud,IPQEM_kh.=D;;.rH4]9#uar
%A/KKn+db8/W,VF_3!u((/EA\hHE7e7-,s8D=<"a(j_G\0[4YnF:GsVUj`%a2CZWh&#5FMR<4_^NIdY6?\o!#O$sd?)r/uc9Z$3qE
%NSP0jB-[4gH8kBq*mrcDgJ_,ZM1)gE4+M-lT7Mu%Ch;F`ckG_4%@u[=G?ac^%B.\rK?G.">63%Q'ok>RUW\6=A2!/m9A='ih=C+c
%d.49%aZ7,Q=]t67p?Q6+ls8](cYY5U6Z\:7AJ3'LYl.b8J+Nk-Wp*#[^K;IM#;0HPIU;d3\^[kf_<(Od!k1Zs9c9%e#4nT&G?of[
%991B<gC(uRZW+CqiB`^f]PH`Ph"m,#8%BVBIMKf%e9PBsaD;lGL8uNOO$)/a?k_c3\hA7;JennF`F%cgrLW[0]MN!sNOS<,b%_!*
%h7D1':g)u^`CBp_9s<lA1!7hSgM,!D%=#jK%=Op^[nKnPp8$8N2A1D\HMN`#2/\D0I"l(;n"DET9BFLX]]\_A_f`aS[,/Ak?M?/C
%emgo(92rk!/\<B/[b_P,oWO<A>iWO_Mg*$ZL-T9V#gGQrP'&KFm^b]6^ja>Q,ZK^$@Gmb,iELt#o`VV5BV.La(d%"=GN'1K^mZ[$
%!^dHhokj-g>D!7>_>;6VcYrC6*kH>V'.rc[;<KOtV$F`'3%sd=B1n>j=^9\(SA^l#?6%FULJlXNV9PdeED(,oIN>&`IWgXe4>79e
%FOT,VKOF'u]qp#FYV*`\pXlWN'%d2XG9rV"iZ`(QM@%B-f\PQM;pGf5VnOO^<0A9+I^`DBRBC7$%u27'N_2E@0CU2gjjjuuL,deN
%ZPN]XW`U(Y2V[7OcdlY]/J4$+-1AC1(c$@t%+?We2+</<V2pL5mD)rsS!ZQ'rTV5;BBIt,Mr#'rZi(FWFO,AEqX$N/k76fKID*HP
%VA%ifc_1S:<(/cBdKABDTCWB'NgS*HmfQbVIM3<Hmp$]0RYL^C6gENpa%OM,`?.YRO.OadZgC-bF7n%"!k=OI*]rfm!d.EXO84mB
%`5e,:ck@:V^FHGaaFN)c>\2ZVh:(5:Zn$MknY)sU6^:)2keJ7/s0a!cafb[q4Ba#UhQj+j;RY]ChJtTM9il]&fZN?0.G[FBY4942
%@i!>tG(X`/;h&]SrOb\O[<'-E?(uPN-X!`JIOXb.dnABk?O1c<kM(34Z<R&`,gc&0a4!QI;SmI51"J_B?e]DT!8*_NW6X.McE:s4
%VY@o;G!cf@_.HV30Tj1llru)"d/m@PENXW,o]PKFb?#T&"W3cf^b3$KJ?@t-d_/mM%+'j1EqZ*FX#JpVnV'>e\IWKj$P!Ei=+L*:
%m]luD6R9Z0BtI6?%JaMTMlIlNZH7Mq\O:/DE()dFF*j/&gc3fk\l87Xm?YUF->(#A:)NNe2@SGg?'>pHjDXei'r.`,Zl^g"K)P?H
%f7*01a)e9EgAFF/F^f:=I7'IhP,P^:j0RL*X.7)t/Daf^E>ghgoqCD`,Q+Kng?UI03;:[b868[DO7M((nL4:M`.4k3pe7-lKIRAG
%U=L:^O?jep`?j0TQ-,SiH'dft>$n],Vg(9O,jMqdAm'_JB900_F12#moKBi?RpjZ2I2V[fK^D/sSR@MEO<epB9&QkaPc"PfeFK4r
%l[+^YV7?Z_[/2GN.Z8-]VEZ0gHFn87R879l0i`53N)#\s/aSEL]kb7I;]denm[tUBY'+6eg!Ncm?SW\BkcbH`D5e2SfOZmU0X4O7
%0`$'TEAhDnbhn=5>@7VYZOsb=af$Vdc#=T(`D\%lZ#as.rOfMlepCZEDS%3u6.Z+c6P*R&ZG<X&4F=ms0O'"KcQ,JEi[s:gL+`[K
%-LY>k(auq-D%IZ:/3f>8U#o>ohp->eJs4Js1Jts0j_"oTSFU:CdfVNl0gZGAIlPV[4*!TM@$s/\i/,&!l_T@F6?<os*,KE$X;"0=
%`j@,+Ti=X*C*6j^!o<djC'[\=RW\D@R`YlF@@D`>l.bY_?oP>\LY?6OC?s3D4pc8NN"oa,RV_O#$u?6<'!f&*;\`uZc#QngHP8**
%i(%5C(T7k$=:$Ge20c'g"=2(n280#!>\0;Z@9J4//>&f/,H#dTH0BOb=:7`dJOY*)@pZb7IcsSQr7E<*0/K4RF^&%o=O-j3Rgsk.
%qK(O'g6=V/R[`J!4T>Xe-,3Rf0>XJC>t8U&^P-BZ^;AM28SW*;S)rM7jW0em-+ZsBbKaTIgMs]S9T3nYURS\imIIE9o!'?6+Tao-
%G,"ng$@fb*G>mXNL+cbac'!"D<%@VS\>8fU!C9a=)rQ(2mFC-ke4M*#<>Urq!N&gU(h7h<M^rj\JmcmS:P8<E@UB`M5\cZq`+$K4
%K"+_^+7$D21eL&'Ju]43)(pNYmF<i;At]ntFjh%8UUYsj3A)o'TtteXG&d2R$\@1jmDi4NDi@-LZM$nXOaU.(O81(DqWI$Urt+/m
%Bl;ZpRI$.@B7lug9D/,pGg'CE9P#F-@&%`eNt^0EeZAlU?GJHM\g@jG!$L7,[e%ofc@rC2qk+&J,L/G@bi=<!DEhmWV+g%(o=/@c
%4l5(fNoERo/W*2>-P\3Bh(Ud%\k,f2\Fh/;rN\S\X\1:S3'-eiG%*R7BKBm_P?#JdCAlK:99-^Sn?[QOT6KtqB;Gt@e9Y8(3i?n0
%?6?I5S'*h:7$N4(/f(`3K$L^baI)rfbu>W]^^pu_@jJfunoUBqb'!9t>,GLrKb"7;G3)QhnW);lAN5Y_BW[H%r%4Fnmt>9Ib*(\&
%*kh^Dqrk6$#H@-b'?&+$cdo[6XGJBtU6kC#T_&&+>fUbd8o>Q_=F8'g-9-M?qf70@CTG;rpZeHsi,m6XEn6+Y'7UD](13^%X)+)T
%B*FMQ:RVKsegSKrn?FV&n,<*j;bCBT$=r;+/l*#QGg&Klig]d+@?a2XFDCXZoFK.3<E4\)Q:1ra4W\7B(]9d`b&JlO0WR2<H`/)G
%<W#RhmQBFUKU7E--s$=D!f!32.%h/9Rb#t+e3&.\G/Gf;A_-LWA7V5fAgsRn-"7p@^euD2X1'aa-W5@][l't##a5>>K"*ZSTR!uK
%GX]Wt76tURCood^YVq9,JMLJ`5POgP<uVc78b^je7O%/i1qW+Zdtb\:\:?6p:uF-b4%]l=*feZlDeqcfSrSV\Bf@V/\TF,Y%Ym3T
%TS^]cY,5MP9P8U.DlK(EBe^?+LX_&1P/8@1Q_pCKr`f<3TbJV'@nO<U=gq9"F*IjD>N^:jEgmE^jp<@d!]/DWSnl4Zf[o;/Qe6/"
%VFB5'^M^%c[\\sEbiPU(&hr!<[oMjY\5eS9[3D,@FWC+f%=<3+<04ZUn2!%o\2jqn]J6fg-UCB/d'n/VF9sK<8U%<9F8*iENjMt4
%Xd]Q"**0jkBOR(DMD@p;S9e\fZaBuD"e#X)`ek<NIbN,']*5E:^0]_jid8U]Zd^Ka3.-fV(gqh(+3klG^W86$5&GVin\esE]k:#g
%IYHaVQYMKj]d<8SZ35a=g>Cs`U\^j0Q,/&$/mFocR;H)A?3T\Z(U$hO;IgkFHTuMTr_s6]$jolubhB53C00d0Wj)AFQl$&+@e:/o
%&rMI2ae<ra=rRPi[>N!\R.L0Nn8S'/7DG.EaMPX<V+t'K=0bZL0E%^3_C^L:6O:Z_L7H#ps1S@>m72;<CGeO</oAVs_B!D*W%L:H
%%qXn/n75^AE6SD&&TK;+h&MfoG[=ciH+dUIf`S:l2u0F;2t=&f>3:`$Nu9em%!O`K)$?E=O.ST,2;@iXkir][;glj12pG=;+rj7[
%B7FsRI]4J5_i3TgR`sm"l$EQlde[P^;tk/2)>\mP'9=S[[e@uY1<MQ2?!#NFRpkr)AMjoL*1"[P0^a'#1--(dT_bM0.7U[@E/&8T
%o-*XG$`9R^Q6-'?hr<5nQo72+Dn]$aXX_u5`j0mVHF0A('DdIi='54$eG2jV`5u]7HWk0U7?R559Z,?4Vm9]BO.Y_m,+8b/>l\+s
%CVF,$ml3"+f-[BF>,_8NmA`K',4MGkP*12C*!9A_mD-jS5tZ+2MZ-j@5pV>e:/HhqAhiF[msa)1h//`l.1E]_+58C9?DYpP6h0*#
%l$W8,"p_ZD',oE//L61#F6X16\pQB)!j"JJe^2F*ED)%[JN;DXJG^k>pR00<gYfO"Fkt/FE,miM0N7KV>Fu1'd?I^eOjsmEGe7\B
%_.Ei4?CImcF^ihnFfJpL\\h-"@6Qgk2U;T3jF`b$B&(s37p<^1CD7Yl\^kJaIFtiS]jsE(&)-&qU.LFKO$@#[>'NF$aZ>6cjt)tU
%::h$AV?bg#i;-jUngIk3[<l:?m&coNF+a)+$8q=UpJYIOD1H!PL,_;M#Y[58m2?c@b,8M40%SBr"-_#SY]V2;a9(A1>q)'A(ub43
%@/BJsEIt]B3OP%]l@PFX__]20"77dii^8!]Hom*13$3A9]t],<p6Z=+AJ'NF6Fm.PLMRN,#i<M]7@s>jXI"$\:N1c,cqHZOdL!Mn
%&S0@p0u\hPEj9mZbVKK=nsG3A%^UcB+m"OB96YN.MtdHA(7cKqFVj$>pN!rPg>*D`\*Tgco@*ST0>9nd.$Yfj<K(idDKrRE\-)8P
%h(<"E`!8pT%6<`"/:5/fS7I2SFMCCBL6Dl/KZ+#tm%1X_M4rS<R<5@$Hb^[^\V8!)p0bm.E"<eK#M_R`#?YoY.CfP^a'S0DY`:M?
%&3.l7es4"H4!HhD`&oM#BBC#Sa"P8STTVnE%@kK-J9Cd)%c6OH+b/3uN%oc=>gPZ`0].4?a00#L;[d(09f!r%r,/_7&E=QWmhih:
%UQ5/SfO%luj*&m*T:(G#AW+6:TVCorIKUKX8C,\`+kT>gTf&r):WC?8\QMdfCg#M>[A$^=dK)>FchmC<,r6'6::n<#*cf@OJPQeC
%cn&A]#]MZEOs(f3)OVoa?85s3_]k_tIU)>$51cnYJ,0!JASQ`!iJYmM3Z,Ko_$"aA%E.sqCJ+l/a5PgO7K6#X_b0D`4&J$CGa/*4
%hFI&IZCr?t4pArLO0mNLgu4*c).46JU_^S]1sBp5+bPSX`,,;TcD$\Dnf<Z-99*'IWsJk1h[m9a#ePNuhAf0/&_5!P.GW%ko<S*$
%c%+29QaKK32e1*nQbaeG7@c7)`q6DjIH0:R\4jnZ"QJcQ!F,PH2;qU`4s#Wlb,Y*<-\Yi[b?YYJ&ZKTD8/9<8*S;ri:KO%'O1ooS
%T<1#,Yq]bcifeb[*g:I?3)kV.G"cGadjMjMHtPG[Jfj.=PA:DWVrep5I145P;OJ_I*/.SY@8I'+rE:j`!n`YYimMHQCnmSGlqW>]
%9Q]@M?'hNX3>nM3N>CSpmP#8P[Ms<`1Ia6kiTCSW,`h(+_3rIkEDdFkH-d^EV]4S^"&i6ddAB^\WTY3p<:gS<'ckWP8kR:*kX[!+
%-0J6LPVetg2\,Ei"+$"E/J[ksBW6P<Zi.OY>4m*M-,8]LkuWkB/"mN>aJpm1Tq\l>Y<*VTMOq(@7F,qIU7ZDVqS/BH@ST9T4^7lP
%-)M:2kCcU6EYK1JMGnun#oT-PXU]>CV]6Mb\(,Js_'K#:M2jtPo,!c-&<!IR=J<$FAru)5LlTnRdm$0hiL%@lA/R/MOkQT[;ON@O
%GW@EJ.Y(:OSW/I9.+go46jLAq0(0OGh-DZrF<[;Di&l+sFdee#Gj%iEWoa<n*r:^R%m@geLOR+W6dJO`*dW:7`']Tp2\p`=7Ur.T
%iCGNl1iQMqc*lS:`^3HWYn@F-:"h?@HCEWc>jd]*Q!!6A>aDYAP?>@'/MHn[D*sH%gR13Rl*XklWfHL@IP<Jl3XU1MVZdD8I@Nfs
%\Q,CpOMY,`,:]mbs,^?&P=Wro0%C)A]+7onS,75[LCPkK;aRm%JbJKa"Qh`K4T/18HJ3>dQLN7X\Zt*]FMN4(:a.r_iW;XpqM@3E
%4i<,4I_nE>cd+<iH@D^/7*fdi9_A7J`^J,TP*kHYm#6dma4QdCGrcQQ4jBL<dF/Lc(Hi'lk+X6.$#LI;j]qF'M4'8C1@%p3,hcD3
%^?X[<V@L[(j7!HTEPgD_7X=/i2oEu2@;Wd:qrKq"&NI>FJoOG!<i[tqG1"7]p^[$3K_WBdX1h$!;>0rG"G^1KHbJ4?jA;D:>--gl
%m'UEN6ZIIZQ#(A,JbOuhqDS2cFscf$GMZ@mdPp<6HQC5@LBB/qm23.bchm2`hsD/!9.Rp%d`Sds>'M?9[C`8h0:I?-F@uuD&ptY'
%ZnS*3%.`KDaHdTRZ^olg<&@?q#%D:@/A'l?$YF+H/4S?"BPG^<N0%jiALptf),?LK$$Ug3nQfVfOe6[MDmP,\W!=Vk6:'l*.':dA
%oA[$1Ld[*DO<te\01,EI3jPTIV*A*d'*OVML0Lp-gfC/CocWX^6l32::jfnM7u2'"r)mp==^&V<6Y:#VRSsTj)LW&IM-4$WY/Cr3
%9+,]L+c<*RK=LBY(9fbJ\ueDGqg!k'(,4jr\ZL!`DJNfCfifaS[T7j?fin3JP-(#,hlNsXSRua#+\C6c*^)<gdNH04("8;IXYb$8
%D5@OsRjEnX2Rc"bgtGApjX*r5oZ>gULa3206S9r36#^lQ]"5Gmh9@Nnktn7BRp0RROWqS^X&es+W1."AK3Kqi(2?8BkuQ"[@,W2O
%F"<N@FE<@e`U+Nt1q/!XO-[Af"h=E*^AZirVho_H&^O0Ijq_>V*3A9<O_3k%@W%a(Rp-b*k10is\Wrdsk#Qr-A8^M<2fgL!V3tP5
%5a&[Ca3Mo24N:uNjlo=u<gl$-\'b\s\WqgkRp/I#6D]B\\[dtN0q2B=B\hN;_OX]nX#BrfDbV'pfASdjj+ML7CP&N)%bf75kPe1T
%F<,fq@d`-DmNYo$q_r0Y*d[)nH6WQ\5uRaFoQ!ZtcSq1*`6"EsF8;4\?YRX,T)&+gQ6DJKs"^*"s)<b:@lfeKLQ2]j*_3h2$5`uA
%hijG:G+EoU/b:V)A^:4sE3a.Abhe7HMaCf)hS28XY3e&Pf,_d:,DE8S*VYs9[dM?L&5q/lSU"_@0L3,%N_Tpc>!u.&\rjk\*Mau+
%L#JSk(T.gBfHNPt:HM#Q_\["f:FCiZR'UUF?*H*<62flJ58Yg[<eIJF:=uRQO!\qb(;?rBS1n>Sai-8K-g$r'(RU_s(Q=lgN$V49
%i8@fH-O_Znb)i-tQ1RB%KOH^<Hc;NhL<1k":=$c`K.n/:bW'%s%V6EG0Zo.uEsO.0TgQ[&K4MDl9\4[oSJ/HaO#(#m*22-8Z83qG
%h/=G^MFP-PfBOi'alKeE1J6c*FN=QD'"OIlKWQ/GpV[AB/LM-m'D=]:2).kY!rM\N&r(*OT(DE80Zo\3"JLM-Q#a1SP1MN,7&GW'
%Lc'n6.:Ee]lZ>[;=bOY5ZO&-q`5(-(O*3K3@1SZo=\]9-`M4YQ$!VU-]Zl0n0rK\qYY`2UbK/BN+Y9%*kEI[9&`+3ofLcID7L?sk
%QDdJePV<NE-"J8n(fjZkp>o]#WDfV8s(e7tK+WhVfPsDiKKZV[)<9$[@1X[T6RP@UC0oW;).=)QmV?/H@1+Am`u?7>7Ho86KWQ"p
%I:IpBF/HE&_D5qd0Kd$o[00okiIdYfmu4JN%i5/q;6$&'`J;3H="auR"W,ms9jA\q),/.8-lK#[!8kVaoCI-4jnL2c)bBeqA-q5G
%f/mIj_0PqWE:;EGHNudM9<p=F%[tnM)$]5Kc(-p4T]]S=W>J>k)WU^4hc9E)<dkEbSM4fjr*"H\EXRJes&4A`Y_?lg/^pbHIh0SM
%*&m[!:FY5#n?QI%2fQKfR\5-;`sWqIq#oHDr!q=JFh2rVfZj-I'gB6?qjSaE7LEs]:9g!Reps"ordie6L?[$J4l_kmB,NopJD1D^
%eb"/GE]"ODr.nSEgBM7XfToejJbe!<"mfM1?e-Q/;Y?#DZ_M?(/b>O=jZ?Hh[$S)"+f\_*mRB`rp]n.5*N:f3kXkC4'>(VPjoJu4
%L/eIp33f&2_l$aWW3Z)R4kqStkc.;4;k#ksZD-psIgAq9WR8KA]<1]]eMqlTi'(1_WCU]jK2E%dO%oRqDpC0,m&Po(1ac]DZGFf'
%Y5PqJA`V6!fF4'(JIkq#>Ou6Mc'oL@1cpc_C\mW?ITmTW]Q!p*+!XsG6>LE++baY@9rWpRb!N+8-]/>;-F^'4dUeMkJ!8dSOXZKA
%;."4\YT1O2R[7WU^bEZ8X.FIfmD-"PrBDooR]BBspH1,H(Ei/G<!a&%CZnFQ,:\t[WdX_==LN<\h21K.=2i%>BiS%4!?4,p&nOQ>
%MpE"o$H+82k1(C?ntbC3$J1rt2Ert-=_fSGK]tagG+H)4Nj]/%,s@Y,Q>.>JDZkbD/_<<"\YpttO^O>A%Lfn6;Pa,=Q#Q]p#"q1m
%SViS].Gsd#gG*TD.ZT?Ui0uD!S<AfqE\XsWUej'"[nc2BXuJ'LZlSC/hCT3FV[!*XcHmS'-(t=r1hHBVA#8U8oXpX#-:rJLKQ"T"
%;[d9i7I;P+/a>^iDN5@D&PhP#14#suoV>:KPYC--\u&-mLEt@*;]hh(EaI6Lbdg\OjoPF&`GTFk)TiHRSnc7q_8rla:?6;#[q.q?
%ih"S(HFH7-%X@oNijQNrY=`NI(hf*9Q=r]Y+`?Q084Ul6N^8WIl>E8]d#e6s3JUA/q<Nq*<U`&\]&2]dX)$5=4p'l,];*sp2Nc9r
%'$!\cMIL@?,6Z\J6SC;\<gA,k<!=>-4qrZ?.iQ!$"4GcIifR*'@n\XG0=5:0d,AoB]4[-$Ypu$R?a+*SO:8I3Bp#kU;.$GF?`@AU
%QP+]ATO2Rc8c/R`^;<NXCZ9L4HuaZ')0qLhZ;5Et+&VVl(l@.cSdU&]kBE.H@kPRRDK\+`IW$>(`5XGH@kL8(!&,qS[?TS[Ci#0G
%==ukLm^uchV9r*_DHXWIaRSn3/OArmQ>s5f)$&KO;L&aF"oqo&!Z.%$J>KObN)4(:OkC7)['dQqgBm.qK?X;rPKZcQ69'&u!c*p*
%@:XPsk20E9Ad<KL/=OM"N2cDuN62Va<OX3>SJ*ck!ZAQ8Qof)#PITt4V\d9_/q@?ti*\1Q/*=a9i&jbR00;bn,FjPXJ0c">n!rhp
%rme^\[%<!_n>or#9l^:.c3546(Z<,EZ6:b8?n]jeYQ8:,X`1R=1-f#h3>isWH+SQ5mH7WA/Z#36XW:cke[6:$UOZ5WB*L*5j]qn2
%PfNrA4Z'U5a91#Q=<[Vh:<Z>k*H77a4('Y&a!X;,JL0l;AP/:M])efb;ll)db`(,L"ZQ4E3sp$Wf`88,/$p4?^eC-?CufgfNM@79
%?q\YcQ]Bbs;A>Z'[_g:&cLQ!!8^7hP/H,jt8mj<SOU%sG2jpd;*oPD(\r+m2gjKbcOU!G&GdJ*/J=kLOf.CbB&Q=SVee38HZqf)1
%)L6j3MCWK'&[T_eMr_QZ<[COLj[_d"4H-sd"+C>BQ+RnM(-8,OE8gFF`0*.&;**2:qcjOqZs].]@+l(F@jeRJmaj-cT)3p"L^F5p
%IW4`8NN>_ni#SN?2J&Vq</]>L40YZIpB"Pb]OOpUKrn,,!Ge5gcLt8UfsBc\]S^:MaTJ&t'C4`<X'Y]KT2\ZK*uo>=Ab(ilN&#-$
%Ya*<li60^1%!&hCaWjjai,3,s#Wo#9<Ur+48n$U\-')1&U[t$hZ:#`?b2dQjUF7J3jCL>R?7(^8(-,"^$&'dp+=r]]XEWjqgG)60
%0Qs?Hi`9E<+*e2k5_R!\S5?8QJsPZK+L2]kI_&$r[8*<pZu0A&mHjCSC7W#($+;m?TB?)>SNJ`29\qXJ)?]]=5RNj9krS7!?^$Qb
%:W$lTfK,+_dhnGo\A`/5O>@cuBq4/CAM)NV8ZUaaAo#0:j<GZ$@=54HKt`2g:$uY*bj4ZQ-gWL2hW,??SAm39S]8U:k?HDLbf6$D
%o[IMI1e*]nA'T&C0Vt*E=HodC`u.\ajJFG+\cuH[r6Q?NB%1C>^u7'2>ncZ,#?X/sCDaX-I?;D=,k`W_1ng5=)lT\eWpG#6B2]5d
%P@&XD&UN@8K%d_#a&2TVO>n77@tQtkjT57Fr4Fm_2!,C@fQ(eMI`d50,7/=`pUUs-@AOJa]YfO)&Q[ZV*Tj%*fWq#pHps<%Zc:Df
%g?3Qi?fnL71s/*7+FJmO"Q)S&&tapUkKANPmi7[ri-SXK/Dm8M'L(eD,019cqiB.,^\$WBQUJ56D0P'kBT4]2?@!Ve[_;(K4c5Yi
%%KO_rE\uULd*85/;4tt,^$Xu/apOEaj@R=\FM`&EFLc8Xkdb-:^4V$\*aHY5XJIitBA&6;4-Zt*%eu>Z_-_+7]q<6On!tq__fKg+
%=XoDonFl/H,j"O]QcC*o.auS^q>P$'_)T`b'?KAQ@aj#_!2"=MiET^6:McBgC]Jeo^Vp=ab!nI<efmTFc1o&?LUQ6k'urS9?i`o3
%X/V-Pk>o)"nD[VY-=)"A=RS2KBR+lnZEuRS]tNJHN;nfG]X,)!*72QkotJbrU0XZnVu?11@_dLrO8PcL5B#$"S1&FSo6ts(%Io>V
%/)GkfhInKe@P17Z]ho)1'k.TmGHfl_*I[;DS"o/r-)Hd;%),S1!4Op3P"GeW\:#^T&8$B`NAsmTHM#AM98aFOkWckn%4WVqiU0U$
%rS1$d?:#:#?I;fY%'!,B&p?L/_!\WD*<t%eRg>VT.f*%E,i3K2q,5U%VAB3-kdW=u[\_pL*oqjh!V'Oo=m02K"?A)?T$"#(I#`.W
%_,e=[rAp(i/f;d!+#h3lpl[F9SX;<Ioi9YRLJ-UD"#S4:O/OP^.K`nH-;qJ0mLYdG/[FIZT]U-PCN]FgX7Te;%U[(1RW`duO:*D\
%>4WJ<5iLma#hNTqV:G)f9NCfsO..(5qf8,JJB>ZN*!m=GVQ1Aj6YI@Ea0qnMA+]!VK,0:r7,r;>:o<!!$U)q:Q^1iSf6sV*)d^[M
%bqO;4S.OAmkK5M^*]gK!B!^qfS6b[N>S2W`$mBY>^?t9j2Sb7(<bafk=J?KJM`\=FZ^QF;FR7ofd!]=_f@1jl7d6t#jTE1Q3YKFa
%d>)bWG"2WSed%UGBX7&LUh7%891O5"Jmgn;+E:<K$epP<B7O(&&dcIh@Xt6!'=2h32)DTcWTOGj7&^9K7&^:>6n,k!Q(!_!lf"&E
%4`?0T*0;\<ea1bBna,FFSRs,8eYial7pWm:H6K/^GuDHK+\qX)!2iR^b``+jfdiL=F^U=ZFhj+eo`B>crc;+TkK)91\KN<!VK?^H
%c70FfA(k_*--?jPGhH6WJ-09Bf3IOr(J"2UADrS3.DX&UQ2L^5p6V+6J/<d[.4Vr5U(g[8eE^LCJZM>uad=Kq8KCZ)9J`LFV[d]G
%.tFAJ/2O-tAQLsR3]\so#V@j/Lij4N1/j't(!DD,.DjOOLNKp1k**s/`!^1F;?n20;D0^[V2cp;VUY-6OXYFc^Lg(Yhl3#Aa,i]d
%e1l9lEm96L1fGmMa,3iq4EX:qV=G<RaZ%AZYTd'sMp9[TW@V@nJ)uBV9XP*`b9S\D46S`mA>nf4X;]?K!^*5s(iuO(NPs_B>8=cB
%0.^1^E1C*FHie*2)327*`(IQ!PKKqTN+/fOlkUWk'DFDhl4/+bE"``]S8U[C4,5Lg$BUP19USc[HPYhr$eP(^ICnC?Qt8l1E+DSS
%^s&$(Sth]Oa"'TU<.9*ePWHNU';^`JLd\4Pj>9^`&$Y1f*E*Pq;L-j%k"4[f2/5`!K^AG*+qkkH6u-S0<0kBAGu@dQ\)p7n_9OP(
%<?$E1$^;:2Pi)lo1cl.>pB'X;_u*9H,C;:Z9,usS4*KHuSPJc'4cf#/G%oA\dKZ8u*5%k,4<j^raqa_6\*/N<C_?KSp4;a%X(Tih
%-\#6d;'G`Spla"Y43T`nL&E9%Ir2WL`qLhka"TY<^%hjCV71jP*>LA<[pqg)b.*_.!c1T'ntkI=XAJV<cVoUcKQlSA3MXW]^<+Mj
%U`#.d/pFS4Nt'o:G-JQWIF+G$+XUccZEq5_8QgSuMCMs%Ac\r0g&XcJJBDh+X<hEYhTa6b>#H-p8.]/a!++oM-E^%b!`kU+b*J:2
%0+&F:S."tnH)\s2!GT9&rJ6CR2F1.1967*Yd^"D"9'V_."ZY0r9ZmLGj5<U[faHr)jqekib#aNsmYjS<(?+9;XE<qr:b#\'\-jF_
%Y9%C\17fPnZa;8Ya)YoHe$:A3h25>i.gqG?L@_Jt&J/T@0Ir(6m0*W\Q1]aZm6A=K>DDH[)`(r;;APqTp!g:Q6tH3<_Q5<2`gk)K
%"5%M[9!5#uEIR-m9uAh?X46.fb8"_oJ4o/=!n67^RTGDZ<YhCsnPDm%U(DUE[.e:<l(k=^=n5$G^>_c&N0c?lgHI#60&fL([kh4D
%lG@eiraqg3#t5:u^XVQ]C/u+SRbFEJ<YgB>=pd#8M_en_6d/k"1!@^cJ]SZQ[[`IH+ft&(U51+,nWg+U'Ojt+8:mH6R?Rm!k_G:a
%`Plbm6KDZsjK/EIk%&IdN'#._/2#$.BiUIa7A5QbnjEW).sPf0(9jfU`D]g'8<TlSlE$=kokIMC0luPH<YjU*WU.jO,1^"m#e^IF
%pIohTauWqTb*&[73@;Hk/:j$lTkRXLP1uNXEhL5che,gS:E.lC6`B^7C#gite[bFD[E.2`p/HI#Llk9koVi(=lF,*<*iqf2$)(.c
%R+%rgSENlh2Yn,ZFEo@9d&.q$\/c0N&pss^LOuP$3g8IC;u"K`SF7MT$ArU15"V?GW@,'R\"9q[>nQeg/u1!fb(%I:j+1,*UY*ot
%(3]3B@?@6'Q$nT&Vs;>-TG+4E\7J\^Qr=a^;u#fq]@E$>HHr%,i2@kih@u&JQbo5l,?W0H2[.hPg_t)<=L0SSBN#/sX=9f3VFpKZ
%MMgPf&,d)8XJlj[CT9:rM<h5lc>F/N6Wm?q3IB.V;tV:$X)6=,ahNqIR.YjkLkKnZ9juao5;>06WqMZE7FDkQ+`&PM9k>l<VG>ds
%;0c!QKq1&c@3\KTqQCX3^+Jf8iq#p6Wl$nA3bbVf#U?igH.P@8n!<,jZ)7(.-J$ZQ4)6=``gQrE9I^?=""Tu9iiFTE\"BIL2H<[]
%25<lccC>u!kG_-M&(7>bfKH6+g/J]<7%;&T7DC(qVPlR#YDBQbg,%(1Bi>S[BT5@4<:-:>+(e'f_-sUU_c7tK2@i\FD5t&"_pi?u
%=DI*q7G:_49qtFR1[MKJ%hnu"2MI/s7XiNbfT%F8/npBD9`u&sdV.fSARQ5ITrqc')uBXFTsW"-diW=^o-O6#?+Kuuf\I)#Yp#l,
%e<u6d3W5Ysm+3!K_h4e5<RMrhFjFH;q?,Z]_`6UMrF!+$&/G%/`Y/4n_hnA3_Er_Pf%fsGqZ5'Hc:p7D.))X*cr\j1F_/0lfFJh/
%T\MX+J\rJ`I)pcPFG,!<fFJ_%:Ue!-rIBa6U?B[J5gR"6HB(:EEP.oR[\m.%V<HE@EH,JQYcl`B7#kWLZ!JEdK`$?aM:6lF_L=aW
%^?oL?SGduHIWsj!OSs^4J6-\5BtOM*[\:uq@';lBP8<ioY`r`cp-ZHe#]sN?!05c4_L;JC]TB%q+&:$*.AMa^O@J:m37n`h.dRE6
%-!ZQ[U>MRQ7s8?O4%oU$4gAjD2]bS.98_E'rnH9e4>+ms'd5e(d#.Ap:4AiiHJ\rN56*JdQ]W@FQH0RS:?70D(@hR3mH4d!5N&BT
%$fgRY]REs/6@[osfIo_=cG?kAC688@`p9I-2oGD$khHtSduF@B[YOiW_LFi:^Y>es#lt*p+"Nl]^h/>k75-k)D0J;SrrLO[AWE;\
%!-lF!OT5F+=_>O#!+`Ht`.*:S?LDJ?r^.GqjZf8so,g`[M%4fZHj`%9iIlpbcr0Zd,<u6e@ZsQ;!.;>F.0PGBXdYd\!Ca<,I$ui6
%!!ddF(_A:(</gp0QD<]cC((A]]V%.g!s55qrQ%S8"QhLafo9?GaYuou6tJF.\\GnK!\``m<YL&3.G!]8(>g8T=EGl?SrlI!2;4K&
%cbV']BZ(^F:FOf0Y+Qj/WDKgXNFJI:bXl[XO*I&Z)q\X7k=n.WM+cZ>puT5@o1`&CoQn:H!QPT!\#p8qn4j\`',HH_YT>,'4g;%\
%5+9Wi`L9uT6Rj'kb]*=?\M0r/9Q.JeF-8D,S%7]fYAE1523'OUq>'qLa#_+p@uWQTc3P2G24d%me78(B,)NLt3cb1,[qd)<3iKRD
%[iSL+F3V(e]!T(]cloR(((f(+Ra)Z:[ihiA'6Dc!L6HC"_rdBg(.Ca42=k5/*Gq9<lb:u\F6:;:3*Mh.X_5DK4(lnWcMX^)S8$%g
%$$N?$Cr?.5B(HLLfuf4!Lph+_HIpM,K=5Sn38WIID2PmoDj#GOXkIs:mHC3W/#kTT#7Z!TFoQW)d%mg^m\"j0<o3a1&'CQ+>!hl.
%!/h[S*Ai;4?fhie#9M968/sJ%bRcTAc&&uh#-`@UP:rema@?"1:+htKVMbXTn/TD9_`@FDEHff<2+7I+ERA1Zj6/o>"Z%5(#t+,i
%k2XmS!G3CA2DamO4Z'^7S[rK<8ej0!9u`?Sk(MP,P6^bbfNg<O2AZfJ-+'5QBHUk`.b\/bCaj%4K+8fIW]<[V]tA-Tm%DHVQlIsY
%qiZToK\\rCNZ:]!KRVo;#7[mfpc[c4_,P7F",hd9fW5Yil#Otsb3mP2H26u!*&Ldch&BqQ6'L@P3G@-j*TQ@VU&&_(XuL)5nh-F:
%AH!I&@#a_X?)0&b.IkcIVBDL,fKJgEYF!i)-A)#*Y^3=9CGu2$3auDj=Vq*3SkSb%S.k8gR1JogaZn8CCsol=eZ\H[gRd&Y831Uj
%Nkgj63o&l_fAUbHc.-gbo4#G@\b[%OZ=J#&pb5USLPig$h#KKSne"X:'g>]WI=DLbS(tOXh`%dSi-CM^E43;P=DY-hGr7'-\b_lG
%UYOo3*$Zp[(M>];HShNZK%flO_t<-&[AdFmL\''8k/*JA5/1uVAN8@J\Ee60N$]@4hjiW(iq4p\0/clrl5a'g>/40W_I-amCXgA3
%^ol[.&?Ts>Zb8kO6u?0:bgXngU&'@Dj4Xn`_GHe3r=-E7EU<dBj'#h8Op>+pN$Am5/YhWR3#_]cc-E`44>*[/cq85eJ!r5a"5G,h
%dB7kuO>u6PNIiLJOn<=HCGU?ckV2?$1Rb:+q9Im5dC'hZ[`lF\D/4^Q1>8c7]LpAJ4J<FUn$()%9CVK>0EppSAC_F&1>RI4BXP3@
%2m<m3HoVHp=DBR&Fh16'3RGn=L;9lbN`Fs@2Nr9bKt7R@R5&'[;KG>Bl6_f8Ht]5A"-,_(]PFklAYF!LM2OY%&aq`nKUc*.k(e,(
%f#`Wh:B=ZLFm%0-;5sGCZ\5tei!UuMTLRbj49e_HC2epONZ'c)q6>;kO;(X&nqk[A!EBY_/-Z&#=uc3u_:+0f@[GYA4CG:`8B_]K
%ZiUp`F/:d7;Ep:_P[@u"6sr(r=KJ-NQhTA(;*RplWE<,Nob2mFfe)bW0G`2sK3A"<^g;+Wb9q<YM_dLu4qZG)T3M7^:50S`@eiDW
%AU5p]^*U"l4Hs:9'*3GG#VDYSCg/f[Q;9&FU8T)E;Z4NMfEs#JYZ=R'k.M&-Jg.F`k3+nhkdbX>9.8er<lFi;(D0c!WKjCaRQ(e'
%BpA]XKlYKA9-k9Z?n7pA&a:@tYnDpIYjcRe3K9LS'F")LVj1((m$oZd^I#s"X&qZMU/Tk:Z3"`feYlot$At('HBns%5cli2UZ;9<
%iek`]cAH*476kqk$TVpiD)nAV.Wiu=-,(*%-luJ):d!YaT_JREh1\sq(qEI.&QlThHGh:o0',[$5oudlRh\bq85;*A=?r!Y&e23#
%'sfb\RDoR^(,k-1ao]eL(sNGKLC/F\QMDqcT3UgZ[gJ"_Z4_W#HHE`V1>ULgMHm6LLD'NDKdF+]---^Vr7jgi-aWYOWDQ%QJ>7oE
%@:On&&]J6cCCs!\;Dil9725@)[N^TVs)M.;jFE`aj]*#jol3o"XZ6VX:SN`@BY&%6A5s=(cF*_\MBWe3^CQ5N!kKu9'1ETA>C]#_
%.&uEPR[n7tof)($=V4);DLXEEZ%S"dp*J62R("W()N'2PUg(oEf#XQ5)N%Jue$281<%k`%.Z20=%']4F#K,[iM!;DIgbPs@'<P,8
%8]rNr?rfbeJ@1?1]MXpfCtrBtF(BKZ;<2\nnd/TefbIfjCgjuZTjJn%j^Yui0D\&_6o`[R4/8g>[SSVno'.A_CS;4tp![?/H=/%&
%Up5XMJOKt>"-+/^0/-V/'.]Z;8G4sH0^Yrq3oT<lHq>+9M\^MXn<8\tDpE2mAVNp\4k0<#.FX1EB/KAmie$i"#<\cp0RK`#ZW$5=
%*pOU;/"?q"6ClSf.#*],NTG9i@\[,`Du&&7i$>MbfuCjLm%!dkKa#\(M61HbI_a@.nTc:])"S2aCc??tmpL(-/hcBlQCM=O&ZJ#i
%Ti(>,]Z2Y16B+GBFkk'!s)ngi".NNA9Po0&2=$rb^sPM4^[ff"l?q$.Q63t:;%Y'IB=R]H?S>+Y??T24L$>`^l_7.Z=cp]ps#71A
%ISY,a5Hs@GI_a?"rICqO?-?G(DXF0IBT))KcM*CL/p:+TGD>P7_1/)T:RVW=,IdE#dZjD57ZW@WQ<IIjrB&ZC7(hDY:3IN$L\?+@
%3h><^=*sPa,WL_\LO6e+-YN$\^ntVPbL9ZZ*Q2HV4(5jYi<gkLAYZ5Ki,a/tX*j<gA>W>+UeU!-66bYl5>$H.<=.auoi,!MRV"Q]
%$`Q<TmdAA9M=AdSS3L\]VO=]&2&;&>"&36UGs+e[,@E&cfX$,j@G(u%!01=CK((HJD[m.e'9!c9Oo3"XeG=5^BtWN:8?<=4@t<n9
%Js"U`;h&\(&SBnO$X@14]U+&3L_?BEV)M7Jh*,O5(\g>c(1L-!7.qOX;Q@F?Pa'2ED=.OUbU4G.m44^LMK@kOB-2Em!V-$=7YH/d
%4m+)pfIbgLeMr-4SiB6c/nh</V4P#.L;u\fYUDm$Ze6R?bV)+!HkQ'FMnl'65L6`G$gd3N]),*Hb3Y6fQhD-+@QdPjT'cbf,[$[F
%k8#(RN7s0SW?@K:6uS2gMmFO-=n!E$'F?aN+C$H;E^/.)$c-LAh*(RXXo@W(.E\-X,-9VT'u)$_!\8/FG=s]_#A:]0.1]d'*_SUE
%6-7JHW%O=<'1L2IOe5FM&pL>>LX2RK,PA?=n3#u*W^mXR@.1]XAocI4a&T+]*CT;CH@$otkFY+h/tRo,Kh?PUe[VSpN9l4B;"VS(
%R<b.%O#u;-c?S]/$-ZTpLjFLI)&t`sl[<Ut%/e`a=/N.@VLp/-%sq0ha%lDYn!BRV%DH.(Rf3lnZ90R?rp,U0)O><R;RbqUDn?L*
%S)i<VE,6b-*\1ZqHJU+.(6.p[iOn@.!k-YhQ>as\HbSVgh\J?hK3mX7[V2$Dm;aW9kfafR43:13GdK7/pQph/MTt@]2&F/nCg6PQ
%Mc(dkD7`^)G0@<_&%1QD..KZpR'U.+?tS0-@#Vd1/7mQ;Y3nZCa<UQ:7AW2FgHONYBeq3oQ7XOKfu)9U0cT*.Q#p5$K-d*k^+C7/
%QJ`p%Sg4KXO,K0>$gdRT.*8q]0o`1YE*9pB]"KB2Z@lG(7Z@%@So>(*M>dU?E!tW,oea9]GtTPa;)!V`0!/N&]@k>[>;X6u_5=\p
%>BG5H:.8X//UH;SpZP5h/[42'Q=o!Yn#!S#p68e(QYU_8\]$YTiQ2'oT6(kk3@Ae+P9SL$"E$&IN)W!(*\\^nNG/4qY+jE]82%Z6
%="05i>P-11hVQg>DBWBWF31r2'ST%^12]n31N#uj4A3I@CoeM`GY1pZpQSmpP8!L5j-HFt/Is/fQL,=.>KSNS5kI/1PhT352Pm8*
%EoPm?=EOWtpF^d7mFaj(;Jsn2;YLi#\O@T/Eu:a<>P:oNNN/3!I^A&.Q>jH<aM\`lb]eg(MFKn<KNhhMIMUKX1%/N0$+Ce\K\MdH
%OpH1K.j4+,HbM)Oj7^/Ynng+s@2eGioY+hK"GGBG0@@&&Tig_H]+qE0@tTrGZlV<fo'8D@Bu)!R^2-JDH8%PlR#R-GKsq`+4BZCk
%-rsj"8diCR.n-sL^e,/S/6Q\0D]NQ&8q8+PRCPqjL$Y[A-,=rJ]P`i=BBr^';T;V;;MJ,QdKrRLdV?>"P9_[;4ekQZ-S#4h:.CFX
%-%,W0#*pMb@Gi=HjE<P=g$L"U<l/r<+]NKI<qg'9/*/7_EQ"rgeI9c,%D@dcGCSKO7MM!T9;es,cW+.)f9Po;V3Pf4>-cSF/mZY`
%Q.F/JEBIB<bpW^'a\$AHl'mYl94;C$@0o_1>1"#=if`MZ)=;Pmao\Z"e&ucsEna:2<<BU5SELOu3AHkrKVkQ@1a(\lOfNSuP,n4_
%W>;/,]jpPAYFDL@X)<'t%gK:i`Nemal_;+4^,-(URB-N3;S@CD-S&%4SSTas9$f*E$YDu9;T;V?;MJ,UdKrRP&tTg%6B\F'Qg.WT
%,tk=nl*3iP<a&An5O@3J,g<.UaD>+r1q!+CA>L$c8Tr6W_RbSA(m;"S3GLht@^$0fH+g++!M8gU>9;;2j!j4b^q*U`nT6(mgYYrX
%PosGC^Sg-C!E4%dk:6RnXr3D+Pf6SmPtoElPtou2K6`H($[]V9#tr"\9'NXIYJfPh+(aVTT]*#>F=$.+TU/6]'"d-mcS8'oK%<L@
%+JpYT4%2Y(8QUKfWub(2F=$-5"!q(V6Sc<S4-Pp`_%GW!A0m+-K]<r=K%/?JYRE_K!jC1lFqSAVpG80Hp=+cL!V.2^chhYTean7,
%o6EQ-SdtH&34pUZ,rhOk5MZ.t]T8.]I;A28iSuX=q@S,`HaPb$TR6%?O#4Yg>)n\ITuD8&\1s]LUn-bbj@]\7KNo6Q;PTeF'l+J<
%Ni?SX7%oNF9!nhe/%$Z[NT=ufo^>:0'l#g=#rXPhj4gaOC>3V8Y>hD/,8+ufWRD'"&d8T[;[.Zu`e!C#'?O'(/Y8NIXAE,i[9TX^
%_tcs_"m&aKO?]pM5X.He`?,.C$!(JBG!6*7UDB4;&^c)EW_Q"K"fl+Whug]*3:1HV3D'CSc(MAm5Dd)b)N4iI='V/.8:^A/;<Ulr
%=VI+ro4KGYpDcfAh%@<Q6en"](^UB>o75f[jb'QpaFncN7oXTrCaZ0bm[G97Z:dC0)p<H![;^Y>j:#5m"Ci/11UK.:oAG"[KT;s`
%F3G0Rqd`"G>Gh6`e>=VEX=<-8?Xq9U<?kJqQsf/d8=L8[m^j!Vo2IhE*5HiUMO<c9L5ap[nE+FdkXZlcj/$QR=_dhAMA;$ZCod*D
%1WUl'8IZ.W,A%c`pNth?Y!4ccZT38@Eh^/IaNc!nc44A[eh:/R;9b(7SXnI7\.5$(gGuY&qX*rBr4u?j['e]1MMn!m>?SIdK.S7\
%)7CLV;aH$h&mYfrJ)T`81bcSuIjH@?oK)V:$+-'Lg*@0sR_dA(o5)4=7e)6`c:#H"A_p\/<9D^eCA"=Q,&\G=+jXT%an)9(0LIu!
%Wi7q`8B1A1/LY0Ak5"Ck7^-<>)^b;G?SS9('9JM"Z'ILp8gIkE7k^jGGWsq%<YYpQK%LI.-c?[_%$$lnl[tm8jbB)<?US2!E25PQ
%iphT86k)fJpHl<iZ>C%__4D689UDX#\AhL@4`e1-C3^*3ct;WE9mD;lCZfLPY=g.qbMp>=Tkk%Ndqcp(HI[Rl&td[c`hFAH[H=:K
%RbYO.HO?_R=;4">9XY(I7:4np\IMrp);'&7'!$#`@b:dM'AmsP,IT4+_3\l[fj*Di3U-d[XWI!=9*;(4m=AFLL@:s5aAb3<?M>PX
%0s6EPqkdEOapNj-CA$EME#):)_\KRFN:JqUe)h]"[6s;u->eHfO*Kq*H-K$U65?*g]QA/GRnb\>FViX^YT7U<WK`sY+U4Y>4Mb!#
%]Og_e@UUZ;F=Zd3j2:M]?h\`%K0=X,C(?DcQreV^';G!Jetm,S!PG5d@Do6BOM\fGXlGMc1Xt<K^G$?"o]<^ppsAXVN3&F<6PeDa
%G$tX-T0(iI,igPD-X$i04c_mi4p@<Tj-jbd?lk`=A>m3&8?$4D2TmkXHE`$k)U$#;1Y[a=>:NnhdKpiOIFgn#BHu2jj.[mOLc+Xh
%(^S^IDEe^^]5?I6T*(D!bP]"KV9JS*15j*KFHX><J\kYhdJ&N4QkY9clI=Q'[]sZ,o4LZ!`jrXkQQ/kGcLsMQRr/TB;kuiR!dbqf
%5O4E!o.WD=e=%?&[HhGTZh?dP4a-mk>J'gg$7GC\i-JmY2;Q9P!/.cc917GT=P.KtQ8lX,GIW!f-+o<*IptI.WC!(]RN$.oeT?O/
%F`UfVR1&PDU9aE>m,Z+8!ub_tl<l8<K]5beV6D7t$*6VJjkI3Ncb_*8;llqig?:?QT&Mo:]@l*`b.`P)BKO1TO1K1AWFPX3A%!%4
%%;(CCjLiY?I0Zm&fgbQ_lQ>m7cWSP`a3Or63=TX:O-YPFWt#6\,lqi?]RO9J)fp3-7R#Ao'Yo%m][9c'5-bTuacHTLS,^9YUg3n`
%T0'.A4hfc\*`RZ4iE>!';U>/\nUU]crDHupCBr^0qVIf>_)H(h$Xb"#Hsk*Z^=br'Eg[#Y<_-6#lt8'/d=[T!K'jUUft/7$,m2sL
%=noLKVG#l9"/^b`D`2Bt+OH,ALA0m9_eoIODBuqE]P,*P6^lhO'T&%U<Ym1B.8Rh<:OAjr4<7g.9!_phbd\g4:Jr8_0I8j_)gFAP
%h61%`htD+g1RL*R;*nLM8>D.tfX$Ra4;#*G'Pl^PQct5rPeVp-%+He$=#MG08lo=aO6A3*H:59rl!!pjE&gIc(l7ut!tC[qTjOWA
%?Wg+tcIhI<Vb<p22qj`$=]1Lbcee'[Z.Asq?YRU*?,G\(6nc`74c8To72rlB5;F?S.?E`&0M,<Kn<=J.77'o#q6j[*;T`f5/Km+=
%(H_pc)_$LVq6BZL`M!Y$>o+e#m?g4drGGJ4kmJ7*H@n4Imr3hl+df;F=GDKpap&!Z'V>a^8dLfXHt)))VZqa&JXBOR^m\&qfBK/A
%g3blc.uR\je(u5R-j/Koel5VCG?5[Ib?"+R*$@.+;)#K/7<#m,PL68Z6_SO]Es@LlTIK0,T3#@="dDMa\p/*3Lg*UZZH>YATtk8c
%bTpCtocGinqrihgo(tW8+"CqdS$`t6J`nd^rJq&pE2;^Wn-/0[qN%l<jQlENcW@X(UK#*QpN;+j,nEd"WXQ!^\&331mluHd*a^#X
%XGkp3(\r[s>`a?Bio]W(d/:HCGCKACEbQ=$?2u"f7rR]Qipb3aJCTC7Fa\er;YLV;(FJ6Sff>ZCEDr0i21MA=d?[,%MI:W-PTMtj
%KM_Rmn?oFqkAUjMEKcIQ-)^Mkq-<%9I1)sBTES]Uo?ZB?_;cjai@3@+4$8V2!,Pu<fuTj&(9shgG=j12?h/9qZ^3X23Q#mck@>]E
%#crhlag#4D$$D6Z/%&8'0rPCd=ohGX4C-ek4OIY4a$kmg&VfPdk=[^KaOe$Lrd#1,7iP&,>FKkoBDs'YShk%2@Rp8-pc4HNKqDl>
%UT;ap8J9-ZJ)3i&>mu#^>Qtg(QnC`D-G?0+'4,W:I`I"ZIJqYs)YI+R*3dFh^>rF#Zi402:%WXsC^FR[8r.ZY"K(-kI]G@C#HUZ`
%0s125+g>1fJ(r#):P8W;ANH]nFH4fS]0bmpis4/<C6p^'&X[LnE6Luj_/:5o$8tXT^rF')!Q_JAUS-+E*R9__:%]V8Qq]cZ"Kn)^
%?l5m(.nT_p/2Wa`kd.W*i\::n+6sM7el9PP#UFLV.a\O?Gk>c_m$A-E+.puX>0*-?#].JlX=uH-(GGu>ceD6&=<YIP>Aid[Y+>ae
%UW*ZM2=lEbrVgjr8c#DN2a&nRLmWR8V5OG?SJdf0SH3;#CbiTHYVr'%aj@b@J?Sj9OhZWcSgIb:0Z@8:W;WT9=@>8(ZgUG^+_HIT
%%?X67:t,G4)3Y3#jcMtrF+cZ!aciO_6]9/>Za+<ro&f3RLneAJXKLU5=D##2o[7:SRs@YON,CO)ZTBqE>A$j/MDWbYLs2sD/D.P6
%ge^/k1riuZl9oB%47-Jo[U0B&D$JgH?UA)@/_8XSqkimDBF\cP%DQSeKsHVc4F->I^h!<u5?bZJMH*X!Bo<a&V\>9gQK]6(@9uQl
%U3P@p@A<<ULNQ,H]47mk_6![s$TuhpOP&uE%$iUh<k=gah'0*_^/CHLjfg9NKjdJ]*b']f2/V-.4AH'aDa3^IX4hZ#qY2\eH-Xe%
%G$lB"<__YdUu8;(e@6l1R8R_b#`Ooe>V7N:(#dFQ@Cg:fla3kbZ97/d?Qrn$:>0Y/hp[$lgZVH]&YSPQ79hsj7PXRRUlcI<%fLEB
%c4\;&#@i/-]hEE(-,+@e9(B$(F\t^\9OHV2hRBR&)Zq[qeiiU>f[T1tc$SJ_kQg31>Wc]`0.#\C_h2!c#,/&9)&jPqDBB*Ecn^n,
%BGjPTZkM$<h+"XY#9$h/l/%mLB^")]Ebu:CoYTmj@DmYMIU1s15Q#/-m?KLJrFb?.'UH8-\*BqALF,D:XM4,S9/TQqr+B\^27L8]
%DeeKU2-i_.rs\:jMZ6rZB5BZ[%<MR&""13.m7GV^C2YBsZNo7%<':(k'ftQ!X\8[3YgAft5HF,UD$08+1VhP3(?.T[eXYIS5W^]E
%TE-siP<<EDVbu=KC)KbVZj`u;%@t_eJS5NMc>kku_]<Dm%*O(>i]sR$:EceZ[Z;AG##UuiFK$T9L't+!.j05Ld*O"R:-89uKa)hd
%r]/t)b?/eYSZr"6nu.!F]*g4.k!H*oLtXqH$Oq^=h82#[)HsE5D*oTjZs&E>TCg==.`rg>4GV%2Q9R'Kcq`4VBI>>P1gnSA1u^h(
%<i=UWmQq"\I(p@3)B7$@,T\d9fi[D(C3_.AGKmMfiCZOX%pG9On=X4.L3oi_6*&*PB-&o'f.19)R/X\7iMeFdoK]L5M/pg*10Yme
%e[:QHMA@N+WYZHiQI"c41oUup$dB/+k!R=5Bg/nFIbfeQ@G3sAd+C+Qh-#"%&6Mk7P+3[of9[q3<5;aW_fD:Djc>?W&,T%j&qJf3
%3(U)00X1#AUrWQ]@q?,^_?93g?idSgegqbLjr8#4O[NPK/!Ej:i;hqsg:9X4.DRe"95tp,IU-T-s(oCAlUSQm3k2T,n;*>`HYW.^
%1A4Cf);%C#AWDmm%/f3>gY1/+`cS<E-N\6SJ^rT%;Z^S&4UQlq?%(F$97_5?hIP/dh*?)dk!oKkI]Df]M'J3(VfbHb_iO<Gd`D1^
%(=m:a^0J/OeRW^;U.?O\e.9ECBKctfLW<V\T_!ro>q=VhbU6"?,ApMH4'd0A.<VJ9^:a$CX^>kY]lTJ"?9Y@`$&pQ#^=:sKn"7n0
%HY_'+9#dO,JF>f?VQ3G7nUW**gFH[Y>p>inaHt'MEV1-,&uc8ai;m]!0=V-<jC03,RSpcWck]QcM=d:%*m6i$Q[D_9j^mr=kNPpp
%\p5OI6WGuXJ$,]krF"G,hGdLeZVBng$E[W.Y"VihVb9(4:fV'XWN$@S<HZ0QWn<0n4u="I4l/"1hPkaI>;R)!nY3#8dDdD(Wi-t8
%.jB\A![]3e6;]W4WL.SqR\I[GR=/P%Wng^m.MNUZY(T0Z1fZ'W&MQ%A.oqib1fZmh^6p/Coig\2</mM^QtRuA4k]:m.c<Z?Td,D*
%LOOmeQ'Cb9/Spj_0,Hf:d8[5MDEqm8&$hZ^'cPMZq51-1Vm,MuZ/CK9[[gPX<IVEQWA9u#<IST0<%T,!9`<nG,224KWkiS"]/#oh
%78\&-^+1[h:"aFX;,OaUncqKYSX:q-$n"Jd_P4!',u?"iX=KI.iqpJ=W`H3[AK(I?C&4d,^ocoT'X/?5Rneg7@)5bFXN.0;]Om27
%R&o(VF`>%((=;4eJpDCWOenKWf3c/'][UMG7KrcTbUC6R0dhutpG.HPo)VYL[td_GP,_.@g32Ot-NMlQoPWZ6pKJ]7SVoI;'S?Ks
%P3c!CF`Ec:A('Yb9/,r%E=TtZHa=B0\b&%/W4@%XgW-(-1XjFYj_.u^78Kc%aGS-0:8U[N-"+kIiP'"V]RiRM-%Cc)BUZ0<-o[].
%\_6m'PUJRHrUulSF,+n6^><68dq,pAe'Kbd/Ge*P/ZVX.-?T4K(;%feo#O<:NtliB92]do]"l!4N'dsoK$OP6Y+*#Y?5#O'H]&;n
%2X42g2WO3Dd$^??I1UhMQ)cnsBVWig0]eADpU8hb?b=&R;&,LsX5%ls-gR+$pUHD&!$Jk#r)i1fQj:L+N$'irZqdgG6b%6E39X<a
%Ar"5HBm_QN.H;m'%\pCPY9kM$AnqA9,jilu]G,rD^%k=Sqc??c3khr#=#GsC8uQYE'H]DX]B:??lJ]sn;'e6K<a?(<58"Fsr"e!f
%LEI_QnTI3;OXZI;I#+)Zd*EHqLO"'8\^l&jM#H#O.^G-69W6`F^iR*AOkb0GS*d9tH1qn:5a;0u\,Emnn].j@Z(N&$HOIip4<<>V
%G%Kil]daUpfdFAUYP@Y7,0*^KR!5fBCF(7RZqE:upBO\QFbqDoOL?8EfE6+^L8^R*fLY1MJLITaosY.+BRd_3XHT4t1ITV30/UO#
%R,8oPi?G&Uhl'Oto4UhD5<m-s5.rCHqY6daiiM<B9ZcA$R>g>]\"dGVVtchn5tJYJ/2FBRP%ZT7]:W!2UiO'"&BUU#Q`NCfm%drp
%2=W%]#H^b$LK"+=en])TAuVHTbB,M9(s9No-*SU$dZY3h_B9@iK%_D@,%E&1P2R)Z3FN5HF=m/q`[HjXGe29D;]);TCf!kJ0cJEo
%f?#9*LEZ&SCTj&U(NC"nSuI1O(E7rN]&(_$]idYSFD8&s*"`G?/UW:%%YD\P`N9].KCkJ#TFqLo?J#14KCj&0N$8a`(,=@#KG"OS
%4\h4j%K^mchbE)Q^#tca`'JnWX4uYWJ=!;@M1bG<Kc_NLEag'p_9[a=huSo,9fg"B;]I(#)@$9WIKRuiSE991,fY/7Z*H>[pQFdG
%lFI^^3l3"bmet9Tl.sJ4!S6:b>hep`[CSI/!cba:6A^:>-j;mHe:Sce7)+F=#*NDQJNtDKfO"o85fR\c^j-=k;Au&ZM1Kd;HB?Y"
%]-b[dAY-XN"%hC:66HNu&Wd*[!!n=&09]'9J,ig!(@V;0i&PUhPlOA,@eHaL(]iT3ffkt(E*-f2iZDFiD@/,tOTcle+$d_;@/PYG
%_k#!as'QqHTNG=oUU)"kGdukC[GZ0E6@&?iblf3Ip\fDPmJ"^G`k&_$.uCbXYu1mYjGC5Da>pdP!;S>3T)p,unT'6$S'f1+m3n!r
%#FKGfT^fbR=_YPE0+s8R*t0<jMfppYN7dhO34Z"Ph"ufHM\]6<`U[_9T"_PgShRCE\6.&efKC3iIHhlYXC;:>'Wk5?QdbK7(1+5"
%4PZS*o?33TnW>mhTg$=c%XEh4LQ@fKYtSl1`=[nGO?I`YftW5jO(Xu0>WE-<5+lmuObE''!j)(od\V-jCSu8'!7m[qgeg$LT:aL&
%RA7j4r<]!+52G6\oJ,qO]rZSs&*M$^#M.ZrjR`C$.PEWGdBZ(&(*M>37$q:[oP!4!2Jsm'H43m0cL#/O/,-dd;/^]m:?Qd%C:F"#
%SD/mL+Jl_j3rtC^Our2/Z"FESPPngb'.JpsM,1.CV]tJ&FI'1fU2A0=?XrpjmGd>QZeZ/NQhK0P.I>?2OOekjGE-QtIDP?!YT:qe
%@<\<1)h9Rq:E:f0m*6EkfU[OEBPm*2]P+oo],,W<qBAqG(S'?=!?H&m3PBL`Y`t.($$iJpAJ'59]#/ceNmTp;+muTHH7/PrGljWH
%9gD294@%kKiYa&fr8`$qqp#q-&E@q#A<n1K_X3"moQ"OHNb0#E%ndu"Od9d(]sMF8P]/_)#VpiQGG:p6nodu=k`ffAFoi$eVK4gB
%7,:#*cL%ED<TbWigPK!Hm_9?shrm(ji7q)7dq[j\./HB/SqI@ZLm`;*7c50ls/]MkoLe.e%Q^Z7N%o2t4#+9a6F`S]L"8.0dtp)o
%o7VhP$#FkE6H6M=!@;_InOhpu2/Xd1+^'k+?N%-6hmf4%\]#5k'176g5th-QS@InCG%+$H,U7:jLDMiWDC8Y`\K=\YSWKUh]l?-S
%OBNY+la2]q[huSqN(EY5gs-MEGiNs2d"p&Q*4q%f@EZ3P-S4%J4FB2N;n/B.=CpBBgGuo1<,apoe_@>>]l$uVRi4DCOjmq8=bcNk
%N,jBm;>^VFBiSRhd1kj0GbZic,Qt@t/[0ACKTd6:EhXJQ>L[[B)@T>9*bKgr@'!5!bN4jRMVPjoEsB6_GR#&<DchT6S=bct@F#td
%92gEUCkc(;@3"fI8c/fuVlR_W[5+e*C_D66Gf.O_qXOl]X;eg8jmIKu="eak!n50mCioDSaL4;&hB(D-B&ZQb?+WG&+hmMTM6JV8
%O]h5b60sqsrU;CnjkVm:OitFdk0-]"Vk0M9nS<if('cQ\IKUXt=C3a(^+6CH(ag$3Hd@,aE#u^qf&=4bEb`KN?q@c9iJTls0mj(/
%(YY:N5*58@g["?gSWB<sI`'?B`;&G:Qc:\rffX^jl7^1(oQ44WoCZKDH?+tc@:SL9SMoJ*d5L?;o'2ROdFZ61i-o5J'!gE"a%8Dt
%F4!23HAScK*]XiKK1#BmbFM<JY+*NNTlIaP(IL9:J&&'s'Y,`8*e#FB.0AfVJn!g2KKP]mi=sP]YXNX'I#iPD0GbfFD?c$\:9`d6
%T-:IEN+Pni`6LtrOXr93jIYtUEb70ZTj2[Og<P&L8FE!ONBRESF)'<aLuTg1KlIcpU::FX6V2LY4@adr<.UF+)5`p"j-6!`H+%?<
%oFZ*ud<'&l,(plKSu&?Zp:_fXZgA<LO5cn3:ZP[%!Jmjl>V4dCL9s8.&]J=rRrZM3\-1WQ+CSMs>H7+ioe8#Vm/^CFEUaXCR^F;I
%gc7`kV)U)r4^AX+@N61dM82.SZ+t+=S$4k)i9&-9'$"RE00`;Cs*7una3AR\j.<KnEV#AFNgjB*`GtMH>9#SOVo<ZIOJG-Z*^-j7
%o,q6[2pXu$jQ<GJ5]30&NJ;%R8<M[Y2AXEZiap/dA%hbjKAEkcl"sL.;5Zha\[,qG[Kggp35W9?a.6YDgP^:AE,gPNB*r3P(`-<I
%MCRUFKA,4S:uYng^l`7R@9d3cjcV%14Micn`gtrN77J+1=HJstN!mkl-A?FG2l!*$N_ASV&[WJ]jDir`V`=)N9,olT`r`gIPu8_`
%^V'eko2f*<2\/H:jJJWW5].WO$fpHl8:fPYD\gF=o4rp4/.*hfRq0P3=\+j4EO-(N0Q%Y-$fbj(:AXWP'7Yo!/l_>]V?k`F%K`\8
%-p(<6N)fa_g.CX=e]o0nYd%pjEqcSnNj*7SQ<:O4:9<._(03#kg&2IW=tQ=p7EV+IC&sY,_N7e[GPGj2<]de_OO5AR]\9n@6=mf5
%I/Odj&()=E(i[59!+>:g2)@UE[:fS!4AT(([<$,i[t@_nY$_AOX`gBr_fZkM&!gniDW@CPfCh=<iRO[oe+?iOYEll4S,qfcg40\8
%m4+D?rsa@CgA0U__T&Y<bIN[<kQ:)o<C8%ja*<g(Cl#19\fVong1Y"3Y'Mup$^qo8[JA&[X#@kP<L_mu=LED%nGQ"iZ?W?tNK!*1
%H-)Otkr&EU0!nfb9A]iA<XYl]s00mcB*s&(XnK]'<h&&9X$'mbe`J4sXYq\f7'"<(YFmA/<f?F*&l:Xan+60K:JL/37KKe-1s;rr
%3=IH-A#'7P)Njf_9$jf]:tWW96%bIH;)EtQBF&ai!OW&)7T7PI1pskdq/b1O7H[B/_Pu,19#gTaE5'F$/+Hh'?LYJH7lZd,3FO@&
%K,tQB[q$pRK@V03o*p'P"Dju4.m_':+FYA>?(!RPn>^!plZLI]96]:-/[>KggL.tl=p^W2p(B3llh!nN9$lK"N!AbAoe)+T5"*nc
%N]^D#<d1]P,J,EE!:1M%\#j;f_2MhjLQG.i=P(],g;N:%=COa23&.1'=Br5]%k7(+YcFqfJP"'6(/;!;#K!F):@BN:_MggtcK=;+
%5I."KB1cYY1C@\PbINON5_IeO3ua&k#(oi-]n><ZbUA]59b]!;%%oW3m2cF>7\NfHN5IlJ;(/C^hHX\_8bH)9`IES.Xg-7]1CDbE
%[Y?N3d"-(h7ub_@eFtMC@M3;&/lA,o0r"`<'Ao0S^b!sTQr,6nbUC>p"lPmP`Ra=Vr>D,m;&NDH'[*_,L9mCA36NB;G%MGX;+DKR
%18@rmoaIL6o'`pOip5\&V0DEpN>dK\<PpgnIXXQXgE=P#)T@TDmK!l:<5oP2l@b]4Pt1LOf\'+>2Kfe1U*m^q/aoo\5p^gk7(%_u
%ORsrKm!Td@T=!!S.&BL/oVh\AM'$lW:67MF@7UF*=q/K5@V91HnofbPF<=L^#Z?1Vo9;0HUc<#4$u]i0;o(bn89)b`PCXFI/-nP(
%!d_CO7>_eT.%CE,O[B$HckT<<6LEXQMarjQKu1UH/1<"!aW]p*#e%.Oqs1([F#uZ9;X?mege+D6Z/_Dts+MY^-dsJAk6*k8lGL8a
%U.DOh^_o<1irr2d"mb3`=1p\(O,(!rDrfk2*lc@_555b(6J:tOfC>4BlATWlC$DH=14q.%Kdu+-Os2J!L)S5/91017WiP;*l7H'O
%1X/^&cdqKT+2;pZ@Z2u^G<0uGR+OU^IM*;]_>EMn2f[fIQj7ahS.8MGWV;j%),<Jg':,:$Yfdo:4Ct;CGq*$+0cc4r%_ilk3[g_/
%>qC(nSCUp5M!;/7\'L;WFBI,J1TRt/Sl\TZ0ce%YH(RAWG%C*d.LD!G?p9#Gc3)V!YOK#?*kqg.nV`!05(;A;nf5Cc$dcqtUD`-N
%9nCT)rGD=5-B%3Z264]fL+b-l4FAaD_8h>FYP(mD4N>%cQ"DW78"9Er_J.tqMZr3Lj5Vf^dMC@LWX2-C#KB]Q?p(!G+#)$1$u<($
%1=ON!lYi-Aou=$6nN%5SgLsAO9V7SnL*f4t'tT'Y6:Z`!RB$a76\8%up)q#T:F)dT6]i13\5FW"Z(J$X1#Q?+f+Va\N%5LkW`8L6
%[[`1p=]p1P\U/4>5mK#g^7+S!gHsMa'-kKUVuGIZ\.Q+hh?gN0RQS]-:JDjl*G$\5"$0g?LnO.Lq"<BI.Wg7S/!nlPdDD=l]]Q2J
%(RmgVT&`Q9L22cI'UaL%HA5>Er@HUp-%hPJ[@nNf*c^u/AXXV+ppG3?`baOFYmFfpQEY`p;p?2poSs3X(03NJJD.1kc_Y(9lg+/J
%qb#+,kUpsDY^*kUMF#IO0"![U,TE0=7/2&qOLBmH%'r!G7f).A^:2edCo,#MZ^CcWE0ALuDgYJ!$aBuC8M;SFakLC'=j*o4W1R$-
%3^[//?S]TA:<^]nr5;]:cYd9e"DMjsV*l;&BiG+.QoUiN=;T04)pB'HntOFVVdl1Q)<JVj*dL/\_@dHk/g,9Wc9G':,hSKVOJ6lO
%SrlZc@'-SEd!kTu/J.^>X(7WncEsa4#lSjqXB7oSRTBOei2/#,fO97H@03[rlm]WAO:bN#ed46WGMU6$)A0kYQekRo<H";R]d#F@
%8=T5$a"TEUmUmn:])cWhpDb"Tlub?8KFUP"i-M2i=QK1ELBDK@#;^[%aOZ%Jq-P9)9,qp?,n=&Q&q#*$$8a#%!,Lh<U5TBg7sECX
%FIp?_7Y7[YSnTtN2EN/Qk*OB?'\;RYdPO'2hDc218r<+2RK/Z!H=T_i=O8B)3-Z)iY`($qJ`RmJkMa<Mq(YGkGRcp09D_K)XM[p2
%5sAm[V0#S'6*,-aHX@]+Z3EN]hj>)=8d#l_\T2EmXY)QIKBdC!$,@,T<-8K[K1@3'Rj`C?8#h=7-4%ZC%UTmaiV%gHDh=@3"H56)
%F?*%K7(H3mN7'&/R4gI3'80"A4=5Y3ZTa-D4><O)*,s7O?=;2.N[H^=%b"&SD;oeiV+hreWO.LE,/K^-`_KYM`t0b:ig>^5:#pRu
%dR9[4TcP1_&=eSE@$EHe#aY<.?<4_L.0+]1?b3U5"t>1s_!:QJVKZ@X7atmHecbY?E<#"T7lYC=2?DIR7OW,*=<rK\2F6.`*AcCP
%iS^Aj2Bgh.+5?"S"D/*YJi5o:\0-kk6*,F1.RRR]U2I9B-3V$"0J@HTodY.8mMCti-4W";'/)%B'?>0Y23HcE8/'%U.r"#<7O:di
%d0S%90lBUP36##k'?=&TC#YL;,u#AcX/(S>&0bY,Ll<jj,[*g032A6A'8O@QD;l+C=0D"<pnOOhZW#E0@L&FK]BCLT"nt3t0N[!c
%3(5p]`!mOcC4]%'l2.nAn(`%_720*d2D6TBJR^K(O-lkGrk)Ye[Y(VG9RlK#$GSE?,Uu^DNL3XbBq@\.'3_68aHtbi\qBaG9-3OI
%pF<l;n<TiV"R-;>STVR6MGtaPiLpt2_.8k]c^-?rO2e*n$V/8;Jm!OLiQ&oes8G7Qs*stFs8K5%ebJYnJ,A9ps&T4#j7=?4;%Tfq
%A?WIT;YUXNSpFGSKuRGl@K-'!J&!`*FMeS<_6`Fl7P2(3/->Y3'/cduQQd(F7@!%s8&7<;5gD^P6<@GW3h'\jPGfED`$p-"`m$F5
%(mbVB4i40#-*G3&\S)75,Pd,sas^?)DDt/[$92AWldM?G8GtLIgV<^!J,8@.i?*RJo0<50J,^&ZoUgU1GJO4?"p8<%n[Ca^mJm+1
%s7DBPrr;c`2ui='rS=Yas7)0Mks,+;5N(81rUJe)b5WO_q:GWR!Ri-?pOD2;W1Q3q8Jc+`,5-#=.TAJ/E5?Dpmq#u:!ni8.7iC(E
%I%3[8U%XUJ1T4D/./r]@3Y\@e,F6>*auIA!+27n0O7c/V.lS!Cl\GCq\tRnu^n?rIK%>$<6RJuc7TQ::7:`!4'qQBC%N%SXnSb/O
%`;9"_*:-r4[hO4.BQ;HG*sG6gg=#`#'9N:7(IH)4=AQ[6#4Z^F"`rp2:n>]f%'i"D/2"V":sPB@UOnY89nFo*R7NLR><1r[n3)p1
%\nRL1(ts5(L-cZ=!=!AlB?38rkc[47K7<ua`NsdTs1<l%;$tTK13cLTamfF")6&:=i2)QML%P2]hS,+A5g>/[Sn2p;+QNSf8*d+d
%fXkUk&D#R$2Q$'2$b\TN6=p5XBHlqRO94X**Dk+084\t!4l$1W[7#t6?H&L5"a8!SA\706jA?ZFb48G$A?E>r'`#78FV!8=N"(O;
%T^ZGXEB;fk?*T6>>@Lk:`1BCnSbu"ZG"Hb/>aJtp5=5!iUUl\s4&.<a4,Q/W+B1I5n-fU-R/71ortLJoGD:R/HpV^b5jp>+"tS4\
%aCQ`"*gc_F`No4ppd-S;[@IHlE8UUr)%T3GVHenA,F!q6'40(H`MiMYdFQ-7PhLg2SZSJL)RO>Em_?PG!`/EOB`4_l_nX2RXUE[,
%(KAX:R:Lgp8N1H&FscMP6aJucr%k=4ri=]N"_,YarR,e1T\+dB=GK+1c,bK=@IGu;'7DF.;`oXK7>1cuKGiX[^k8`7[,XZC9F\l$
%cX?d@-p4s0^qPh^A42_:\=V[;5b*#>hZ#!K/<GcrKF<:[/&qt%d+P3uqm3$u3-V)_X$`=[EsLSkhA71f[%f3V1I![O:X^?c(YNiT
%>7@$%[<4';L+W_g%c3QUMt$>;KCe%:b]umIqu=Tlkl\mGkXM?[Kc4/,D)Cb1Ujtt?/G,@MmXdU*abccTecW3YgKcr`FsHf%>@X#T
%<2_4P"r:/23Se)6M.#`.StiOF[*bb?.Yb!@/.VA)^K"`GqMRZ[i]<tsVD/up,"5<4c[+Z,4YC84$IKTGBi$K[Iu!QuCEX&=*XHRU
%XY]k,9Bm:FjYgZhV*79[0t-GjjSZ-TeK:dcd3niuF:Qc)`bTu@ec0i:=8DUQ^ET9-91q?]Ehl-$TcMn$D4taW1p5>4(2=Ebe>2_?
%G7;'`+jmho`V())>sgJE%M@ZN=AV@n5#i2nSD-9QRd;u:ZZ\!)0V#NkZdq=aRSDOq=f\ibERqSC)@i$>!oLlR^j0n:qX0Pad,e.V
%dK6M$o20Y]2I^/\A^[W(J,n4#(gS0+nA]\UpU^1A"Lc9IFK\%WCWX#>qG,27Y#qc"4r!,7RqOPm<9_n:7C$t(n]\q$T?j-DWHTVT
%cae0KD-5Cp]f:d?['+H-e)5%U%sLYdmRH!sf`E*S"U_FN*FT=,KH%HhSiJMoGd1He@67h<i]W3SX7t",?+Qq@BXL>b=E#`K?0E;K
%54"0T:E<B8OhhM[<0]*'$_4n%NR55&8DERQ=;^Oa6=BMY6<q:t/B.&6.L&GJ(V^7<EGE[K%=,[s/Dg43q(=^1W!Ct;ZmmL8$qMT8
%qU:i2[;5M$k@F3lBDfN_)-:[75RjaHYhTrV5-cmfcohWYdq>SOFBk2QST(IcM=NtZqH[[L;:@t(.kp!lD!NOCWGCXN$giL"]1$Ma
%TTaHU.=b]/b^7AK$pS<<gQ7Hi_@0G&&Gs!T<,fi"rI?t`e;\u461aQQbZAd-&ttf5Pj1PV@<B-mr"@GKl68I^hETjc9e=dQ_:5g:
%#8*i/(ROdWc#lmb]I86_&m@KR@T*^FJ,h0Cpet.F#=@W7bok-c%R+jQLrkYb\"jMUJ`bWd?i`CeW6*QEpQ&*+C!-?<6QnS\F>\,U
%</EColf)%Xo^L8=G001+fP+CGfP"$Sj:I\o9tN2]QH+9jP7C^b`E&-)Sr&X>W`stUjOoD#cV&)kKcI*]e$jihG"F@j[!O*%AU'u9
%MY^(,8c4UKUN%N.7tPOreT0S!grjKZD"sQnF]'raU/Z%0p%FT6Yb0'Ij[9^C?;]sD]0&t2BZ$RW=62A'#?."_O7]X^#t*tPq;mg"
%UFdM7"[,J5]IIH"9#JMDE.Hf1ic5j`@gedGY5';:(L0uhU@@cA6pn^Q:$pP>FJ*J!Mp[5RJ^QENd,3Y]KhFbVW0aB4[Q<WS^0fk!
%i[4Y-LDT\:9_*n'nVs@f`F`UXd1$LXQsCH-\*CsD@qP?&0@9$Mgb?H&NS5Q*MZ;Q=0A[(/Wm-Ien\a+1rDb4[qF6dP1SjQ@/Ah3D
%6m43qT$M%@6Ag]Gb[W:j3sU[b[AfAG].bEbN,g-c8q%f,qMa,Ir/2*8=nj=:+/u;%%<dlilZ^Pfi_r0OUu).Q5XY]234)MNpR)lp
%Zo)@d0q3KSU0"@W\\Z*\=2aAs])1/GlZ<()O`c&&>(I9I[KG.k36hF8QTu-d'@&ZC9J7;_TRokj;\7W-6k^JR$30Sl"U^K%k6hIh
%m)8LYSD1,?=`iZNMg3jLH/Zn5cHr8Y0*r;@)V4qL:=T)d:k%`%U+=^eJ>au&C&T(b-+\MbIJEm3lM-nK.-i4,Bp'+i?$-Sie"dbR
%f`Kh0m*3d)T$&qor#<GOnh6]]Zre:NC(,+E4?r:FM3&Q,N,oif\C8'Kp/cBO6Qc2=Mcj4J50i<F`:)<+<5_1paR_a0gsj_X0\%=X
%caUul%?7/,H/&R7Es/Iekuf$A=*42CBD1MBBZFCON?K&GlT[R-Wn:e\nR&<B;/>UN]b>5Tc@]9eP7BWAKNQZebJ&-r)^ShDO^nAm
%_n`WJG$e-F"$c4U)qH[9j&VC2RhFpsSa"C1?VsMa&e5q^oo<Z%.Uu.=?^2PkKilstRiVL:RqJ\?QM4^2*OMe9)uM>XC(`i$fN91d
%XfOQ/]Q1[:Hq]aH:k:fEJ]rSd]8kdUJ0t[[,$jtfq1>b@FK!IZN8fo@dX(JhW$cjTp=?--rG,It?FsotnKTF[3Q#gi`Y8ZQD"\M[
%8&#F:P^7sRJC"@u3pb2Y0'lBLG0t5Ba;"%t`2q\&FkSS)*+;h.ds5G+L1cMnWO'c%\3_^H#rRpC"d^ZU\sa1qA;hjqI(8Ko>1!jJ
%^=N2_kgj2nGUq-MnE[4XF_mIDUB%JS1q=?rJlp4bo);kV*@8MJO12DsQ%&#i:%u!T57Qmb4DiD[029VVV2d-"\P?$jpths(GDdE9
%8s,pH0]E]bc(UmB>lr-cc`?bDHa'A@Yt?tQek+bldJki_)T>+?_`XqmA_,6s7G%VL<;'pIj!mr-UEVL/fFUasEdnnT885$C#.>DR
%/qf(<7\Ek6S(<R-)fMW-\s;lE;1YWEhmD[]:I\k%AYCPsR?^?YrUFSus5I`[RZnR$7B+1*Qu;I7CJg$gA-eS/ikDD]'htr/:co@Z
%.<)79DCK-Y#S#na@aLSUeaTYDA;;,.r,5_T)niM!3Y5H(ENj"K^"Y4P\Jonu>2A_b`[sPOgT$*#!ZD'IM4.\<-]9uSpM</g&3qgB
%=PrM?9C'"s]nKY@aQ40U(oA-S4`>XlRK@(=^'MCNSFWr#H5#Xf<<(Zt"8cM?GuU^Hn2at[0mu;N&Hs&g@/jNjWc^$uBX,FH:o#YB
%/4$d:)OZYqXi_,Dh(O')<6GD>)&sV5HFbBs.kll-4SpjR5`9)F'l?9*>5!%8&U1o#^%CJPp.Ugb5.6#I%"3[hI6s9M<(2N`IVgAa
%=ZTL2,b?l3EBBnVeYC+FVRN@Y#n1\ihYrqWB$d<a5E4o74DQmc+S(2>9QrLS+CJ9JIc,h8FNRf(*(>V!%89c2>=WO&oj7R/C&1!0
%@9&\coZ8]`6;V=VV?Pg(R5L3<70"0"]uPROMNtSe]'m]_(9DH5-pEqCL9KjJg6+-03"/OQl<o`lTf#fo(P<L,FE0QPfC_G6QA=7Z
%$2ddnV)NI\,F;O[D'=)!Y4>o\;h;=uT8)tkT!Wg;dJYh)*uaJVEU8]<P6RY6*m+Ie_thhbE.cN%3Eo%sL0\+VU$ISY;%RtO;oOUa
%7As4HHWKo[Kpp,H:tIKfBYCPHRSc0RRg^P<g2[EA]Ih6LN:JISFQ$2%7@?=..PbWI4HUoqCheC\Kr,SeI[-.PU=`R@A&k61:-/Nn
%BrA/G[-ra7^;*h;>JG:eSb:I)rl*@;/gPMLLZWIeH*+$rUOF#b*(B8EMEJ>H0IU4WHIlSXD=su&r;,!'Ed.h,Mp#A0g>u5^QnP1W
%_<2amDt"^]Q%dejQ]>5SR?5eHN\)YgZ_Sp3%XHA<dN6rY:cd85d]=H[-iE,BmcND['J'*mX!.].A]^&9cWYacK;o^q+JB+Sbh<0&
%28EB]eL()k(cU[Wn7bSri`YRq062u;r^%Nspmr$$\b->mY<6@H)NH;63S#)W5mB-F9H2V:W7HWopE:F*Yha1';W2%Q'dr33+A2Yd
%nBth`:`V0FSB[nJGtXQR*4N=q'+1:\F%`\D]kgsre[c_(!OIW5^_8@qXGA`f(tfAE"O?3P2B,Ri'R3T>cjg^(Oll/Fn<u<A!g=:L
%QQPhmQj+u3T*FsAT!j2J0D^@b^!0nDeK)L(a"822?#PB@ch,>;!XrtDq"kW<6jaO^NU=1$cD,)bc=$LJie/,ElaDP^*Eqf?Zf(s*
%OcS?>3g`V&=N!m@cq@Y:bqtqBMNS2UJWci6F&"4+0k,gun&1Gp!i$)R#[h4=qp7'p9H)3s\&,*2Y"E,Q.+,'3$U-a^=21::EBer#
%)q)KG`b=t#];>F;0hh5,R/1s`:DMP3#!8G/Kis_#fQP!JUU3'&9.^&e=PH_E"cqB31aU7G=[o>"/j71@p5)MV_:3-ZB$-$WrqA>\
%'#<ZneBnW3fsU`\9bbI]!CE[mA``D^-m#k#Tl4;#L=]NU:7joRS`njcCntdhTmit-@"!0cZ3Ouk=1is^nu[+u9$m$:qA7K26?=&d
%d.J[pXYq&?Q^</egh"nAlBb2u%8Ih<[nCal39-SN^Ccs2^CtBUNA>GRL<_(N;`;FiH_?Q,ZN>=A@V`A`(jo6k[Z:V#^ru#+o%\ob
%3:(']9)^I4Pd:A3i$=gi,KmIAa&j^o9D.5fW/KkEQmu%4%K&`dC#Qa;f4eIYo/pBlOJo-c$i:&@X7p'$MrtQ4@A,1dG^76&okY8>
%;pMj)A>RFD!D?j.(4*'?,0X/?Hlu$`i])mQg!VO)5?LY$NOfEGQXDXEdCN^H8`UmGPBn.GMTUMU<`^ZWR`sOBV,dXA&CA3[kA?u1
%3d"RQZ!Z[2,J`,a!5"]D)qan#N$%gT4;ddkO7JBV7?]W`iLgg](>rDEH@Qe]Eo?n7+\i]G+8^Igs6AV_9dF]g0LJdG,dTAI5%$Gt
%o/KFIX[UcIl!:6qfTd6m'(e/*E@;8SI?9(3bUIc$0$oH)(Eu,Dil7Y+)2SE6O/i`Dd2TY1RTcAp0<%299=ZER-"=(n6a\/]ee17#
%N0&B^m.PA_W&Y+,/3s&bMnU[d`aVWX.=3]mU0`."*2kbRQ$'+[B7ojXEEIW2e%aTo![W;bmq<KqL0'`BRP3KpA8T]j`:>kLAFBg&
%&JO"`>/"iapYb4/Mo9f4;AkdjEbYPJg5%5qW+g4-Mm/u+$BdS<0[sDmk_"`m87R,d.EDU$DX6H)*CU$icboTq.Lhb@Z/.Q&3Lts*
%Wd/f:b0$NDT^.e\)S\+kAtU-ad"*(U_W/6PGTde/`\#lRNJ4IpCLN]_o)*3,s(Z0l[KQ9C6[)hRI)pY*eYb=%b/j#Q5Ej047-iZK
%ht._o/LGUM"cDt\T\iE7]qL(>3pFb=iaC^:F5QCQY1b%li@#)cs'g,)Af0)'rQ8%g/j)A5M]1l&Zq5KF']2oFq;7JR#m:iR2t=Yb
%,$?.]Pp?:3p:dWKdc@q+S\Y/YH4_8-QsoF+pk`b-&<3t2>(UE)L=,F'OCMA:aKpud^NZ8j,4[AZFgJ.32CS_sJ4)-gITnFeZ(*dN
%.8-@Z#u`W`$c\Zq+U];T9=E2(gbQk1.O2rh4G#6+WhLt&@aa)[Yhj]L"Z<O%BV<4;eTMh+Q>I-Zhgo9"]^Pp\LmhAeN2a+u<T4ik
%V[+](cX\,V@4@7RV5Uh`X!L:l$=S_WfqOn\8<cfiVNRSH?(.X?&`_++i!V"_F7U5]1(q\1`"1mrnA)C1FFs3%Qe.pUGl^e9be>'o
%7@`$L^(aoaC"`Qk?6_5:SZCajW9_M5d68T%)c'^*',,*?Si?$iU8uZC:.ugVC_k.`in5Y*rugXI/q^M`o!StPAnAj,Ot!>1S.D*4
%*8k(?3]R2oMSg*6W3?A!E;AhM70l%%oM::7_!B7&"#C4COrlE\$H7QU9t!Yq+TK8&#?dL9&Wm0J>G#&V?;7g!WI2q_X:TNk@8m6T
%jbojG\]$b[gCS66$G)1d#5M<(>T=4<X[A6dL6\>aJRqfF,_9m:Ge/^!^B]T_.\:Kd75e_smFOq'dM/73qchbg.h3Vdqp'^$9[JF1
%du(cr4u7bO&P9H&1b'IVZHWXg7o,uRVRf6MA5^dmiF+uI5"J@';W<Q229R#!.@^8;nGWUA"SSXkY).O-,kn'(8pLR2?'3%1=BY\V
%%d"h35D*_SjQZQtdCA$o.LCd&%X]$'.05M8;IBPCJW/*2WGo;H8LkflLl>q]6t%2MTFGsl8K/Fp!7KI-:"2$:4,XH2jtq&Yckokn
%F5/33XVkZEft92t8b7\&a2;3`FnE6oR[Y[!)gL&`;ZO+"pI>sq.bGbE%iRE6UW#9VglDrLC'YeA8/s4I#&f:RHpNmuI4X_&31E\K
%p"!!^-@hCkI3$8@Nsa9H$Tc*F5U-ZNp@tB:>8,Z:M8gVpq(Di%[7'P,_$#:ZK,+2Oc\eS^iN0VUL>Kh&<#?l*(rSjd,E@Ec"e&(#
%U#Oah.D:OEJ`o1207em)*Q<ie&.9ZO`+jqK/,DQNc#a-][;!S,'clDJ%MA_S>hUm^:e<gL(`g7TKGe1<)CPYBoNOBqem$0@dCI8g
%!2S,O3`0q(lFi=B3L+=uF5'*J//L#r\]K==19ek+dan@G%CX+m4fb%J7-XjV^`c1.TP;i+1gGTa1i,"(MG#+.B$:_F!6(%OkY*Ut
%[n1K(l+rp!rHqGn`Rf^cX9D^RbZCHaQg$kbB^QY3L4p4&%,0K1"\?XZ'EPKH4cHS5bs$;!Tm/Do[uO4HA4f-c[P:h(":,EG)Oi-2
%2L$O.o-,k>J9d]d(s1Ro57Qh)_*Dkohm-497Y@cQRQ,sb!5dn9P>K>r"gP95pS-?N+h<B\Xnn`%PP)"$8;(fj;2sU=d5(5WY*^jE
%Li7$^OdnE*<u#<uO9m\%LbD3:MQ]&P*?I*k%0ard&gn'fYo?-N`tIdL9CG[bF>U).%T/C6b+YgtIi]?,/J`d:pPmjiBPik?g'ds?
%=#'9VaaY1)6,I;PoWKK<nJaV@p$,Zh,,cS/*n-s>L#(CA@Y(222)kTW.m"5D(H5on7-s`BOi?lWihesJMrmmP"W8>%]kCj"!p$`=
%*X)'Y>HE-#]PXoQi&1>-6R^@.=VDF`S;"H@BoA(d3#^4La!X0DVC+e(-6>e;J-!AdbRdnp&(Ue>Y.,Eq%4[YtA3K`aQ^o0HS'sTu
%=dt,^UeUNh`W4*mDn8uRr+Rnm+j*YQiG>7q0"N3/Dpaauh8m?G0MBD,((;?\b1&SE'AQ7Ul)[q(JQtu$PiWnZQ_JAfmtr*4oUonc
%8FJk(:kg3(!s3Cpo`36*kY#tRWjeP..Y^b'8u)0I*u1kOahA<USD9HgeDIKU",mru0j+90q+m.*_U[Xo`g8OC_Do>IguIVTJ`<[7
%M-JN;7<WXh@)=e.;+#qRNEQM>7L=+VH;s70!`3\X`9tWE$YoiqGgKf+Jrp_PFiaB:(75fG\skInG6[SFiE8I()l(i37c:>!`^-p8
%^e)J6/p4>qa(h:/JfG6aN@,0AU_U1Je6>s.'*5Wh9K#5B8a&N4UEp9])clUC8rQb*;..@)(9L;Jip_,N`:.i1ac9u0SIoJZ#'s?]
%?n87IU9Y9VbS8."Rh>b\,D\Gerh(Y]&o&JGh%fpRC?ZB+q3KllW"5^0')'BB500HgmI?jNo``rI5YmDtTe@q<PmHW-G\P>Y71$p\
%Z^@g]K,b?cNMilYJ?'AA+B/?d@+l/k;#$FIp*&1ak#9)!^g1fj)J$O!J:%S9(mc0h.V.36&@K<]P;5P-/FX@*Zo(MNZRsM9>Dl^A
%3g7BDX<]91T#E9a9UHQg_c0>NeR:PL2Q'K.GTb%Y?_.i/-k(eTpH2.!VnXT'#2+&tm$@/aENgW$PdWgr=8?maAJmm.#@i'qG8o&i
%#1\G'XNcKE5]2kgJ[&KDU+qgbZ>A;E1I*87'n_#b)#>"%LSnXu^-_C$r=jK<koFfUbiW%B+sn2h:`2*#CiTt42Hf>UA7,ga='>7U
%cRQUe7t+DRG.92ePeJAK3>4^[+H&AeE'*GE4=Q/YN8;#8a<#Z,7Z#t6Y6G>Q^&/eH@^6:Wf[6)C3kU0AUi)PS=o^Z7;!;8B<M)F#
%(p-@`0H_&.8HP`m4rZPq7uBdnZ96XgSqsp.c[ho5.6/:t>0jV!@dGT.<sYBG>1R;ZX=;cCjGO#55Ybn2Td-j]*dg7a-Z8j&iE1\5
%af69+j8p/@!3`2U+fj1U!7.s&^W%6^p,APa$31V\BS$7[,>;n.XQf.d88fM@#0^.^S&Wkr9j/ftOQXkbrpsNceY9I+GR#Gr9S$Bm
%N1g&mVu13!e-1[@hq57d9=*2/Wn+Qn^h@8q^fUdrTM=i9A:^c`/GiU@8A+`e631YI;OeNTauF4VBFOhW30lOgXY'hj$mYg.MNF!6
%m(b13);&Y0kSf[b/HLCGl;0)G'pO65P5rCmdl;QXE4ORfHKttuW2oP:"`-_u1GGVhmTHW-0aHe>X=INbim4C$CKVgNL&Rdi*DUb&
%!:s4;nO$u7<H%u=Y+!q8l!dd:,k_fdJq]VWmt.W9OW%dU_2&$TB,G9Xbs?.*clsH!8[T7gd5;C\E;\OA8fi&*LTU:UE0\\T!qFni
%7_P!?%S#O+Pp8U8'3u=Z3#=U^Z=Sgun:!6n[gko;<LX1^CgdVI?U/2$;[rD-%^'6Ye3a*>=s+FZR3U#1-]4WQZNJ*\14Ka%C=NeU
%\3oD^iQHQ=bXi#aNBpr^Hs!ZWa>7AO_Np#+%/FZ=]PVV4<`-25j&4Nt'3K^F/S4&^J]roVd=-BSOpAo&2=/[J*CjJCq.iA2g;+!;
%:LkG+"T):dP(BPq(tDh\,D!DR'?I-sIgt@7mtWb#8IiW_^1WRO2V`i,60BZZ`#>caK@m(%oNRNS%iH/\S-bA06Zaa61AO'$PLo5%
%^j"LG_?dsr?ACqQS1ts9.oHN"S)_E`<7&M`En77WD+uOCI*35uMu]8)L%q/:TrlLH_t1"C+2_!?),<R52TM@5nV4O!6f0qdr6BLV
%@s[HC,YWTV%"M6NL?h^QdV?hD!/;a<&/F_5Rl)<"\:jb!S<'[8$=q)Y8QLI[?T]m/D$aBJ46;S3'BLF6)==C@md2oI32CMJ+F+VP
%8H;Gi6:Cmk78G1/Kffbcf8RcfdE4?Qj_Jl!"#9p)K)F;SJ4WKW2"_&l-s)-i[_Qtq()dB&)3>pg,<J7?X/7/S*n4Ca,)c4%4suT+
%!`f2tW9u@.*^JgrCEDief!'P-@5A"a)fq&/(Q^MF9F_OA2fp#]AZBfRGfu4sZ$FcN/W^kMXYuPW'qhL$-^Z%!Nj5L0!f)DSChC`-
%"m^JnPR2_&r,g5T%*18qM"fA>=H+[4,sKMnmkH6<A(!YO(^LA:<P3Z0p7\RTRWh7HHL!gAWkmdmK&C8[>M_X6C7@$;$"ij$D`7Y-
%lKhB^9\DPUC/giqO^j7A/V#-Oi?7DK9l[>`C;orYVBm?27\Yk#he[oO<&.s1;5OoeWCc>R>"HK7l,C;l8olKKF9tQ0+Tp\X]mE(n
%5Y[[E.pH$F$p6#<bp173d:it[(Q0mI8Hb<2=0EgWA1&?P59:6tXeV!N$h]<bYQDn:7g4!;pSa1!%q\0`:7@]mO[*!j*-Da.hATsR
%g8=q9XJ/!CX-hI+E#(b<#DIXpDk8OP"&TWJI\R?":ru;7Wc06t79'f2/+CN<&-l7Ykb'/`6,DdfHXZCQOO]m.5^a>7;4:>G$0?0s
%XO?6k_B<AuY<%Qc)j8'o!f?]e]*ogIK2K>PZnWop:hgieNs_&)A3hDIP#])r5cKJ3JP"u2*ZK8DOJ/,.U#0Fk3BE]/!8cp:,MQal
%A^TM!-m<K"/P/L10[;as0]Do2;1i]I\^Nr8rV`%QYQ<a@m4)RI62nF$--K0"K.Q/U#"[AV\@P9Gnk/usH_]4Lq+`du`CNiK:9"&&
%%=f)\qIsJQYo)C<IlaO;%j&dP!OE-om\9ip-.o:"8`7Ep`-a/H&'tR5n(=:Sc3b-;Oo0_N!\BWF_m>NU-L#*)`HdepLsRbClhH>k
%D=9BM83S_RbXP"JAF,e!d:7rej'g*g6<Zn3\WVoE2Ipg*!>=YL1Br0n0?liBi`R^)a./K)C*Bk;fS=5bR#fj;C(iuQg?or>lA_\N
%&OQri$JMA&9+sLL-Qq,>5s3(WS_>74NCt*`QD*RgJ4kU%RBqZOQbBK:a@rFDgs@fE^=AZ[1m@KH8STCIcG4ANE-;6j+_u/e1f:[]
%IDKI]Qu7c66G6$72,,(]-%%A-im6\RQIHc:Xn\[fV^B7Spon->f>LR(mlH4u*0sepiW-J+KqKUT9I;kBf3="S5uaOC'2hMu7mOFo
%=A5'/0,>]s;/<SD'F\\8="*=@.eu\'GfGerFl!444IGl3J`a3;"a7&66"`T,K7cE>6Wg;N297ZUU^1P<SC^r`,:q`sash"3:qTLh
%Wtt"Ri5ddOEDe;\b)??'?@NAQ.VWkTb$n"H]VlK=GpCP.eJt8^fV6ohVBIo.9<:2_9k:3gl(Hlo(>3nZ%5Dh^">AKb)Br-hR)PDZ
%I!9tK!je!5k!(.=J>MkWh9&QPE=O6NCm4a$(cU?F961W%"kd$@D\1eOQ^`^#Wi+jq?C;.6ZFNh'P"^M(W*.*H[gHAIE62']$Ee#\
%Y!NmT<fHK(?l;qbh!re[ggiZuG-=/e^qo&h7[h%N^iFEOU:1V$'#Um`WTnB?pb>o02*b%6@0Rs-i0*P4f_dN<K\]l,T.UR!RKomj
%!f5W*C8AGC9bS)=fukn]39nTSg55K72ppbC;)!Or?g^gH0kYGuAf/+se[oC3!?/Dp-bRrLT-iOAl^<ckYK.D,\^C+p(>HRn$pp"k
%WkBk8nQGA`_WRjJK!Mi_"D$Eq3uZRP,QD`j$g*\)'[K@i2Y]B1(kjMk)&ZfjeV)^s&lhQ/iX2K9@AEnt*Xj<J"$a6Yodei`VP"Xm
%as6SoCF3qX\-)l-ZH5r<"Hi5<5r=<^(m,1`Y:Chm@@@TQN\R)-Q+^R_^`NKTNOY%*C-?o?<D.#>lIo3<KMIs>M[5CL:g:/c\$NC^
%/=Is-1'bTH%n?6C]+)R]XWZ]$8)1_Y>1_(g%c+hQQF87iXph!:T+q4$!C.gLg9;n-i8:N]bF++$p(Ds,`N,DC'*<(_Qj-GRV5fuA
%(jr32:c4n%"e%>P;/meLP_LT<NddmVP2X86$E/f(#F1/*(1>C#Q<L7^:I8g?K&%#Tni#h0N9LPQ.CBQ[#WV=TH^MtL63[e0UHuT$
%3J.$FEj\u<[Mr.K7QQ]hkH(7e.U=M)_"\sMkZ@@pNA`J\\3/JrS/GA3H4=E,oA5qu_*U8>l,3X1J>^;lGW[krg,B_?3u!Uke\V"m
%GUH35;""n-KfZH0CjB3H2E$tWIB\Qi36,@48.7CLn.Gm)V9O+>6<-6@S?1$^'<To)==cp(!a.0#.(LDL>N67pMX,.hd"jJ5'"KTV
%M09:)'.BRW#";$q5bL.S[jHDG<su?V?@l40"o_pAPi3]$Z`RZ's4.Mj`tN8RfOi6_4sA*CD@S=gk'9scXU4.)Ffd/_jkc;-$:Y7+
%$_Q6e&C'[A'+8VN"ekj73j6bJ!b+KAO$^6^J-jq!_o1-C-E;f*Z9]h&VaGdr1`Mk'gmg%%6B$huNp+SR&,)_?`B&tnphs\d@7?9E
%Is$M5$2mD$kEUs:7nZc"0XL,W0e_J.C>U?c6M"s^1]<tb#[t$:8"Mo[e+Qs6<8YiM6"o]a-;>FQ[Tirl%qNeL7U[8`P*)CkbDa5E
%b)BIYX7HJq9!u/MMdO`=7*-,U#DA]pGC;O<\.?UOek*<[R8tf]NP8UaN@+P&,2^ppDU@>?aBnF&Y3b*,.G\$@."VVM_-\slTl\j5
%E'&9k31s5XI.Fh@bUSN;gnntOD;\5TiW[0IdDClC&J>0h><K)g]i)@uK2WKi_nE9$JeL-$p71XVH0Qt%fVV7a;:7/c?q45.&c+)!
%,;Cp'-tXknL2b>`T\_^L#oNX56AM"^Gk9<)_&a#pFICBnOklK+J^"e^VH(]C:T\_8:Z6?'/lBf$8@Z`TV%?V4MPqbCQWio/U4I>g
%`q[F5B'Qm`YZ%#5A59^i>mN<-me'_P!>pr4m`m>JOSZjJGN*GS>_OFBA:P];'Z[.c[U>>]PI,bL-&=7=P6)9]-AM"PGCXkQ#_4"U
%kcLVB=@q'=b"ECc]E3gtV:?]V)T!X_*-1b)M?IPpZ5@b5$4gRdHJ3Km\]ZnK85=kHnMr=KY`/:fBB2+49>pFZ1&"!=p.3+'6]SeX
%aOh^@b06>,C3fl;N$J0S/qJ6pW+Xp+<1o9tc8-_Am6m_1XI5_,0;Q]W5_KJ+_\r\Rf(_W;nV1%J9nI1-],oR.#:*HUm+E75J.n@d
%=:;='+AKb+Ufh[JLhSS?2E]sH!%#H`/.LgbPoN0aJ8^<Gab&mD//p2m5W;>t^g2Y5?FP*qO<I;VY[<E[`+`E0lAFV&`#*$Daqjq/
%,Q_s8VMLslb2Ob<C8d<s7$[k#V051&aWM2(]8S(,jV`opD*)C\OE@[Fhi`+!.3QIB@X'r4[g"![Og=(WJF1@`&b*C]V+MED9\A:_
%XA\AC)8ZbcO&_ubJdo_'DUi9sN3OVAdjTSDoBM&s7^,""%?VP2_.9fE"#u_L@th!%MB?!7)%;4X"4sd%XSOaj161Pa39GaiGU7oC
%Eu9!$=^<?AaKoN#a;M)CpY',cECi]l5"P$V;"./p'oka7-.JLE!Z'p3=Dr'VGAf]98nd;9*p"05D@tJL!b#8\0ZMj2JRpcp9fc4(
%F;qNC6/c]o4eq_X,r'p>?NU"mGlRt_S(WQXH[#N5)74c@HY:1t!1TYG50Q8J%ff9OERTcR@NGMhYJol<^`jrE@t.J^P;16^*Ckt6
%2@ff6ZBjZaAi%/%'&4Gk)1[LF/s]-J3.!nYnbp;&hV&,5c0TE'D&+oiatm^cU*Ac?ho()nNcFWh,?bA@;^kZ\VU.",h&-aW1r<;!
%q/hCB+tCg+U:NEGKX;.UVa3)*ZaYW3o.&Dr]4*E&<BUO/-Ok"a@;Ej,af`".`07A./@h1iKS4o][1V]:\[%3aOtVto>hPFCi62D'
%64O-r?r:%0/'-YY*0'6cSH*o>_g/_8G`,fbL404Cg[+SK8NS(EG8BONB2XO$gk&fop6W.k950/-EuIqV7bQMX%_WEl%=fTM&RsT6
%llsiYGsf!?0t-e)@QZo<]eQs=qWjVc)H7]<`R=\G$U]!6>SRa%eBZ#M>J]1CZ=Ep'nM,31\.X7p=`=c<c.SWo3O"_._3!LlBEt87
%Zh70*DN(]6F(/M/Ki-rY,C8Cu$HNI/#)u(QN@cn9TYZJs5@o&e")"d9:)#dWr;cAdRPm9ojd3fG-ksLL--]iCRsj"As2u,`[HqNP
%UML[Sc)-rTTZ//\cMjbOV4Z4Y+hlF:5`i_,88Lap"!ZSY.(/q4lhgjN5TscZGNo1FmZ.SFej)<i:@/A7+@b#kp&W'.OnI?mLP_rg
%8Lq\sTGhnj"k;22rY_NAh<>E8JSBafj01U7G9i)[^pV<CD59Rhj9gk.Koda`8[cir9sgIHn^*7/irOOKj(q/8[_]cL3hQ\PbkT<%
%V-J[\8u<'fV:Gj&"GS?ek<nR$(n=H_>i`IOC4l6kedhbd%[)?p@D+PP%V2oc8W.>&iO6%T0V9<MZ/Z<-\-/@GQog1)K>sVcVPh?>
%BThBOQOmm$7ZX"84+ZM$Xs5Jh<IAPCk%CprZs!kYZ:JLG#f?21g<L&u!J0<b#C';)Fe2@(1p#AO,us&Mc3q>T0H:A8&%+#$Hre;u
%s(b(^`i@Z'gntSaW1]G=GB[^&=EgBtl)hiK6,7e,=fgG-'_8IHnppX?$6MSSU1Oke5[lo"Et/@A[93H&<npV41P=5n(cL3l:dqbf
%>SM?OP8<f16gSB1LGPH@B\j\l\Afh!0"q1-UebXVcO.Xc0*#dQ9fEM&NllNI()B2mI8H^aQo`0PVI6Tr"A:P+[+/*Fa>%/FncPHr
%nL<;-gsA[,3uZ[Sa%G9+%!T?F327>J!_g@G5M"8D&81aNCdUIr3>A4!jWTd%bR4o<NkNiH\gbtI#bpGjXiJ#n1^X^b`*.3:S`uFX
%cmThS&jaaP>D;K-nJqb?ZEfieN+MTT"&]A,&>Qf"P]LJ2UEkHrP!i*n!<dc)n#P^hDm?$=JsZHAoVl4TbSl"q`in/<%I1%t--4aY
%_^R(B`SHDZ<&QEFfoO,.ME"oYQic9iIaMR"2\lQ^;AG-?(+UZ<ZaC%SZRkT<_X,r-;?F'loWG(qGqObW/=]?OC'=GHIn?[8&Dson
%[j$B>Hj?=<SjqOn*q+.T#:<dcZ=NP2r%`Y0ADTZ0?Q)>gMMK06SOK5P;[o\'1mAiGJ,o_%pTNE;!(%,-?'"8fk7)fj9peCn<m%.S
%c&Fj$Su.<07L@#d"6gZu2-lH;W&YMXj1-n?lD9,C#&D_B7-2_cXR0U&Q/EIcUg7%p-o<qVGscXV+[IDY>C")$<`p`:"QdI(P-JP_
%(^aXV9\@.7QGqD7AV(6E>tBD-[9/"!ZFhJ(6RU9VhtS=6b\];_Jq4*r`H?dCK/g*+Ns>:.a'8GXG_-)n<5oC6p]`BGm8P23r@_gq
%_1O;#RWQUC;\@99W$NC)ZL.cCS9])mrGpZs;@no!6'X!_!a+=mZB2=V$M\F-SAnhVKkPQ>ASts:1i?-1bJ`@)S<<&Ei*$^)a@OUl
%(q1DD,Y"74ko=,>"s4UY5!0+8glre3GYNNC:(1uT;T2)HXp4Rm'iN;@GTmC[oEqRsFU=q&>-1E+S`i45#FihkL"^^&OcfsYLa?gT
%,t7t58,'lqOGokOeJ&eTlFSf(&OT=)U]*]Q>?&_%1epm:0'gA(GXa:1:/Hi\'Tn=.4q)OUE39Ghd\=EU6$Xt55J;L>i"g"tU_YX8
%\QFPf7g@ad!6D'XG8[;,AVJ'#:Ik)t8s6Rpfc@76<Gn#Nc=Js+$.cEk_)?'KKE5D:%DN<Pkt[,PU$c[?&tS)"FD]Ue=P\8`7FhQ4
%R>^V`#e`Ll:3)C*(Bl7tDAZQ%rFYX9Q5C=>lO:o16ifu=]8e\R2`^q4B-j51?:OWGH+0;CN0oco^2tX5\TI-7A`O+!4^c\\FDVjT
%_SC&KP$JU_X[?=3;)+fSC!r-/Q0(,h;']Xk531oB'neR+Uh'nJ(tT.1[DDfuK%OAdOE0%!2Wj@4cdAaiCk7$Ykm$XYYUY`+Xt=uX
%7Uf_M`bG,85c7K6!dcLZX&A\86mtQr]82"j$>$1rm7:_K,#f51\ClGG*>.&UF_CZP*o0-j::%[#Qlm]NaHQHf;Utim4W)^R,OWqQ
%A9n<_qRctUXhD</Xb"%>&j#D;'=/C>mFh("hEeO*+D\u]MitbiFag:!0Wa_.h7HB$ZK]s39c[\3+<GB.UEs*/W/%T-O.-s?(Ua2<
%g^6>aic&Rjkrb8qIAE739qI9H*;5&UWr,>*[/%Y61o43ul`t&YY6oX5193ucA.2n=QKpuagQ:cJ=Dp?BGr(.a/3u)bW#0agdi4qo
%lQ+-&]46buB[0$Koc3#;Y&5TP_$Mu_Rr.LGhjs\/OR(^EK?/E_HD]6ESB:?Pj_nsp)(_!Ljou>YpooMmQNeXc;VXT1;equ+<__hi
%_K]:)B>%Fc*3eodM(;5SPemM<%U')mmfERC>Vn41TZ2&7<qS1mO>MfC3"_/TD]aF):cf-%U)@`s:FQGX=`'o47;T.G0--3ufgn8G
%87e'h'soI:7KFmd!G&8oA[Q828Le=s,"esW2/54A<GTF[PAMos0.SZ=XDnna"?.<Zl)iut)(il#-LcD?ZHRk'JJ&&,hhFY@U(PBG
%:n#M2LD=a7?!WR->[B!PS%DQu*+30#KfR4f,.Ipq7hg"^8kjhKJLlTqRPNk(;64PbC4m$%X[d``)/>E[=EsqX(t5V.(8K!9&Oih,
%Ej(SDBk3F+_,ekj&rc4n1ChLmr+,0$c*4-XP;E1Up?f\XhDu"9]UL"5TnI*XEB*)oP=AmWc/I<U9j3WrU!/NcJ7M5D"j_/A?q-FF
%EJVFGCnI)Ws4rCiAU?6BNK4P-9gV6HPhZqP7NM_+]k8j@RlHsujqc'3F59YSe#W#-Rec=C:q_c^?F&W4mRK\,::;n!T&^dU*pZ0.
%1@)pl5HJ0s(;MVP1o.V;C&"Wgp\,Ee7t<R^3HeekZTq>pEIQeT#<W6%ecH=\:]Oaac-i*gG`aQgGBebb)(;BDi]um1p&9WS.'Ura
%;0<a$V!NnQWrn/+j6coJYYbh'oqQ/F5X6lDGDJfu"AuQY^mqnh(YE'3C$#c=P+5V]+W:Lg.d,:C%IApGJUiD2Rh&iGPjE]eD`_\5
%o%D@9IK%i*IJ1!jpQtp=maqK]*qf'k(]T5>q$4:-O!"[rGAor"R%2^0*hDWKXJ.j7!cjE?l5?3MYUJL@_77HS;'tZ$&jWFJ>iNH8
%?)9o>RG#"EmhO)_L>[iDJ]aGYj*T[uD_SsD^D(:0%Vg&SV,>Vr!jN-.q]/"?#56AL>P$]0?=5$&Y`gn.M*YB6]>,FQ%/Ttuei/$O
%TNPFH&:H$Yp,(VT<956.@[YG<)1DpfM`.#2_mZ_<+\l))H>i":H%:GaDS#W>hREJ(3.M##kc4d.M@*B-d)PCJ[G7uK<5aG%`n#W=
%DP.D<CTtQFciQNoNHH1odF=IhDsJlD0?6VP(p1Z-Hf+N9T<kfDe^>>C$])qLj7"H!4Y!<B?pD'=GGhLbK._](%m:9fFcS^h>8@P_
%4%=GaorUIKg-jF=W<Z6BO.NIJ7"uFX#qQY/HLJl1c]M[%]SABfi!4;N6VT%']0F%(T5WR9=ST#l'n*-H!;o)7-;17ho*L\*pCbem
%MLA-A<7]hb3uKWWqr9cqoK*@;;4ogt&drY>:(ko3>]G;Q@mAcW:fi<]$ip=DS`XG_NG6.^ig8L`](JeTr>iqI%^Zbr/RT)$N$4ko
%9Ma(g?j_`h@_g*#-PHjoCaERm:V'pX*sq;^DEKE0re`$s!,@WZB@6kj,aYNrZC)SS$uB$`c;sT`F<HTWM!]QM,T.$_.;"sH`j#5D
%X53Un@`?RTUCOm=Z7>]@4riB*O1tP*<l]%eX/l^t5iALEj,pM.>9bl\Y=/jW76tk5H=M+>bD_0cTUB&CkL!e9Q&*%-6U\]%fcZrU
%''N7*8I@W7r,kO(7\ZSmXr9'kUrNe\6kQi4XL+':#MH'+BR%<ME*<p;KagbU&UQD_s5:e544_a+<hSPTqZg4(\J_^YW#i>4_!Zr%
%5*"9uk&-9c?X4s&J^tJ)$J+:*KJ)O!LRYSb+IQG+d**VCa(u81i+(Cbc=+e2O;B<,N=d)us-3F/n-ZI[YQ5+hia)_\>"o,]gRjc>
%3%^8\MMa[hl')#i:Hna.C];4&)Xtu8/^XMi4E$;g+WJcT*T:n?`2K_HJ6NE<'Cq&3G_)L;O::I%S-((AG6F:i8;AGWKSG#qdNmCp
%8B.*F],WQ';/K>9%V7c8Ps(si33]T5nrn2e^miYl=snld&YNBcrbRlY4oO`:NrD'MVOmqqjp7,$_-BC$IauLhj*WXQ*-#P"C<MU=
%Z5j^BiR^=qH?7I3g=R9>mqbta6$6nc*"e=pA8<tMHC747k%-m&bm0X:\t0@l-"ES(WUFKW,t>m2=;3c[T,>L6%lY0@XfZhKR(4Z3
%CsKVUP:3rXjkc+?\P69fj=<-'rB*mCkS0]_5[\/a]822kfgCRT=OVn"]t*aGBD):6@c=]"(<?1ccnHm&(.-&E\^pl@O]YD-]5?Z3
%AXTYkSutCm*'`AscRS:aaBj[;4TI:$KjoSB)!2aqedQtIqC)eVZ(ul)T7Xea39a#T^8tF!el\:*REJq5_srM`L]-qQT<6H<LA&iP
%B3*9`oK8KQVQ--,&s,&$X,@iI&td\6S]SfZJ.No41q;>(,`"+=]2u9<ZU$]N1BE++H^Tf2&D=!-L"46AS<F:u)9-`(>])QTA1=4p
%e+<!"'G.LZ\@RQjk*=rfdPQ4C'[33s<LopZ.)n=^8[`djP-X6e,K-qVr^n=\,JAUPD_<:X8m,/YOUS[-5YQq,_]`BbOGQ>L@FBj0
%^#d(H][n&+>%q^Kr8BQL1'*^G=K<Pl/-oH!)/n9t&B\mh]amNS/7hPPL_-Ia0#Cgd7Q\Q4\UA3*L!BR/edGc^+XBIKreY_7b&g:B
%#Uumqd%edb7eQ#ege7QU%$-/>H;7cacGo-`^h>+!M%#OOr!-DFZ8k"p2KH#s1'"IOVQ4]4&F<LHA5nS_e\o/>_:h/\LcpW(^H#lR
%QCSJa?&ge&6:L'$+Dal]pKL*nMKF&!,Hl!q:6)t6;_B0&J:`tA<71.uR^d>=6_b60rU$M<3WlZ=e%3%`(.h>>X7)nDU-Z').1ZT<
%6Gkkciu<jW#Uo0sdVon\=U?\"0O%^!)'5\]Je)ITQ@np\D^P#MgC\H)V,BUJP7[cDBU0-.(<G"29EA6`"6:(79U#m=l=Fq@WhLJ$
%(e0bl*r5/%+YJIAR"t4QU]+VLi^CuL9c7nuh]%(3Zd'l$1M9E4c;XnET#B"$buubfl)3so)#CIG-"NQ:oY0=d>IkNtd;"E\4a>s\
%^]2@7p_PnBmAV5LYUo\T"f4=(Uf_WXh5aeS8(mQ+%3egZ4Z6:;"^0#B8cTbW?P;9u,_bUsN5D;CWeR6-3s>rYe2rc4))?gP5rM$:
%#?f3s_h/\d_H2U5-C'Gle:11#pg?6BF&c<QWdrFE'mY9k$o^?E0$O<UdUB%:"*_pL'>'?b)Q4pq^CYug<AEPj+`MC1$cCVO''f\M
%QlnDI?is?k;i><JdHO[h7':q>T"m,A%7p>+Mc-YN]N^Yoo]+Klm^R`rXqkK[(?]cc[_6cC"FI@jCW/El7d!8JNfX"m'..A.<M#)+
%g%=J7;=`j$]"[o5'nZ]FFk\@m8;f.>6/?i\IJ$OWUO'tNK:CY$I6B)VEUj/JKgG.pd7dej%-r-B7UGfEaglp'(mCc;gBe2QTi+n<
%@MU^T!3d__ib`0<`^,6JE,V&7lqX?@#+MB[m*h0bABO1Xq(X6I$d0gRKXniOdK1B5P/-BW#/e,k)m>`I)#`$R3>adaOfZC/R>i"<
%ZS;.8YKXYF3JoppL$<4tK3>?2RY\pD)7U<%JPF?&[]?UE,7ZPflqcJ81`NI8H$=:rUo(sjb\IsM,V*Mr;D3;cec8(^Xh2G@C3n&#
%Ddbl6mDa-7"#Y;"o(M?o@iA;F@ULPhi!3&,V9-a5dGk$J#4gL,lYQJJ#4d&>r8=5<1e*klLh!rbpuIF*#B`M`cGPj5EI3oPggAh^
%YR")$n=t?F=5eV"88p<,ZYUG*h8Ps>_Lon$ZDcf)(,]1_LTKe3r`,M)G0^.g-*3O$eP3e<[fJn(8RMq"[J=1olBJ08:j`t@/4)Ym
%o$5t7e$G#lqU-%Rr<B-N932hrhZHT_ZZ"a,ZXK<N4I<cq?nK#jlG`NS8q(t=9eJJ$W*fJB%_X>"'!$pqY*mNNr#CZOp&W4/$nI\G
%OB+*TR8rS\ELkaEJG)BW?HiE]W-5D4hA[8YrlKJg7?X-WQWdpITGH3HR\LN)R-SM,nLQ6+7+t0TD]7#')5`hF]O"YF/!"RLH^UjB
%bBQXKjZM02.S:lUFgqnNbg:^J$F`;pLtot)DqWe\g#W^s<>>SLSP9kCb>GN@fGNPa04]YRD?5?Ic]$%rb1+3t/`_M!DRW=5`]KQ[
%RkB4921=m"r:p2#0^/C,FAC2*JPf+7mQN]ak\TT!9:>QFO^LRH<L6'PaHFQj@\]^S\M=5<GV?R([P%;JhQhH^2nBb.lfIA4)tku)
%jD5\c)hZ.rZ!99bjj(T&UOp!d_QksD1Vk@(M41TO`=[N_9r9(bdufS[b:g&.COW)o;@Fc.ain9$Ne9)RjY?fp`>>cQJT8.#M&Ro.
%W[S/$E<OhNX5aMsEQiMV;34@Y8VE1UbbWdY'W$AuLi^AV?CiH<EYO-`YDslWi$YBS5&Z'L`F:C6<V\AH1p[6<Oss10P:@PoH.-^r
%*Kkc+YK-'EKV-K-/$#PUk,O7`9cLJUVDB?=Duu\-Y;WZ2S7H$T17>:o,nSL$XY.sO/.=Hoca3s3W+oiNZ=uhBPb!QY0;jOkems"W
%BZXp_IO6;Y'F75>B&l`&/:Hs/$+ntM+Rnl6;@E:/0J>Ca,TJ!ghOlT?AJ^`'^JigU,^D-A3fXBcJ^JN':6G_]6S3039JIi?c#4&*
%;[N+8I9bg0>^c1c2\$]X])X3(G_s:R`?!5aO?!J;"&`Y0GYdgDGsj5`UO*'h.%N>\CA/'F.i1F61=KO24Y#HcL,5;MmjTm'^@c?X
%pI!7L7cY8^5[TsfB@%EH(Rn1QK>m#:@R@"UCiP*SMp\p*W6Qr\@XS#'iRGI"lB.]&3_DY:h+sk'qIlO#6XG>[2@HG(_Vlgd$?UY)
%k7IDI`2<_U[Y5P7Z9V8t`spQp4R3H3LXiJ.(;s-ADBR8+'L-3<'LcN4P=A[hQSm]?\Tm*GY`auW8Hq$uIut),!t.@F,'^=5muPNJ
%'8B#LV7"UX8lk\J`sZm_BAa9d8IP[+C(AV$QrFGtm'PsfZc`b<TEal?S\ZZI*WsK1[!"?.DJFW&dbYAfW[s$)G&efARBQqnj8Q#;
%LI6%oNq)@O\fQShBV.=PH@Ckg'H3eA*&"+n;^q(@fVmX.=cBEfl/:F-NKA/tjl$7KPH:JL\JQs+2$*!DJ+?rn-/-a@5(O(<&-[Mp
%nDdM<Yu7sr*/%ABW9A]B(9W1LZoR_9J?`CSH?Ws+#='_G2U\2OQ6T')EerP@R?n?`^@%)G)/h9"9dVgKlrIEKjPFa;.Zb0X>*<8t
%?W]0'oh$#UR-3MHTHaq#)o_j!p'^698b0l<,G*#c3OpemA[\s^c[bTU?o92W1H!OW]fS#^?#h]HpSF3?&;RgAIc^_Y1RuSjipl(G
%;+&6=4hhsMf;kgmbhp:3%Df=DFNqCR.uDVKmMZlsJ6?O-cBaL`X`_Aia%6KK^mY(E-@<>nrlf@Z0OR=\FAZ)k>&pF<iRe,4C#C&B
%^CUK%LiB6nBW%=&2E4:[@__Z8MMiN,l,WfWQLo@deNOQq3]R@gP0^o[NhXD9+u@+\Doa]Hd`#'/EY)kC=@Tj70.37Cq0kS;<uG'\
%-dB*Hb*C/,%k&Hag\HVCg"@54noj,9@[()Z,C;0?:j7_GS57S!S^"'<rl._pR?#4o2Yil<>#69I[o$uSU8Z?>3Aa'E]pV;@88*"P
%%LU00e_'Z]SI4qR#O55>np$fr`dnmCn'WCUN\;o_!l;1ZcsSYA<B;B!$7+&K#'"&Uri\If>Gt(7IW[n,"Ou[9(,aa9g3HXL1f>K^
%X0<LKI:/%?L=H@*Ztm98s6c(]&!1(42J#arAmhNGEpj!bX2lr.Rb1FU/E,&h`H#EA9[l-<dY^EnCOAQg$<^0pSN?br',H!3C'R1@
%h0Rk\_3Y_BmF2l>/c&klSBJu@[C3@n(Df"ih58"hfVoffjCrZn6m-67K=B38"UhUTXdr+H?l8M5dPh5ANZ+J.UHj02aI3CsFh';Y
%"JhJm#sTDg7YF1hAQN<*'"eCl7/N5W)%3"d8"O)5Frt"67BRbZ5>8N(iEa80d<:9fHi[cqBY)S+#6Y(gT,10=poc\O[iS5aNJ!uJ
%K;F.eZNaI$SSpZEm]Bk(5VR5Pd&*IooWbW8"!%4J%(>CGlQj9,"q]>8dRa](@`/%a#`j`:l)`gGCduo50G&VIHr[UpQFNk>2nKV(
%))<RB<(F[/bGh\t`SDuDaXg&4eO0W43>nhn&AU3t#%QG_ZS?<dQ5%l^`?N5K1IL9oKaa#4GG(j4o'[Gm3_0eBPhuSV(EZ@VS$Xus
%oH'P:;C5n[PFBAI>ji6eA8NHhPKG';SqBI9_-8S$GuSsln`>C'i=2\*9J])7jN']8Xr$W$59.H0NJ"(R#Er%s>$E:+3&##iRf[#^
%;SCXU2I^.$]i^I+E!Ae2D,bfuQ1r\>Du@Gt3gr=WS\,;J*R]*fD)%G7Q\*k3M+/)9kq$n66]XuK]oJ^4ilE1?)OH(HrX!&2M+oT#
%W@_?K,'4!i.c*MWc^5F!LegGm*Q;MJT\'mhD&LfJKSrUGGJI7REpWj?AU@B71'a=gb@I_%*b\R\g$D(E"aZ*$PAhd9_+<`qLF9K!
%2ED"`cqM>eT\Xo$7!:^mi9aoHhB.fq-]FFAKFY=o,ArDg.aQ..0g(D2C_GpjVG:7F@e^^eqH1/>l,jmFKe+-V#,m29$'!eM+/+Kk
%%@o2cK9q3t4#lVSY!Z2?U$'"r6V8Ej^>:11:W7;nMc7A+CJR)2#9U?L*B?9R.Y)24"DlqCfK_R"=oRSn1g!c9)9o%1Oj"j$qkbi0
%_jJ+-VT0aK=FH).,tY8[EiZ)nSN9O2mID;Wf43.TjX5g+7Zgk:DHk^#W7gCprkeK(k!>+(63^K4H?WsMUElFj%&r6p=U?l-JO'.i
%$p[sgn2R+fmS8M:M1bj`PLclp6Z3oJ!CUb!B4kO*]*q=;KZmLAGcg.p)OU@5V59l01'mt,9YC443M'b/,L\;qAQH65;F%Jg$pZlr
%b^'HD2,sdJA`\qFff"Z\jd3+_a4ZhYcJ0Ua++S4JA:5up$VuU8f@$Wb9ID_ZUJEsncMTWPro=HR%a-ktH(jc8FuC:l]8iNkaMt+h
%ZI2A.ZE'8bk7+%-GSY%9P3n9_+]!H(Q"FqZ?(aaW0?)..cK*(I^BmO$LJe$jh"t$(:Ce66j.BaWc];8ZdB0!Sl!n[DJ1_e!3].'a
%iKUS\#VDb:'GI;]N![Lc3%enrRa#A*@([DGd#3[S%O:'cLGZ4U<M!8%.D?oZ,C]Xb>BUo5?ESh8`NZWqgUMDt@</&"k[LEtltfSe
%EcXh(Qt-l:lNQt:P]_N`7!k6:VDHn:l_>3I`;s`[PlR!_CoPK,"^`VP>rqPba6L&NGs"tLq<g@?FY8$@7aAkXQNnB&?O`\jRJ_eP
%Tp>s>VQ3,8WX[7?'gf(gHP>%7#QtSGLkb>Z9qFrncXnijGnkX`J>%>+f\%W`2,_']oIW-D-+hsVb9.".L_C^eJf$JG'H9Cp3(a/e
%&%D<I,0-S\F#=00Le]T!BoVDP$>S*FhPof?FA^QZ^]-m9@<_u1D1;Egr;Zf0rqbMFOoPD5L:dJ+pYZ!@\GPQtooHjK%$pems7>R6
%)o4hIUYsbmi!4Kbd6T+]I;g<R0%SV\h7TkJ("h:R3Hu,7XDLG`!%ps$ZM!;^3=`"Q_/k,nlI_Z-42\CPiAl/A3I'LCGi:ZUpk@nh
%L$.BJkMYqJSq@iNK7=,7knfqD(S66qSq@iNK?mkK%UOAi??crTX7Cu-i.^@06n^Y-00BIm49mN%#;81E00BIm49mN%#;81E00BIm
%49mN%#;81EVqq!^F7@%fnA989_K54`F7@%fnF'gX^[N5Un/T+1*5(b\]^QoRn/T+1*5(b\]^QoRn/T+1*5(b\]^QoRn/QiT_K55"
%$dZWscbU"8_<3I6#;81E00BIm49nptkmPhR$dZWscbTkV*6\N-!fsY82aB^*X?R>p!02AmbQd!d&18HSPiiqh3q_6_-QqH.p#*O]
%#o,OsE1U!(!XN;pNWbiY;S7aQ.@dePH=Bk0A8@G^SPsh+n#I>XDJM7QOl[REVc6,!,QURHjUA4Z"5&hnrA(-epWbB4'G]]24eK9^
%IT"n(>U%W,ZOpVe-H"-,>AI:jm&/1ZMln@r\cQsUongnn,fDPENc`D8e"rI?5ou$6H^E%@CC8M\8EVd(^*!*srZ'\eP2W-$Y7;nC
%f9\-@I5$_',^th7&&O.R)I(eR;C[dI8P9i)oup$2#i%G)!SN<X9*@o<j\(dH9@P+rP-`*MRO^LHp^3EX4a7-rWnJuQb1VNZ!$t':
%DuS5Yhfa59"n.u_;K27_So&e$SF[6f>ii5i/C1J7(K$XndPtgs!_iA/F8DOQ5(O;]_Ls5TY;NnI1NaeC\<\+&5sR:;ec8.[A:\gW
%j(_-C!M!A7.1BqWl(S'2\&i.)*;8hLZe/MWO9si["uW.sKE<@hEcfh%Y/#5c;u]CO2?o-RW)Q_'\n62h'\7l39)f,L>7dgmLXq7p
%Xmi+^N6,C79sP8/2,7H>'1R()n&#dmL+UKS@)LDOZ;E6c_81N3GI?@=ec^BiG5[5V\o\l2978mb=\0a\_/pfT)HH)/jC"L1DlgK-
%(Aq$oI-(uW8h*qOYY#0-d8iOEH/5DC?8%'^Z$^oC.:lGYA9kC2W2KgXWUqJXcC-!5O`>9`AcO4k%o4\!8WGHMU\,2)ehRm:#pVYs
%#**%ceBAt^q&e;%b<j=GIs?nVZa'EFU%6cE7TZnqnS$<"KR^5E+i\dRCD*)M8&J1Gh#"c.O6<Mb/L]9-Ak44M]?0QE:sO.IV,.s3
%A3CRa6X+7F?%G(GSTm;U6>.BF&\o5W;iY>3d(p_A,(0c?ELM0#k85\RW3o&U,[$E37e,)&'Q"c)F7W'%"RU&\nqhV.hY%O2<B4g,
%Asuk(US]-Q)8<C2cAS<<6kPKor2+8j.\2Rn>+-Yg(ZaWpa!+;)_<>`%0Y1gt\E-P$>lkm+Cn-i[)spj,oh]Ip!R/H[TOOZts(MQ,
%\:PSIfJo'F6.5sVDAkg.?VOHSWXX(5K9Q!Jauufjj7%r>BT/;+>q4\T9fBq*l-bB5o#[M3'*>mE))9@nKSm2C=[[,]a*<QIX&-A_
%l*kVNJ0[PpF?/-Y1.Rf9SE&$;YBb9V:Tt!'`Qa)sN2=kO+VH__3CbRQ9Rp!)V5gjX_s^+u8.B6MahgHC=]nhQ#70LV;$`W+GLRPZ
%)ZJ39]K]teg,"@6/6MEg`7!LephZmK7DV9cJ!C\[ouMp/`fi5,+DZjLUc[KB<53^\`hg?"_so`M-QC80<<(@4hfa\R1(G9VCoCo%
%i7RC9"J25YKd?SYQJ'JHMZ;)nT5NTXV5Z<\LlPG7Ekn@:F<<4u"_LP]9'i8(5QY<p3k$7qQ6YZ1f?N3O<k<!W,/RP4+9r->.mC3O
%HP44:K:J:<Q>/':YK;0WL`f7,UE`UARR>Hd,V=pZ8K<DWmGL1eZ^:)r=`]BsJm]GAdZVjj<(5^;B7EP(BP-b_clu.Y`RCNT.gFN:
%M5BE`5WAfL-r`nS1CQ28&53J.(!X-2CDNk]1@W/0&;=/\?YaEEBoWBR&P(-2Fp+bYL$ABO(3Ssd&NNeP8[R?qAV1ToV1GYf_>'DQ
%Vk1V=PS*l4S-3=%^hho7'KSp8a@<I2:LYcgeI]nR6F\Q(#Y&"*ASJ``,*2lDnXYA:_g/^"OQ"U.d#.jF.0a'aB&'kS3Z5,VrJuXa
%lLO""36(l9%ZfJHTAF=S/V\7K%-:kOA7#an08;0/0bi"TE8oh?@,bgX^)/nk&QiaQ`'s==!CF/.dSf)3-P`:*/b^4Td')%rb&*'C
%T;DXD;s(uDOd/)FUXY(#WaaEcG:=IDZ!iHgSS?V),JgoI;mseS?I4(lQpnd+f>%MlPL`!YDHoL+*"DY7h4]B'RYJ#r$IkR`;*e&o
%(fA6FTs2n6G8QWVk0)!%%pp&"+>XrdRl?.Wd:b28;_)GZBpgN&"W^q>?!;!Ob7V^m^/7`./@.80aJV;9.?FSdXjRL)ZPcZo-4/0/
%83QPpleD^2!&!g"b<N*uridl8?6$2(;l4_"*^SE)r8\2kE`>+sf[J+`;M%&f4<PF).ND$V)&5K'3soJk,@6/_26k'$8$;MiWpnA2
%`=I8sCK1n_"N+2jHT8U\P">b+YkKauDGE[-qW@:bhNrH_q31>urUlLarp&m?+'sHgRtnIcP5tFWf=u\0?[qtLhqihXjkmcNk,X9H
%hu3N>a1!rK:Mr$GE99tJ5QB9gf+3(l\,PsA=)YkLiU(jhbq96.dB[iMn^DEkqr[9i^O#k/f0=`ajd4XQq9*.CYOB5Sq!j.*f0$\7
%=5X#Pbua3QrqR(Ll/WZ[rO:ZI^4(>$AU<4`7DJc_GHW+&rp%D(MU2=(O*a^ufYPWN1DkR<^AI^Z^\Qj1:Oi2bf0=Z]qVe&qI/VT>
%YJ9nLIN7d)rn$%VHgphAhnJnN^]40-\#8,3^bGT*dUsHd\E"H0]cT5*QNImco"+=lcgY9D)i9gV44aa^afk*`*E6>?*C'MSYJ9qm
%\+[^!BVE*!Q[ec'lehWkVrp9.g"cW&qRb@?hnS3DI<;(H1XaTGlAW/3U2l;A*^qD;RJ8OcJE>P-K<2!jch'f7!-@c^Q>,>Bad=ZK
%pQ@h]7t4;<AQ7\tm?8&/7sWprS&\!<1/DOc6j"<H(rrABTiZhn2P+5SjTDno5^:GLK8<^aS&@YF6%:Aac@m1H`4Md?^\&cF,b9,@
%SpWY$GTA[L7A.AhDslWH77^SrjKd"<_X4;G"1''>94jiK#QS08'$tXU0Wt6D**?,D4s=P*i,'S>6m909:U%&W#?L3<$d;t$b/gsj
%)>O/b.Tdf/Z"Z\Q'jM-4=^*5t1i_')'i^k@$TZ/f9<](f#$D$ULtsp89l<36]%8Db02/M`_D#u$MauH0UJG4U,\Rk0TiWg"k-t#r
%&Sa3AX]pNH_Q`=j,n<ia>H_PHI#*DUEaU?)V$mZs84]5#/VmomRUu`sbB.,W$s]H>ZI6tZ'QmSOGq:2$VCJH-:$r-Pd)KHj'@Pq3
%=!uZRN1(/0d->fqYo@7U"ALbM0G*_Sl]3=##Ch:Y#K0q3aU?'<!?"VH"__^t!H:k5N>ld\ZU[U1+g-E5klSp;P(KbN^H.UhbNPt<
%@`TKkARD0](em,nAO7'HC<>l-;)],dRO:6a?Z0`eURA&,#*T-]+^?pXV1J0EQ4(LRBXV*rQe*Z**Apd]474f&[?YL4L78";)tgnk
%Wb8C#!KJ(fhl;C;U$bND/oa.R(i$k=GPNC1gOUPNCOFhT#NpnJK9sR;JGhWsVrlOB@G4&&?4*+$2Yom0>SjsSZ=NLC$lY>lb%0c4
%AfH+9_$.e0m/9&E1j.7K_*18/#s2`WKb"c0oMQ6&eR<\&&k#(9&A@c$WW8`'aeJ*PS>U(\ls)pD%"Zt`iWDRio<b]YSU5h1T>:Y\
%Da[un/0kuD7TpIVBnJbGC^N'.WGIH:%,9`Ki<OWC6K$EK@I:c@;rfth!eoZY%E[4'>&lVNhhu8I)QR?HJi++fjr#eak`_pf&uj#U
%ka;>>Fkd:&O:XnJmXqYU?!5T%Spb/(@BFP(!fsWGj#T*!A<p1^TW)$%"QCDE#R.3=C4V!;![N#tpmgTSOlM9mYkoIKdhW8(+t5[t
%@Re;(f6B]g"[RlV/;LCYg?nGPN%G!:S%KR0#7VL/LIWEB6%_lAP\.s%.^=5s2tXcCk[4V.hr<n[d<$]<Bb\W<MD$8SU_kj3S)g0a
%IT#<=+I"952GbRk];L!0T<:B8Z29f\fjLaDB:TcJb!\QsJ_\XYKDuE)'>H'fKmqW9o_,+]P>*eF*fSQp[H)Dh6LVcEIE:=/R$LqX
%RL2*[2!)=L@-s]D/'RE.c_M'c1_d1BdblhlqBqrCjSWcGggEV;)b&,h3,UKd'6G9d8-J-smQJL[;/h'/q&h!KdaA:q@J3#8dF*>e
%os:]S-N[o.WPJg^.EuSl5qc4+NkYG"32@Sms,_c[-2+8kB.V4M_hdTlAR1b+p<r<cC?bI#EH.;fPXmd5`(b(UJAY2MP.?[!>LrIf
%B-N.ehe3<)ZfBE9"-W]jP-SG!"Nl#5=I``gBj>"-#'2Vs[eK(f]4Qn;IrjsY!!fMh0]sO"-H;^G%8EhgW[hd\3]+0lYiuVH[fS&^
%.6G6BFG*\t[Xe1Ic(Q6p[*0F!fq9]1L2N6(GtW#aP\r,]8p]'ZF7-'A:l]hX*R(f'NhoOtmLBSgP5!fQ(=lb1-ifiZrkag-s0d0`
%>Z6:R1MsN.-/;3qD8+ph?VG9%,(,nM7S@,,2<<j`?R_.tb=.-.]D9@#:'uuU#F.B7e^Fo6];&1%7%<fE[!_H*H8au4%rctYk4rIH
%SI[^d4+c9%gd'p)L?TWTWrpJP1>*=gh2e5A>Ts'AN-n$@)+Vuoaff[,aUlJfdu,^MXqifkFQmNpT4DSAIWd_J)4"I\:P-1mp);(j
%g&_e-m[&tR^KQhXrB#kmQl!Y[0^P7tX&H6eAZto^#9rQ&SUqZATh0nH[Pg4uFFPukA4U;n#S*>4nKAs4#=43CA<]_$$T8e+Hn&qh
%!1=PVL`gA9CUNXgCaYA4Pj/t1&qfu_Ab(T&j;kLP,g61+&-9Mnj\meJ3\-=T0G6I79/9qBEBC%&:8HQ1PLg2P6FA@k)nq[`PUL(@
%D=BPXVQ\X76/I#V9Eh@!,jroc:2m?a"3*_IA][h-ZaM!50,$COel9@t6%t?#J0dqrGsQ&?p]U)]F$OLNIb51,N8A6:Gsn%0JN!_;
%'RW@To$1$t_g>+dB<-k"A+MZ1,J'^k"rMP_;Oeat=s\WPaGd.Y%FA?M;81bf78ZYC$^4N"_Z$KFs&p^+8,%I^!Re;3m'F230C9j.
%Bbm+eGSkD`a30f%#[N^Ar@R4uQW8rcIZm;ATO3WUhXCF6k8u8tAFU\Roq'tPYM]1mG/79pP_o)gqo;Lpp1uj/34DBkEV8a46i6jY
%H89?XPPj9FGb+Nf1;Zfr!$k31(SrWA\V<Z(OMPdV3ZW;MC*.[Q:7t7f)*#6"!b%aJ9HDsd[M*_XRr5-cGS2J#Po616aJ8g7X0O0F
%Bb/$7oNMLK+oinJN?bO[I!koseWWetHt-`0TjI(3oPRNneAmK68B[YCUL(VPioXNDaKo(^-lUXZl0-F%<A)UKPoRI5Bu6ISqJ!eZ
%>K&#/X=oaE`a<M8+-4Q=O,o>m80,q4jThDRb'V1faa>25NB`\+K!Q/s@5*<fFndX95F'%+Cm6.+M@2.Z6*^X=D\=OIY&Z,fH[e)Q
%FAm=86r?u%0p4OcUB8nf1p8uKPM6=uTlG;$?%kpn/jjP+,TQ2l>,9=IB(NHBOXAMJ.I[gX>8M!C#/O`S]-\Ak8Y(hA8@3S+cuC(8
%(UC'P'"a[.-FhiW(@iBC/!?kB,<hSg3`drt7CRXX#2?c,X-0Tg3Z+2Z;.B85!aNNjN?IrsCGC]%87K,2!T7:3%It6*m5In"KZ#0e
%Ha.8MU<(UuGVRjX@uR#SKNlt8(ms"7+lC-7P&H-n,_0Qmm(0h\@'G;j9NL-InSY%IOk<&^31h/OCB7]X,98#CAQB4NIH7\PZk&:c
%R0q.i;m(Xe30>1Z5!E[_Q?b-On?7e@&%cUES*Ji$3X)(IA<'NiK@mP_42At&=%ugMG8Oe1Pp%oWd%gD]^Cj)iZtlLd)Ku0+=q.uu
%C+=>SH*e/`1'*l+[C#ZHP!8!,-`[pAGE1pZndOhOp$M0^Mp1g$4RTW3T8q^S#X=l=4\,>tZb\uS;Oks^VNnbO0NLQmP>JY"fDFeg
%VorZgiLU7mf'#MDU\O\g6N<`%%<%,8.n"?aLkeBU_m!@,U,rul2&^EOCJX2D`C(HVLSO*Y^SCb_j`.%b*t"\i#);S4rY=a2el.<f
%L^KHa5l3HtnDI(F*2pNT6)@)u!2PL0%-")DD'H)o*"jW<qJ#PF,o<5U;&@phY!<Z7/G:m<^2m+K[Nak7NY+eMrG^fqp\]I^8_#NF
%P[[.Ret\(['Il(i?l(uY+;[JZAl@5>41.u[C:"I?JqrAjhtVggcjan!2d12T6Cm,Na(De'3tA!tB;oP\JG6:fi_luN`$pg\o&7Z4
%fCbi&gV`RADYr7F8`7hd`<u-d/IBZNiRLu5O9@3aD*)cicE2Ca!1%&hjbE:U?JepOlm,a,)WZWVlrWsOcm8JY8>`74Fkme!F+N.[
%&b&,_HF`'geRSojfTd(8$'kZ"&;/2MjNZu'9!G[#R!FUnf&?St&DZu8qtNo.fH]3g:9^./AK@^#e4BWJ%RFU6fR%M-!@hcBBBMPF
%9!4g^"S>C^;Xr44#;C<tr+a5H1"egmW[A!I4L9QcT<cW[n#27J=R[1r:::IPm<fQ*i6gDc=3W13Z'CGBgio`G('*9#-f#l*fo8^l
%Vg]Jam:+_JNbX:B*A7tj-:8:sgI4ekRuH2EG*f=9i99%,eI2NAk`?Zi:JL`RZ`3O^MXR[mK:!#AlVUE\H$,<HTtii[G8&kG7a3WA
%\jme,d2]r"6"?^`*"H`6,3!PO:j0B$8$$;m#';+a,Vqk(ABIh_l'S<r&2Voi+jP7G\$jRV5/j0^lTNT7SF9rAalNWMWb.TFq`Gk,
%27pE`J-Mh`_Q0dti0"[sP7)1X2(%!uOO6`G;P?&gd^G$99P>Yf2b[S5/PKuREqGRY11,q-g2pT+Dn<o&OYBI$OWe#WbM\^V,=b$!
%-PU;f-M.ID\^:NHQ%hK&<>5q#R.?i2BPIei%."*\WU+,G[G%(rjE$Jm2u<TTklDPPaR/^%m[C>9ZoSF<moi!+oU.6>>KF@RN)AU$
%LC3Nb\tP/%!OH>He^;hB@i"TT&]Y;E)7+`^<d1nh*qsCdT4BgT:U(h^gBKOQ)H+LI>1b>.lP^<&gI*_:HcB(h4Q?c_r*eA\ZFCtl
%OND;Xf95mYqqY,pf'J)5NpcS!()iP!8BP#.^'c41YZbKL"E9>u1jCgs=coC8U_,'8Hd,*f;Fumj`F;/hRgj`-k([F!ChCR@8h+3T
%XD/<W&6W`H,7YT1$RN(b)8q`SDS6QaZ;6f&Ul]EGpsiamH&#_:nMt^%o>Y+;R_m7-2a1X0REdH]F?ZEi_4bNKV0?$S.2=5E#q0J?
%=e=C'`&DY'IAI\ep&O%)$J/YMd`(_GQ87V)(rZf)C0)IFYAY-ckhd=1$@ijfSJbr%[AN36g/%l"V-$G-\)Yt++X42A@,aYtJq,#U
%KbRr7EXgY;%?R$cZ5:>JIei1N\L)-A9@U3dc-^B0_6`qsdlM<C3\1qq"f(Tb_9ueKH#bZ.1\["kOO$`9L8+M&0FSYTPI`0SG]`EK
%)O$RF4537Pk5K+N:ZL9gg__mK2CPgFk(7J(JPgES.`>%J$r89)%ET)#!qo7;mL#*u(-L10i`AB?Th*B1/asmGD(:9p0!W&o"g2Od
%4iEAV-WLE'%\V,>7UdO'$k=C!r0>am<'H^52^R%=QK]`!4MB.P48SY8<oF!O$L>I3peX0)d#OfRLouZ2Log`9F/]mNht35DBPf.+
%78N#eFltjKa\"BcUQW/b16i4Y"Lc<RQOBGqUf>h4ZK&TRrnol>@F=BHi4W]LF8HtR1sHMV-]PAQ@qSsdj7GD.mc^uq3k0\400?K?
%U*CpskWO.@oo[l0q@EfcaSj5;N[1)XJC"LN%\a<-J<!OBS4rV/UPX+?Y?gh?$p0Lcd!7]KG,k:Q)4?"1U?'j$k=`KX)nr/SB/DG*
%8:rTuW4!$Oe%jo+j8]sXrX*f)U5lA\"BaFaY1eG>oEpDn&,R4)j_(u)fsM"!:Ts/c3Z'XhJE>*biYo^GlWpkqej5X#GErA8DI>?E
%kp-=Z'1iI^C[5^b!K:-$"/:E>U-te^b\KXZA6CeoM'te\O[A/To'1Hhrhtj*%`@o0@P6j(96-1=N7#JG59*JIQ$D,\"\!]tmepH>
%q>'tL5%9/7XZr0U9j%Fj<VcP'IX:=LIdbsu7D`YgRH/<Gj'>4QPJ+3-kMECKn_uV@h`QNQh5k^_iE>YnK!<`E6)'h")2ckBdC8Ls
%.^\))SO[<\!CPLuG=NbFLRY`D47+`![>K*!4P4lhmi&ikGC2Bao8ORYZT9>'1^n3\$o@/<6G+&Z_`PX5*T(s\n(W<V#?$X':Zg%-
%>omFq?$=#Cc]0[ljl!p<42RZWlb#Eti."^.D.b453V:[JiF'")3n=W3a%Gjd!(2#_8u0cD0U2URjZ5WA;#<1_Ln5\rJ7i8NSY';Q
%onsIlQ]F/1N\GFZJIDGC"@H8.))"ah]`qd`:WZ=,Y\UP5O24)t5AbPl,L*0)e7[dbG!A8b!/]cQ-4S,>:"(8J]^*6EJeOP_VcLKu
%e<KfRqW5d*r3Ni$QMo96\>c5"M7CP6E-pB3#KPio;OkOtY,5*b.46A="+*eNK*/V4n^U>LmhkI?AKr=JeX.),&sF_3D#O8nrNaH(
%^Wb?N8+1TLEVo"-JJm/*.Ukef%R=%np$1PaC$6su@^N^U:fgE5LA9-S'6Q!/,0nV'F8rBXZ#<Ip[&K/mR<-7_[5E]TM>e>j4IS6f
%h?6]F)0`YCk_?gLIIj*"nDj@SAYb#GD0XY`((/-G\njqkF\t+m`"8b3!U-'n+]o?-am9Pd]NRFm/.6o@T#Jn);cKj^BO#JU>0alD
%,#26ga^:)4[m0(0LHD*,QuRXrBa-K534Iu.AAq*'9r)nBQA'RcHae(gi&tsp8:3B^p2&4r?jtYFH)n-l`D!,\il,@r@O@jU`;*kK
%.Q+9$ja8YTbJG6cCH8Ua^)ZEgX0iq2?paUCUNs83,AKE^j\h,_<F%6=aM>u_V2RSM./c>6b,"l!3ok*+A+X@=j_?7ATRO16o#ZIY
%PP#k!FL6$kq=4kiZ=]W'"="16]11XM`(6[SG8fk(Mu>C4$Rhc#NNM%OcHcpTgRJb9XCorj,_sWc*G$L0Klc0/%5H$B'O.Tf'DY\"
%PU3'oH2#*C1ituKcgPJI7A,B'fdMYWNA`D;_-WtFRc6oL,n!J!1I=bPW*TXB$/aFTg^M`\5erOS9"AN0)1LUR:iEDicCPt@18oqW
%8$>8f*u$TP!_Y*"]Fr,#XODZY383l#`sr@p4S#A,m&(a]52`*i"_?W_GTIp_3DAo:_P;J8=G)*feU.55BDXS0n_9]&gOO*ilf\-\
%H5Bg[kPLR64S>b'MjRR9#I(O_Mf;7>j)VSHEF@!KY4jNd]p.i29?=F?bg5u7PCm7=4kmGZ%>7XMZ[EcE#(EsuUCh[>n(VO;`(*c)
%l?H/*,c^e?n,'k+^\u,)li6n;Dn`f4rJ.l>IK'$Tr5Cn7rls2IrpKI2%r]5[lt=*/rq5a:hS&pN)a*6L^TE!sqos>'^]39In(uoL
%s4_IA%galB(];6Zr9Z`HVpBhcrrD*K`I7~>
%AI9_PrivateDataEnd
